

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun May 21 11:45:49 2023

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           	psect	idataBANK0
    79  004E90                     __pidataBANK0:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _LCD_INIT_STRING
    83  004E90  08                 	db	8
    84  004E91  0C                 	db	12
    85  004E92  01                 	db	1
    86  004E93  06                 	db	6
    87                           
    88                           	psect	mediumconst
    89  00FEF2                     __pmediumconst:
    90                           	opt stack 0
    91  00FEF2  00                 	db	0
    92  00FEF3                     __npowers_:
    93                           	opt stack 0
    94  00FEF3  0000               	dw	0
    95  00FEF5  3F80               	dw	16256
    96  00FEF7  CCCD               	dw	52429
    97  00FEF9  3DCC               	dw	15820
    98  00FEFB  D70A               	dw	55050
    99  00FEFD  3C23               	dw	15395
   100  00FEFF  126F               	dw	4719
   101  00FF01  3A83               	dw	14979
   102  00FF03  B717               	dw	46871
   103  00FF05  38D1               	dw	14545
   104  00FF07  C5AC               	dw	50604
   105  00FF09  3727               	dw	14119
   106  00FF0B  37BD               	dw	14269
   107  00FF0D  3586               	dw	13702
   108  00FF0F  BF95               	dw	49045
   109  00FF11  33D6               	dw	13270
   110  00FF13  CC77               	dw	52343
   111  00FF15  322B               	dw	12843
   112  00FF17  705F               	dw	28767
   113  00FF19  3089               	dw	12425
   114  00FF1B  E6FF               	dw	59135
   115  00FF1D  2EDB               	dw	11995
   116  00FF1F  E508               	dw	58632
   117  00FF21  1E3C               	dw	7740
   118  00FF23  4260               	dw	16992
   119  00FF25  0DA2               	dw	3490
   120  00FF27                     __end_of__npowers_:
   121                           	opt stack 0
   122  00FF27                     __powers_:
   123                           	opt stack 0
   124  00FF27  0000               	dw	0
   125  00FF29  3F80               	dw	16256
   126  00FF2B  0000               	dw	0
   127  00FF2D  4120               	dw	16672
   128  00FF2F  0000               	dw	0
   129  00FF31  42C8               	dw	17096
   130  00FF33  0000               	dw	0
   131  00FF35  447A               	dw	17530
   132  00FF37  4000               	dw	16384
   133  00FF39  461C               	dw	17948
   134  00FF3B  5000               	dw	20480
   135  00FF3D  47C3               	dw	18371
   136  00FF3F  2400               	dw	9216
   137  00FF41  4974               	dw	18804
   138  00FF43  9680               	dw	38528
   139  00FF45  4B18               	dw	19224
   140  00FF47  BC20               	dw	48160
   141  00FF49  4CBE               	dw	19646
   142  00FF4B  6B28               	dw	27432
   143  00FF4D  4E6E               	dw	20078
   144  00FF4F  02F9               	dw	761
   145  00FF51  5015               	dw	20501
   146  00FF53  78EC               	dw	30956
   147  00FF55  60AD               	dw	24749
   148  00FF57  F2CA               	dw	62154
   149  00FF59  7149               	dw	29001
   150  00FF5B                     __end_of__powers_:
   151                           	opt stack 0
   152  00FF5B                     _dpowers:
   153                           	opt stack 0
   154  00FF5B  0001               	dw	1
   155  00FF5D  0000               	dw	0
   156  00FF5F  000A               	dw	10
   157  00FF61  0000               	dw	0
   158  00FF63  0064               	dw	100
   159  00FF65  0000               	dw	0
   160  00FF67  03E8               	dw	1000
   161  00FF69  0000               	dw	0
   162  00FF6B  2710               	dw	10000
   163  00FF6D  0000               	dw	0
   164  00FF6F  86A0               	dw	34464
   165  00FF71  0001               	dw	1
   166  00FF73  4240               	dw	16960
   167  00FF75  000F               	dw	15
   168  00FF77  9680               	dw	38528
   169  00FF79  0098               	dw	152
   170  00FF7B  E100               	dw	57600
   171  00FF7D  05F5               	dw	1525
   172  00FF7F  CA00               	dw	51712
   173  00FF81  3B9A               	dw	15258
   174  00FF83                     __end_of_dpowers:
   175                           	opt stack 0
   176  0000                     _TMR3	set	4018
   177  0000                     _ADCON0	set	4034
   178  0000                     _ADCON0bits	set	4034
   179  0000                     _ADCON1	set	4033
   180  0000                     _ADCON2	set	4032
   181  0000                     _ADRESH	set	4036
   182  0000                     _ADRESL	set	4035
   183  0000                     _CCP1CON	set	4029
   184  0000                     _CCP1CONbits	set	4029
   185  0000                     _CCPR1L	set	4030
   186  0000                     _INTCON2	set	4081
   187  0000                     _INTCON2bits	set	4081
   188  0000                     _INTCON3	set	4080
   189  0000                     _INTCON3bits	set	4080
   190  0000                     _INTCONbits	set	4082
   191  0000                     _PIE1	set	3997
   192  0000                     _PIR2bits	set	4001
   193  0000                     _PORTAbits	set	3968
   194  0000                     _PORTBbits	set	3969
   195  0000                     _PORTCbits	set	3970
   196  0000                     _PORTD	set	3971
   197  0000                     _PORTEbits	set	3972
   198  0000                     _PR2	set	4043
   199  0000                     _RCONbits	set	4048
   200  0000                     _T0CON	set	4053
   201  0000                     _T0CONbits	set	4053
   202  0000                     _T2CON	set	4042
   203  0000                     _T2CONbits	set	4042
   204  0000                     _T3CON	set	4017
   205  0000                     _T3CONbits	set	4017
   206  0000                     _TMR0H	set	4055
   207  0000                     _TMR0L	set	4054
   208  0000                     _TMR3H	set	4019
   209  0000                     _TMR3L	set	4018
   210  0000                     _TRISA	set	3986
   211  0000                     _TRISB	set	3987
   212  0000                     _TRISC	set	3988
   213  0000                     _TRISCbits	set	3988
   214  0000                     _TRISD	set	3989
   215  0000                     _TRISE	set	3990
   216  0000                     _TMR3IE	set	32001
   217  0000                     _TMR3IF	set	32009
   218  00FF83                     STR_1:
   219  00FF83  54                 	db	84	;'T'
   220  00FF84  69                 	db	105	;'i'
   221  00FF85  6D                 	db	109	;'m'
   222  00FF86  65                 	db	101	;'e'
   223  00FF87  3A                 	db	58	;':'
   224  00FF88  20                 	db	32
   225  00FF89  25                 	db	37
   226  00FF8A  30                 	db	48	;'0'
   227  00FF8B  32                 	db	50	;'2'
   228  00FF8C  64                 	db	100	;'d'
   229  00FF8D  3A                 	db	58	;':'
   230  00FF8E  25                 	db	37
   231  00FF8F  30                 	db	48	;'0'
   232  00FF90  32                 	db	50	;'2'
   233  00FF91  64                 	db	100	;'d'
   234  00FF92  3A                 	db	58	;':'
   235  00FF93  25                 	db	37
   236  00FF94  30                 	db	48	;'0'
   237  00FF95  32                 	db	50	;'2'
   238  00FF96  64                 	db	100	;'d'
   239  00FF97  00                 	db	0
   240  00FF98                     STR_6:
   241  00FF98  53                 	db	83	;'S'
   242  00FF99  50                 	db	80	;'P'
   243  00FF9A  3A                 	db	58	;':'
   244  00FF9B  25                 	db	37
   245  00FF9C  34                 	db	52	;'4'
   246  00FF9D  2E                 	db	46
   247  00FF9E  31                 	db	49	;'1'
   248  00FF9F  66                 	db	102	;'f'
   249  00FFA0  43                 	db	67	;'C'
   250  00FFA1  20                 	db	32
   251  00FFA2  00                 	db	0
   252  00FFA3                     STR_2:
   253  00FFA3  43                 	db	67	;'C'
   254  00FFA4  54                 	db	84	;'T'
   255  00FFA5  3A                 	db	58	;':'
   256  00FFA6  25                 	db	37
   257  00FFA7  34                 	db	52	;'4'
   258  00FFA8  2E                 	db	46
   259  00FFA9  31                 	db	49	;'1'
   260  00FFAA  66                 	db	102	;'f'
   261  00FFAB  43                 	db	67	;'C'
   262  00FFAC  20                 	db	32
   263  00FFAD  00                 	db	0
   264  00FFAE                     STR_21:
   265  00FFAE  28                 	db	40
   266  00FFAF  6E                 	db	110	;'n'
   267  00FFB0  75                 	db	117	;'u'
   268  00FFB1  6C                 	db	108	;'l'
   269  00FFB2  6C                 	db	108	;'l'
   270  00FFB3  29                 	db	41
   271  00FFB4  00                 	db	0
   272  00FFB5                     STR_20:
   273  00FFB5  48                 	db	72	;'H'
   274  00FFB6  3A                 	db	58	;':'
   275  00FFB7  25                 	db	37
   276  00FFB8  64                 	db	100	;'d'
   277  00FFB9  20                 	db	32
   278  00FFBA  20                 	db	32
   279  00FFBB  00                 	db	0
   280  00FFBC                     STR_18:
   281  00FFBC  50                 	db	80	;'P'
   282  00FFBD  3A                 	db	58	;':'
   283  00FFBE  25                 	db	37
   284  00FFBF  64                 	db	100	;'d'
   285  00FFC0  20                 	db	32
   286  00FFC1  20                 	db	32
   287  00FFC2  00                 	db	0
   288  00FFC3                     STR_19:
   289  00FFC3  50                 	db	80	;'P'
   290  00FFC4  3A                 	db	58	;':'
   291  00FFC5  41                 	db	65	;'A'
   292  00FFC6  20                 	db	32
   293  00FFC7  20                 	db	32
   294  00FFC8  00                 	db	0
   295  00FFC9                     STR_14:
   296  00FFC9  31                 	db	49	;'1'
   297  00FFCA  30                 	db	48	;'0'
   298  00FFCB  4D                 	db	77	;'M'
   299  00FFCC  20                 	db	32
   300  00FFCD  20                 	db	32
   301  00FFCE  00                 	db	0
   302  00FFCF                     STR_12:
   303  00FFCF  31                 	db	49	;'1'
   304  00FFD0  30                 	db	48	;'0'
   305  00FFD1  53                 	db	83	;'S'
   306  00FFD2  20                 	db	32
   307  00FFD3  20                 	db	32
   308  00FFD4  00                 	db	0
   309  00FFD5                     STR_10:
   310  00FFD5  4D                 	db	77	;'M'
   311  00FFD6  44                 	db	68	;'D'
   312  00FFD7  3A                 	db	58	;':'
   313  00FFD8  25                 	db	37
   314  00FFD9  73                 	db	115	;'s'
   315  00FFDA  00                 	db	0
   316  00FFDB                     STR_3:
   317  00FFDB  43                 	db	67	;'C'
   318  00FFDC  4B                 	db	75	;'K'
   319  00FFDD  3A                 	db	58	;':'
   320  00FFDE  25                 	db	37
   321  00FFDF  73                 	db	115	;'s'
   322  00FFE0  00                 	db	0
   323  00FFE1                     STR_7:
   324  00FFE1  48                 	db	72	;'H'
   325  00FFE2  54                 	db	84	;'T'
   326  00FFE3  3A                 	db	58	;':'
   327  00FFE4  25                 	db	37
   328  00FFE5  73                 	db	115	;'s'
   329  00FFE6  00                 	db	0
   330  00FFE7                     STR_15:
   331  00FFE7  48                 	db	72	;'H'
   332  00FFE8  52                 	db	82	;'R'
   333  00FFE9  20                 	db	32
   334  00FFEA  20                 	db	32
   335  00FFEB  00                 	db	0
   336  00FFEC                     STR_16:
   337  00FFEC  48                 	db	72	;'H'
   338  00FFED  54                 	db	84	;'T'
   339  00FFEE  20                 	db	32
   340  00FFEF  20                 	db	32
   341  00FFF0  00                 	db	0
   342  00FFF1                     STR_17:
   343  00FFF1  48                 	db	72	;'H'
   344  00FFF2  59                 	db	89	;'Y'
   345  00FFF3  20                 	db	32
   346  00FFF4  20                 	db	32
   347  00FFF5  00                 	db	0
   348  00FFF6                     STR_5:
   349  00FFF6  4F                 	db	79	;'O'
   350  00FFF7  46                 	db	70	;'F'
   351  00FFF8  46                 	db	70	;'F'
   352  00FFF9  00                 	db	0
   353  00FFFA                     STR_4:
   354  00FFFA  20                 	db	32
   355  00FFFB  4F                 	db	79	;'O'
   356  00FFFC  4E                 	db	78	;'N'
   357  00FFFD  00                 	db	0
   358  0000                     
   359                           ; #config settings
   360  00FFFE  00                 	db	0	; dummy byte at the end
   361  0000                     
   362                           	psect	cinit
   363  004B78                     __pcinit:
   364                           	opt stack 0
   365  004B78                     start_initialization:
   366                           	opt stack 0
   367  004B78                     __initialization:
   368                           	opt stack 0
   369                           
   370                           ; Clear objects allocated to BANK1 (11 bytes)
   371  004B78  EE01  F04F         	lfsr	0,__pbssBANK1
   372  004B7C  0E0B               	movlw	11
   373  004B7E                     clear_0:
   374  004B7E  6AEE               	clrf	postinc0,c
   375  004B80  06E8               	decf	wreg,f,c
   376  004B82  E1FD               	bnz	clear_0
   377                           
   378                           ; Clear objects allocated to BANK0 (14 bytes)
   379  004B84  EE00  F0E2         	lfsr	0,__pbssBANK0
   380  004B88  0E0E               	movlw	14
   381  004B8A                     clear_1:
   382  004B8A  6AEE               	clrf	postinc0,c
   383  004B8C  06E8               	decf	wreg,f,c
   384  004B8E  E1FD               	bnz	clear_1
   385                           
   386                           ; Clear objects allocated to COMRAM (18 bytes)
   387  004B90  EE00  F04E         	lfsr	0,__pbssCOMRAM
   388  004B94  0E12               	movlw	18
   389  004B96                     clear_2:
   390  004B96  6AEE               	clrf	postinc0,c
   391  004B98  06E8               	decf	wreg,f,c
   392  004B9A  E1FD               	bnz	clear_2
   393                           
   394                           ; Initialize objects allocated to BANK0 (4 bytes)
   395                           ; load TBLPTR registers with __pidataBANK0
   396  004B9C  0E90               	movlw	low __pidataBANK0
   397  004B9E  6EF6               	movwf	tblptrl,c
   398  004BA0  0E4E               	movlw	high __pidataBANK0
   399  004BA2  6EF7               	movwf	tblptrh,c
   400  004BA4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   401  004BA6  6EF8               	movwf	tblptru,c
   402  004BA8  EE00  F0F0         	lfsr	0,__pdataBANK0
   403  004BAC  EE10 F004          	lfsr	1,4
   404  004BB0                     copy_data0:
   405  004BB0  0009               	tblrd		*+
   406  004BB2  CFF5 FFEE          	movff	tablat,postinc0
   407  004BB6  50E5               	movf	postdec1,w,c
   408  004BB8  50E1               	movf	fsr1l,w,c
   409  004BBA  E1FA               	bnz	copy_data0
   410  004BBC                     end_of_initialization:
   411                           	opt stack 0
   412  004BBC                     __end_of__initialization:
   413                           	opt stack 0
   414  004BBC  9060               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   415  004BBE  9260               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   416  004BC0  0100               	movlb	0
   417  004BC2  EFCA  F009         	goto	_main	;jump to C main() function
   418                           tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           tblptrl	equ	0xFF6
   421                           tablat	equ	0xFF5
   422                           postinc0	equ	0xFEE
   423                           wreg	equ	0xFE8
   424                           postdec1	equ	0xFE5
   425                           fsr1l	equ	0xFE1
   426                           
   427                           	psect	bssCOMRAM
   428  00004E                     __pbssCOMRAM:
   429                           	opt stack 0
   430  00004E                     _TON:
   431                           	opt stack 0
   432  00004E                     	ds	2
   433  000050                     _cooker:
   434                           	opt stack 0
   435  000050                     	ds	2
   436  000052                     _cookingTime:
   437                           	opt stack 0
   438  000052                     	ds	2
   439  000054                     _hours:
   440                           	opt stack 0
   441  000054                     	ds	2
   442  000056                     _minutes:
   443                           	opt stack 0
   444  000056                     	ds	2
   445  000058                     _seconds:
   446                           	opt stack 0
   447  000058                     	ds	2
   448  00005A                     _timer:
   449                           	opt stack 0
   450  00005A                     	ds	2
   451  00005C                     _v:
   452                           	opt stack 0
   453  00005C                     	ds	2
   454  00005E                     _Percent_Heat_Counter:
   455                           	opt stack 0
   456  00005E                     	ds	1
   457  00005F                     _modes:
   458                           	opt stack 0
   459  00005F                     	ds	1
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           postdec1	equ	0xFE5
   467                           fsr1l	equ	0xFE1
   468                           
   469                           	psect	bssBANK0
   470  0000E2                     __pbssBANK0:
   471                           	opt stack 0
   472  0000E2                     _sp:
   473                           	opt stack 0
   474  0000E2                     	ds	4
   475  0000E6                     _t:
   476                           	opt stack 0
   477  0000E6                     	ds	4
   478  0000EA                     _error:
   479                           	opt stack 0
   480  0000EA                     	ds	2
   481  0000EC                     _hys:
   482                           	opt stack 0
   483  0000EC                     	ds	2
   484  0000EE                     _modeschange:
   485                           	opt stack 0
   486  0000EE                     	ds	2
   487                           tblptru	equ	0xFF8
   488                           tblptrh	equ	0xFF7
   489                           tblptrl	equ	0xFF6
   490                           tablat	equ	0xFF5
   491                           postinc0	equ	0xFEE
   492                           wreg	equ	0xFE8
   493                           postdec1	equ	0xFE5
   494                           fsr1l	equ	0xFE1
   495                           
   496                           	psect	dataBANK0
   497  0000F0                     __pdataBANK0:
   498                           	opt stack 0
   499  0000F0                     _LCD_INIT_STRING:
   500                           	opt stack 0
   501  0000F0                     	ds	4
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511                           	psect	bssBANK1
   512  00014F                     __pbssBANK1:
   513                           	opt stack 0
   514  00014F                     _p1:
   515                           	opt stack 0
   516  00014F                     	ds	4
   517  000153                     _buzzer:
   518                           	opt stack 0
   519  000153                     	ds	2
   520  000155                     _tog:
   521                           	opt stack 0
   522  000155                     	ds	1
   523  000156                     _voltage:
   524                           	opt stack 0
   525  000156                     	ds	4
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           postinc0	equ	0xFEE
   531                           wreg	equ	0xFE8
   532                           postdec1	equ	0xFE5
   533                           fsr1l	equ	0xFE1
   534                           
   535                           	psect	cstackBANK1
   536  000100                     __pcstackBANK1:
   537                           	opt stack 0
   538  000100                     _sprintf$1800:
   539                           	opt stack 0
   540                           
   541                           ; 4 bytes @ 0x0
   542  000100                     	ds	4
   543  000104                     sprintf@cp:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x4
   547  000104                     	ds	2
   548  000106                     sprintf@ap:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0x6
   552  000106                     	ds	2
   553  000108                     sprintf@len:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x8
   557  000108                     	ds	2
   558  00010A                     sprintf@tmpval:
   559                           	opt stack 0
   560                           
   561                           ; 4 bytes @ 0xA
   562  00010A                     	ds	4
   563  00010E                     sprintf@val:
   564                           	opt stack 0
   565                           
   566                           ; 4 bytes @ 0xE
   567  00010E                     	ds	4
   568  000112                     sprintf@exp:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x12
   572  000112                     	ds	2
   573  000114                     sprintf@flag:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x14
   577  000114                     	ds	2
   578  000116                     sprintf@fval:
   579                           	opt stack 0
   580                           
   581                           ; 4 bytes @ 0x16
   582  000116                     	ds	4
   583  00011A                     sprintf@width:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x1A
   587  00011A                     	ds	2
   588  00011C                     sprintf@prec:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x1C
   592  00011C                     	ds	2
   593  00011E                     sprintf@c:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x1E
   597  00011E                     	ds	1
   598  00011F                     main@Buffer:
   599                           	opt stack 0
   600                           
   601                           ; 32 bytes @ 0x1F
   602  00011F                     	ds	32
   603  00013F                     _main$1103:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x3F
   607  00013F                     	ds	2
   608  000141                     _main$1109:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x41
   612  000141                     	ds	2
   613  000143                     _main$1124:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x43
   617  000143                     	ds	2
   618  000145                     _main$1125:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x45
   622  000145                     	ds	2
   623  000147                     _main$1126:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x47
   627  000147                     	ds	2
   628  000149                     _main$1127:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x49
   632  000149                     	ds	2
   633  00014B                     _main$1128:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x4B
   637  00014B                     	ds	2
   638  00014D                     _main$1129:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x4D
   642  00014D                     	ds	2
   643                           tblptru	equ	0xFF8
   644                           tblptrh	equ	0xFF7
   645                           tblptrl	equ	0xFF6
   646                           tablat	equ	0xFF5
   647                           postinc0	equ	0xFEE
   648                           wreg	equ	0xFE8
   649                           postdec1	equ	0xFE5
   650                           fsr1l	equ	0xFE1
   651                           
   652                           	psect	cstackBANK0
   653  000080                     __pcstackBANK0:
   654                           	opt stack 0
   655  000080                     ??_isdigit:
   656  000080                     ??_delay_cycles:
   657  000080                     ?_read_adc_raw_no_lib:
   658                           	opt stack 0
   659  000080                     ?___wmul:
   660                           	opt stack 0
   661  000080                     ?___awmod:
   662                           	opt stack 0
   663  000080                     ?__tdiv_to_l_:
   664                           	opt stack 0
   665  000080                     ?__div_to_l_:
   666                           	opt stack 0
   667  000080                     ?___flneg:
   668                           	opt stack 0
   669  000080                     ?___lldiv:
   670                           	opt stack 0
   671  000080                     delay_ms@n:
   672                           	opt stack 0
   673  000080                     set_pwm1_raw@raw_value:
   674                           	opt stack 0
   675  000080                     ___wmul@multiplier:
   676                           	opt stack 0
   677  000080                     ___awmod@dividend:
   678                           	opt stack 0
   679  000080                     __div_to_l_@f1:
   680                           	opt stack 0
   681  000080                     ___flneg@f1:
   682                           	opt stack 0
   683  000080                     __tdiv_to_l_@f1:
   684                           	opt stack 0
   685  000080                     ___lldiv@dividend:
   686                           	opt stack 0
   687                           
   688                           ; 4 bytes @ 0x0
   689  000080                     	ds	1
   690  000081                     _isdigit$1426:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x1
   694  000081                     	ds	1
   695  000082                     ??_read_adc_raw_no_lib:
   696  000082                     ??_set_pwm1_raw:
   697  000082                     isdigit@c:
   698                           	opt stack 0
   699  000082                     delay_ms@i:
   700                           	opt stack 0
   701  000082                     ___wmul@multiplicand:
   702                           	opt stack 0
   703  000082                     ___awmod@divisor:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x2
   707  000082                     	ds	1
   708  000083                     delay_cycles@n:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x3
   712  000083                     	ds	1
   713  000084                     ___awmod@counter:
   714                           	opt stack 0
   715  000084                     delay_cycles@x:
   716                           	opt stack 0
   717  000084                     read_adc_raw_no_lib@raw_value:
   718                           	opt stack 0
   719  000084                     ___wmul@product:
   720                           	opt stack 0
   721  000084                     __div_to_l_@f2:
   722                           	opt stack 0
   723  000084                     __tdiv_to_l_@f2:
   724                           	opt stack 0
   725  000084                     ___lldiv@divisor:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0x4
   729  000084                     	ds	1
   730  000085                     ___awmod@sign:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x5
   734  000085                     	ds	1
   735  000086                     ??_lcd_send_nibble:
   736  000086                     ?___awdiv:
   737                           	opt stack 0
   738  000086                     ?___lwdiv:
   739                           	opt stack 0
   740  000086                     ?___xxtofl:
   741                           	opt stack 0
   742  000086                     read_adc_raw_no_lib@channel:
   743                           	opt stack 0
   744  000086                     ___awdiv@dividend:
   745                           	opt stack 0
   746  000086                     ___lwdiv@dividend:
   747                           	opt stack 0
   748  000086                     ___xxtofl@val:
   749                           	opt stack 0
   750                           
   751                           ; 4 bytes @ 0x6
   752  000086                     	ds	1
   753  000087                     lcd_send_nibble@n:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x7
   757  000087                     	ds	1
   758  000088                     ??__tdiv_to_l_:
   759  000088                     lcd_send_byte@n:
   760                           	opt stack 0
   761  000088                     ___awdiv@divisor:
   762                           	opt stack 0
   763  000088                     ___lwdiv@divisor:
   764                           	opt stack 0
   765  000088                     __div_to_l_@quot:
   766                           	opt stack 0
   767  000088                     ___lldiv@quotient:
   768                           	opt stack 0
   769                           
   770                           ; 4 bytes @ 0x8
   771  000088                     	ds	1
   772  000089                     lcd_send_byte@cm_data:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x9
   776  000089                     	ds	1
   777  00008A                     ??___xxtofl:
   778  00008A                     lcd_init@i:
   779                           	opt stack 0
   780  00008A                     lcd_gotoxy@y:
   781                           	opt stack 0
   782  00008A                     ___awdiv@counter:
   783                           	opt stack 0
   784  00008A                     ___lwdiv@quotient:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0xA
   788  00008A                     	ds	1
   789  00008B                     lcd_gotoxy@x:
   790                           	opt stack 0
   791  00008B                     ___awdiv@sign:
   792                           	opt stack 0
   793  00008B                     __tdiv_to_l_@quot:
   794                           	opt stack 0
   795                           
   796                           ; 4 bytes @ 0xB
   797  00008B                     	ds	1
   798  00008C                     lcd_gotoxy@address:
   799                           	opt stack 0
   800  00008C                     __div_to_l_@cntr:
   801                           	opt stack 0
   802  00008C                     ___lldiv@counter:
   803                           	opt stack 0
   804  00008C                     ___lwdiv@counter:
   805                           	opt stack 0
   806  00008C                     ___awdiv@quotient:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0xC
   810  00008C                     	ds	1
   811  00008D                     ?___llmod:
   812                           	opt stack 0
   813  00008D                     lcd_putc@c:
   814                           	opt stack 0
   815  00008D                     __div_to_l_@exp1:
   816                           	opt stack 0
   817  00008D                     ___llmod@dividend:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0xD
   821  00008D                     	ds	1
   822  00008E                     ??_incrementTime:
   823  00008E                     ??_decrementTime:
   824  00008E                     ?___flmul:
   825                           	opt stack 0
   826  00008E                     ___xxtofl@sign:
   827                           	opt stack 0
   828  00008E                     lcd_puts@s:
   829                           	opt stack 0
   830  00008E                     ___flmul@b:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0xE
   834  00008E                     	ds	1
   835  00008F                     __tdiv_to_l_@cntr:
   836                           	opt stack 0
   837  00008F                     ___xxtofl@exp:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0xF
   841  00008F                     	ds	1
   842  000090                     __tdiv_to_l_@exp1:
   843                           	opt stack 0
   844  000090                     ___xxtofl@arg:
   845                           	opt stack 0
   846                           
   847                           ; 4 bytes @ 0x10
   848  000090                     	ds	1
   849  000091                     ___llmod@divisor:
   850                           	opt stack 0
   851                           
   852                           ; 4 bytes @ 0x11
   853  000091                     	ds	1
   854  000092                     ___flmul@a:
   855                           	opt stack 0
   856                           
   857                           ; 4 bytes @ 0x12
   858  000092                     	ds	3
   859  000095                     ___llmod@counter:
   860                           	opt stack 0
   861                           
   862                           ; 1 bytes @ 0x15
   863  000095                     	ds	1
   864  000096                     ??___flmul:
   865                           
   866                           ; 1 bytes @ 0x16
   867  000096                     	ds	4
   868  00009A                     ___flmul@sign:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x1A
   872  00009A                     	ds	1
   873  00009B                     ___flmul@grs:
   874                           	opt stack 0
   875                           
   876                           ; 4 bytes @ 0x1B
   877  00009B                     	ds	4
   878  00009F                     ___flmul@aexp:
   879                           	opt stack 0
   880                           
   881                           ; 1 bytes @ 0x1F
   882  00009F                     	ds	1
   883  0000A0                     ___flmul@bexp:
   884                           	opt stack 0
   885                           
   886                           ; 1 bytes @ 0x20
   887  0000A0                     	ds	1
   888  0000A1                     ___flmul@prod:
   889                           	opt stack 0
   890                           
   891                           ; 4 bytes @ 0x21
   892  0000A1                     	ds	4
   893  0000A5                     ___flmul@temp:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x25
   897  0000A5                     	ds	2
   898  0000A7                     ?___fldiv:
   899                           	opt stack 0
   900  0000A7                     ?_fround:
   901                           	opt stack 0
   902  0000A7                     ?_scale:
   903                           	opt stack 0
   904  0000A7                     ___fldiv@b:
   905                           	opt stack 0
   906                           
   907                           ; 4 bytes @ 0x27
   908  0000A7                     	ds	4
   909  0000AB                     ___fldiv@a:
   910                           	opt stack 0
   911  0000AB                     _fround$1798:
   912                           	opt stack 0
   913  0000AB                     _scale$1799:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x2B
   917  0000AB                     	ds	4
   918  0000AF                     ??___fldiv:
   919  0000AF                     scale@scl:
   920                           	opt stack 0
   921  0000AF                     _fround$1797:
   922                           	opt stack 0
   923                           
   924                           ; 4 bytes @ 0x2F
   925  0000AF                     	ds	4
   926  0000B3                     fround@prec:
   927                           	opt stack 0
   928  0000B3                     ___fldiv@sign:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x33
   932  0000B3                     	ds	1
   933  0000B4                     ?___fladd:
   934                           	opt stack 0
   935  0000B4                     ___fladd@b:
   936                           	opt stack 0
   937  0000B4                     ___fldiv@rem:
   938                           	opt stack 0
   939                           
   940                           ; 4 bytes @ 0x34
   941  0000B4                     	ds	4
   942  0000B8                     ___fldiv@new_exp:
   943                           	opt stack 0
   944  0000B8                     ___fladd@a:
   945                           	opt stack 0
   946                           
   947                           ; 4 bytes @ 0x38
   948  0000B8                     	ds	2
   949  0000BA                     ___fldiv@grs:
   950                           	opt stack 0
   951                           
   952                           ; 4 bytes @ 0x3A
   953  0000BA                     	ds	2
   954  0000BC                     ??___fladd:
   955                           
   956                           ; 1 bytes @ 0x3C
   957  0000BC                     	ds	2
   958  0000BE                     ___fldiv@bexp:
   959                           	opt stack 0
   960                           
   961                           ; 1 bytes @ 0x3E
   962  0000BE                     	ds	1
   963  0000BF                     ___fldiv@aexp:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x3F
   967  0000BF                     	ds	1
   968  0000C0                     ?_read_adc_voltage:
   969                           	opt stack 0
   970                           
   971                           ; 4 bytes @ 0x40
   972  0000C0                     	ds	4
   973  0000C4                     ___fladd@signs:
   974                           	opt stack 0
   975  0000C4                     read_adc_voltage@voltage:
   976                           	opt stack 0
   977                           
   978                           ; 4 bytes @ 0x44
   979  0000C4                     	ds	1
   980  0000C5                     ___fladd@aexp:
   981                           	opt stack 0
   982                           
   983                           ; 1 bytes @ 0x45
   984  0000C5                     	ds	1
   985  0000C6                     ___fladd@bexp:
   986                           	opt stack 0
   987                           
   988                           ; 1 bytes @ 0x46
   989  0000C6                     	ds	1
   990  0000C7                     ___fladd@grs:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x47
   994  0000C7                     	ds	1
   995  0000C8                     ?___flsub:
   996                           	opt stack 0
   997  0000C8                     ?___fltol:
   998                           	opt stack 0
   999  0000C8                     read_adc_voltage@raw_value:
  1000                           	opt stack 0
  1001  0000C8                     ___flge@ff1:
  1002                           	opt stack 0
  1003  0000C8                     ___fltol@f1:
  1004                           	opt stack 0
  1005  0000C8                     ___flsub@b:
  1006                           	opt stack 0
  1007                           
  1008                           ; 4 bytes @ 0x48
  1009  0000C8                     	ds	2
  1010  0000CA                     read_adc_voltage@channel:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x4A
  1014  0000CA                     	ds	2
  1015  0000CC                     ??___fltol:
  1016  0000CC                     ___flge@ff2:
  1017                           	opt stack 0
  1018  0000CC                     ___flsub@a:
  1019                           	opt stack 0
  1020                           
  1021                           ; 4 bytes @ 0x4C
  1022  0000CC                     	ds	4
  1023  0000D0                     ??___flge:
  1024  0000D0                     ___fltol@sign1:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0x50
  1028  0000D0                     	ds	1
  1029  0000D1                     ___fltol@exp1:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x51
  1033  0000D1                     	ds	1
  1034  0000D2                     set_pwm1_percent@value:
  1035                           	opt stack 0
  1036                           
  1037                           ; 4 bytes @ 0x52
  1038  0000D2                     	ds	2
  1039  0000D4                     ?_sprintf:
  1040                           	opt stack 0
  1041  0000D4                     sprintf@sp:
  1042                           	opt stack 0
  1043                           
  1044                           ; 2 bytes @ 0x54
  1045  0000D4                     	ds	2
  1046  0000D6                     sprintf@f:
  1047                           	opt stack 0
  1048  0000D6                     set_pwm1_percent@tmp:
  1049                           	opt stack 0
  1050                           
  1051                           ; 4 bytes @ 0x56
  1052  0000D6                     	ds	4
  1053  0000DA                     set_pwm1_percent@raw_val:
  1054                           	opt stack 0
  1055                           
  1056                           ; 2 bytes @ 0x5A
  1057  0000DA                     	ds	2
  1058  0000DC                     
  1059                           ; 1 bytes @ 0x5C
  1060  0000DC                     	ds	2
  1061  0000DE                     ??_sprintf:
  1062                           
  1063                           ; 1 bytes @ 0x5E
  1064  0000DE                     	ds	4
  1065  0000E2                     tblptru	equ	0xFF8
  1066                           tblptrh	equ	0xFF7
  1067                           tblptrl	equ	0xFF6
  1068                           tablat	equ	0xFF5
  1069                           postinc0	equ	0xFEE
  1070                           wreg	equ	0xFE8
  1071                           postdec1	equ	0xFE5
  1072                           fsr1l	equ	0xFE1
  1073                           
  1074                           ; 1 bytes @ 0x62
  1075                           
  1076                           	psect	cstackCOMRAM
  1077  000001                     __pcstackCOMRAM:
  1078                           	opt stack 0
  1079  000001                     ?i2___wmul:
  1080                           	opt stack 0
  1081  000001                     ?i2___awdiv:
  1082                           	opt stack 0
  1083  000001                     ?i2___fladd:
  1084                           	opt stack 0
  1085  000001                     ?i2___flmul:
  1086                           	opt stack 0
  1087  000001                     ?i2___xxtofl:
  1088                           	opt stack 0
  1089  000001                     i2delay_ms@n:
  1090                           	opt stack 0
  1091  000001                     i2set_pwm1_raw@raw_value:
  1092                           	opt stack 0
  1093  000001                     i2___wmul@multiplier:
  1094                           	opt stack 0
  1095  000001                     i2___awdiv@dividend:
  1096                           	opt stack 0
  1097  000001                     i2___fladd@b:
  1098                           	opt stack 0
  1099  000001                     i2___flmul@b:
  1100                           	opt stack 0
  1101  000001                     i2___xxtofl@val:
  1102                           	opt stack 0
  1103                           
  1104                           ; 4 bytes @ 0x0
  1105  000001                     	ds	2
  1106  000003                     ??i2_set_pwm1_raw:
  1107  000003                     i2delay_ms@i:
  1108                           	opt stack 0
  1109  000003                     i2___wmul@multiplicand:
  1110                           	opt stack 0
  1111  000003                     i2___awdiv@divisor:
  1112                           	opt stack 0
  1113                           
  1114                           ; 2 bytes @ 0x2
  1115  000003                     	ds	2
  1116  000005                     ??i2___xxtofl:
  1117  000005                     i2___awdiv@counter:
  1118                           	opt stack 0
  1119  000005                     i2___wmul@product:
  1120                           	opt stack 0
  1121  000005                     i2___fladd@a:
  1122                           	opt stack 0
  1123  000005                     i2___flmul@a:
  1124                           	opt stack 0
  1125                           
  1126                           ; 4 bytes @ 0x4
  1127  000005                     	ds	1
  1128  000006                     i2___awdiv@sign:
  1129                           	opt stack 0
  1130                           
  1131                           ; 1 bytes @ 0x5
  1132  000006                     	ds	1
  1133  000007                     ?i2___lwdiv:
  1134                           	opt stack 0
  1135  000007                     i2___awdiv@quotient:
  1136                           	opt stack 0
  1137  000007                     i2___lwdiv@dividend:
  1138                           	opt stack 0
  1139                           
  1140                           ; 2 bytes @ 0x6
  1141  000007                     	ds	2
  1142  000009                     ??i2___fladd:
  1143  000009                     ??i2___flmul:
  1144  000009                     i2___xxtofl@sign:
  1145                           	opt stack 0
  1146  000009                     i2___lwdiv@divisor:
  1147                           	opt stack 0
  1148                           
  1149                           ; 2 bytes @ 0x8
  1150  000009                     	ds	1
  1151  00000A                     i2___xxtofl@exp:
  1152                           	opt stack 0
  1153                           
  1154                           ; 1 bytes @ 0x9
  1155  00000A                     	ds	1
  1156  00000B                     i2___lwdiv@quotient:
  1157                           	opt stack 0
  1158  00000B                     i2___xxtofl@arg:
  1159                           	opt stack 0
  1160                           
  1161                           ; 4 bytes @ 0xA
  1162  00000B                     	ds	2
  1163  00000D                     i2___lwdiv@counter:
  1164                           	opt stack 0
  1165  00000D                     i2___flmul@sign:
  1166                           	opt stack 0
  1167                           
  1168                           ; 1 bytes @ 0xC
  1169  00000D                     	ds	1
  1170  00000E                     ??_update_cooking_time:
  1171  00000E                     i2___flmul@grs:
  1172                           	opt stack 0
  1173                           
  1174                           ; 4 bytes @ 0xD
  1175  00000E                     	ds	3
  1176  000011                     i2___fladd@signs:
  1177                           	opt stack 0
  1178                           
  1179                           ; 1 bytes @ 0x10
  1180  000011                     	ds	1
  1181  000012                     i2___fladd@aexp:
  1182                           	opt stack 0
  1183  000012                     i2___flmul@aexp:
  1184                           	opt stack 0
  1185                           
  1186                           ; 1 bytes @ 0x11
  1187  000012                     	ds	1
  1188  000013                     i2___fladd@bexp:
  1189                           	opt stack 0
  1190  000013                     i2___flmul@bexp:
  1191                           	opt stack 0
  1192                           
  1193                           ; 1 bytes @ 0x12
  1194  000013                     	ds	1
  1195  000014                     i2___fladd@grs:
  1196                           	opt stack 0
  1197  000014                     i2___flmul@prod:
  1198                           	opt stack 0
  1199                           
  1200                           ; 4 bytes @ 0x13
  1201  000014                     	ds	1
  1202  000015                     ?i2___fltol:
  1203                           	opt stack 0
  1204  000015                     i2___fltol@f1:
  1205                           	opt stack 0
  1206                           
  1207                           ; 4 bytes @ 0x14
  1208  000015                     	ds	3
  1209  000018                     i2___flmul@temp:
  1210                           	opt stack 0
  1211                           
  1212                           ; 2 bytes @ 0x17
  1213  000018                     	ds	1
  1214  000019                     ??i2___fltol:
  1215                           
  1216                           ; 1 bytes @ 0x18
  1217  000019                     	ds	1
  1218  00001A                     ?i2___fldiv:
  1219                           	opt stack 0
  1220  00001A                     i2___fldiv@b:
  1221                           	opt stack 0
  1222                           
  1223                           ; 4 bytes @ 0x19
  1224  00001A                     	ds	3
  1225  00001D                     i2___fltol@sign1:
  1226                           	opt stack 0
  1227                           
  1228                           ; 1 bytes @ 0x1C
  1229  00001D                     	ds	1
  1230  00001E                     i2___fltol@exp1:
  1231                           	opt stack 0
  1232  00001E                     i2___fldiv@a:
  1233                           	opt stack 0
  1234                           
  1235                           ; 4 bytes @ 0x1D
  1236  00001E                     	ds	4
  1237  000022                     ??i2___fldiv:
  1238                           
  1239                           ; 1 bytes @ 0x21
  1240  000022                     	ds	4
  1241  000026                     i2___fldiv@sign:
  1242                           	opt stack 0
  1243                           
  1244                           ; 1 bytes @ 0x25
  1245  000026                     	ds	1
  1246  000027                     i2___fldiv@rem:
  1247                           	opt stack 0
  1248                           
  1249                           ; 4 bytes @ 0x26
  1250  000027                     	ds	4
  1251  00002B                     i2___fldiv@new_exp:
  1252                           	opt stack 0
  1253                           
  1254                           ; 2 bytes @ 0x2A
  1255  00002B                     	ds	2
  1256  00002D                     i2___fldiv@grs:
  1257                           	opt stack 0
  1258                           
  1259                           ; 4 bytes @ 0x2C
  1260  00002D                     	ds	4
  1261  000031                     i2___fldiv@bexp:
  1262                           	opt stack 0
  1263                           
  1264                           ; 1 bytes @ 0x30
  1265  000031                     	ds	1
  1266  000032                     i2___fldiv@aexp:
  1267                           	opt stack 0
  1268                           
  1269                           ; 1 bytes @ 0x31
  1270  000032                     	ds	1
  1271  000033                     i2set_pwm1_percent@value:
  1272                           	opt stack 0
  1273                           
  1274                           ; 4 bytes @ 0x32
  1275  000033                     	ds	4
  1276  000037                     i2set_pwm1_percent@tmp:
  1277                           	opt stack 0
  1278                           
  1279                           ; 4 bytes @ 0x36
  1280  000037                     	ds	4
  1281  00003B                     i2set_pwm1_percent@raw_val:
  1282                           	opt stack 0
  1283                           
  1284                           ; 2 bytes @ 0x3A
  1285  00003B                     	ds	2
  1286  00003D                     ??_Timer3_int:
  1287                           
  1288                           ; 1 bytes @ 0x3C
  1289  00003D                     	ds	3
  1290  000040                     ??_highIsr:
  1291                           
  1292                           ; 1 bytes @ 0x3F
  1293  000040                     	ds	14
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           postinc0	equ	0xFEE
  1299                           wreg	equ	0xFE8
  1300                           postdec1	equ	0xFE5
  1301                           fsr1l	equ	0xFE1
  1302                           
  1303 ;;
  1304 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1305 ;;
  1306 ;; *************** function _main *****************
  1307 ;; Defined at:
  1308 ;;		line 493 in file "Main.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  Buffer         32   31[BANK1 ] unsigned char [32]
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Locals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;      Totals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1326 ;;Total ram usage:       48 bytes
  1327 ;; Hardware stack levels required when called:   10
  1328 ;; This function calls:
  1329 ;;		_Auto_Heat
  1330 ;;		___fldiv
  1331 ;;		___flmul
  1332 ;;		_buzzerA
  1333 ;;		_decrementTime
  1334 ;;		_delay_ms
  1335 ;;		_incrementTime
  1336 ;;		_init
  1337 ;;		_init_adc_no_lib
  1338 ;;		_lcd_gotoxy
  1339 ;;		_lcd_init
  1340 ;;		_lcd_putc
  1341 ;;		_lcd_puts
  1342 ;;		_read_adc_voltage
  1343 ;;		_sprintf
  1344 ;;		_update_hysteresis
  1345 ;; This function is called by:
  1346 ;;		Startup code after reset
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text0
  1351  001394                     __ptext0:
  1352                           	opt stack 0
  1353  001394                     _main:
  1354                           	opt stack 21
  1355                           
  1356                           ;Main.c: 494: init();
  1357                           
  1358                           ;incstack = 0
  1359  001394  ECDD  F024         	call	_init	;wreg free
  1360                           
  1361                           ;Main.c: 495: char Buffer[32];
  1362                           ;Main.c: 496: lcd_init();
  1363  001398  EC70  F024         	call	_lcd_init	;wreg free
  1364                           
  1365                           ;Main.c: 497: init_adc_no_lib();
  1366  00139C  EC33  F027         	call	_init_adc_no_lib	;wreg free
  1367                           
  1368                           ;Main.c: 498: lcd_putc('\f');
  1369  0013A0  0E0C               	movlw	12
  1370  0013A2  EC0F  F025         	call	_lcd_putc
  1371  0013A6                     l305:
  1372  0013A6  0004               	clrwdt		;# 
  1373                           
  1374                           ;Main.c: 504: p1 = read_adc_voltage(0);
  1375  0013A8  0E00               	movlw	0
  1376  0013AA  EC22  F023         	call	_read_adc_voltage
  1377  0013AE  C0C0  F14F         	movff	?_read_adc_voltage,_p1
  1378  0013B2  C0C1  F150         	movff	?_read_adc_voltage+1,_p1+1
  1379  0013B6  C0C2  F151         	movff	?_read_adc_voltage+2,_p1+2
  1380  0013BA  C0C3  F152         	movff	?_read_adc_voltage+3,_p1+3
  1381                           
  1382                           ;Main.c: 505: voltage = read_adc_voltage(2);
  1383  0013BE  0E02               	movlw	2
  1384  0013C0  EC22  F023         	call	_read_adc_voltage
  1385  0013C4  C0C0  F156         	movff	?_read_adc_voltage,_voltage
  1386  0013C8  C0C1  F157         	movff	?_read_adc_voltage+1,_voltage+1
  1387  0013CC  C0C2  F158         	movff	?_read_adc_voltage+2,_voltage+2
  1388  0013D0  C0C3  F159         	movff	?_read_adc_voltage+3,_voltage+3
  1389                           
  1390                           ;Main.c: 506: t = 300 * voltage;
  1391  0013D4  C156  F08E         	movff	_voltage,___flmul@b
  1392  0013D8  C157  F08F         	movff	_voltage+1,___flmul@b+1
  1393  0013DC  C158  F090         	movff	_voltage+2,___flmul@b+2
  1394  0013E0  C159  F091         	movff	_voltage+3,___flmul@b+3
  1395  0013E4  0E00               	movlw	0
  1396  0013E6  0100               	movlb	0	; () banked
  1397  0013E8  6F92               	movwf	___flmul@a& (0+255),b
  1398  0013EA  0E00               	movlw	0
  1399  0013EC  6F93               	movwf	(___flmul@a+1)& (0+255),b
  1400  0013EE  0E96               	movlw	150
  1401  0013F0  6F94               	movwf	(___flmul@a+2)& (0+255),b
  1402  0013F2  0E43               	movlw	67
  1403  0013F4  6F95               	movwf	(___flmul@a+3)& (0+255),b
  1404  0013F6  ECA2  F00E         	call	___flmul	;wreg free
  1405  0013FA  C08E  F0E6         	movff	?___flmul,_t
  1406  0013FE  C08F  F0E7         	movff	?___flmul+1,_t+1
  1407  001402  C090  F0E8         	movff	?___flmul+2,_t+2
  1408  001406  C091  F0E9         	movff	?___flmul+3,_t+3
  1409                           
  1410                           ;Main.c: 507: sp=t/5;
  1411  00140A  C0E6  F0A7         	movff	_t,___fldiv@b
  1412  00140E  C0E7  F0A8         	movff	_t+1,___fldiv@b+1
  1413  001412  C0E8  F0A9         	movff	_t+2,___fldiv@b+2
  1414  001416  C0E9  F0AA         	movff	_t+3,___fldiv@b+3
  1415  00141A  0E00               	movlw	0
  1416  00141C  0100               	movlb	0	; () banked
  1417  00141E  6FAB               	movwf	___fldiv@a& (0+255),b
  1418  001420  0E00               	movlw	0
  1419  001422  6FAC               	movwf	(___fldiv@a+1)& (0+255),b
  1420  001424  0EA0               	movlw	160
  1421  001426  6FAD               	movwf	(___fldiv@a+2)& (0+255),b
  1422  001428  0E40               	movlw	64
  1423  00142A  6FAE               	movwf	(___fldiv@a+3)& (0+255),b
  1424  00142C  ECF5  F010         	call	___fldiv	;wreg free
  1425  001430  C0A7  F0E2         	movff	?___fldiv,_sp
  1426  001434  C0A8  F0E3         	movff	?___fldiv+1,_sp+1
  1427  001438  C0A9  F0E4         	movff	?___fldiv+2,_sp+2
  1428  00143C  C0AA  F0E5         	movff	?___fldiv+3,_sp+3
  1429                           
  1430                           ;Main.c: 509: if(PORTBbits.RB3 == 0) incrementTime();
  1431  001440  B681               	btfsc	3969,3,c	;volatile
  1432  001442  D003               	goto	l306
  1433  001444  EC86  F01D         	call	_incrementTime	;wreg free
  1434  001448  D01A               	goto	l6077
  1435  00144A                     l306:
  1436                           
  1437                           ;Main.c: 510: else if (PORTBbits.RB4 == 0) decrementTime();
  1438  00144A  B881               	btfsc	3969,4,c	;volatile
  1439  00144C  D003               	goto	l308
  1440  00144E  EC28  F01E         	call	_decrementTime	;wreg free
  1441  001452  D015               	goto	l6077
  1442  001454                     l308:
  1443                           
  1444                           ;Main.c: 511: else if(PORTBbits.RB5 == 0){
  1445  001454  BA81               	btfsc	3969,5,c	;volatile
  1446  001456  D013               	goto	l6077
  1447                           
  1448                           ;Main.c: 512: cooker = 0;
  1449  001458  0E00               	movlw	0
  1450  00145A  6E51               	movwf	_cooker+1,c
  1451  00145C  0E00               	movlw	0
  1452  00145E  6E50               	movwf	_cooker,c
  1453                           
  1454                           ;Main.c: 513: PORTCbits.RC5 = 0;
  1455  001460  9A82               	bcf	3970,5,c	;volatile
  1456                           
  1457                           ;Main.c: 514: seconds = 0;
  1458  001462  0E00               	movlw	0
  1459  001464  6E59               	movwf	_seconds+1,c
  1460  001466  0E00               	movlw	0
  1461  001468  6E58               	movwf	_seconds,c
  1462                           
  1463                           ;Main.c: 515: minutes = 0;
  1464  00146A  0E00               	movlw	0
  1465  00146C  6E57               	movwf	_minutes+1,c
  1466  00146E  0E00               	movlw	0
  1467  001470  6E56               	movwf	_minutes,c
  1468                           
  1469                           ;Main.c: 516: hours = 0;
  1470  001472  0E00               	movlw	0
  1471  001474  6E55               	movwf	_hours+1,c
  1472  001476  0E00               	movlw	0
  1473  001478  6E54               	movwf	_hours,c
  1474                           
  1475                           ;Main.c: 517: Percent_Heat_Counter=0;
  1476  00147A  0E00               	movlw	0
  1477  00147C  6E5E               	movwf	_Percent_Heat_Counter,c
  1478  00147E                     l6077:
  1479                           
  1480                           ;Main.c: 518: }
  1481                           ;Main.c: 521: lcd_gotoxy(1, 1);
  1482  00147E  0E01               	movlw	1
  1483  001480  0100               	movlb	0	; () banked
  1484  001482  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1485  001484  0E01               	movlw	1
  1486  001486  EC94  F025         	call	_lcd_gotoxy
  1487                           
  1488                           ;Main.c: 522: sprintf(Buffer, "Time: %02d:%02d:%02d", hours,minutes,seconds);
  1489  00148A  0E1F               	movlw	low main@Buffer
  1490  00148C  0100               	movlb	0	; () banked
  1491  00148E  6FD4               	movwf	sprintf@sp& (0+255),b
  1492  001490  0E01               	movlw	high main@Buffer
  1493  001492  0100               	movlb	0	; () banked
  1494  001494  6FD5               	movwf	(sprintf@sp+1)& (0+255),b
  1495  001496  0E83               	movlw	low STR_1
  1496  001498  0100               	movlb	0	; () banked
  1497  00149A  6FD6               	movwf	sprintf@f& (0+255),b
  1498  00149C  0EFF               	movlw	high STR_1
  1499  00149E  0100               	movlb	0	; () banked
  1500  0014A0  6FD7               	movwf	(sprintf@f+1)& (0+255),b
  1501  0014A2  C054  F0D8         	movff	_hours,?_sprintf+4
  1502  0014A6  C055  F0D9         	movff	_hours+1,?_sprintf+5
  1503  0014AA  C056  F0DA         	movff	_minutes,?_sprintf+6
  1504  0014AE  C057  F0DB         	movff	_minutes+1,?_sprintf+7
  1505  0014B2  C058  F0DC         	movff	_seconds,?_sprintf+8
  1506  0014B6  C059  F0DD         	movff	_seconds+1,?_sprintf+9
  1507  0014BA  EC0D  F000         	call	_sprintf	;wreg free
  1508                           
  1509                           ;Main.c: 523: lcd_puts(Buffer);
  1510  0014BE  0E1F               	movlw	low main@Buffer
  1511  0014C0  0100               	movlb	0	; () banked
  1512  0014C2  6F8E               	movwf	lcd_puts@s& (0+255),b
  1513  0014C4  0E01               	movlw	high main@Buffer
  1514  0014C6  0100               	movlb	0	; () banked
  1515  0014C8  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1516  0014CA  ECFB  F026         	call	_lcd_puts	;wreg free
  1517                           
  1518                           ;Main.c: 525: lcd_gotoxy(1, 2);
  1519  0014CE  0E02               	movlw	2
  1520  0014D0  0100               	movlb	0	; () banked
  1521  0014D2  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1522  0014D4  0E01               	movlw	1
  1523  0014D6  EC94  F025         	call	_lcd_gotoxy
  1524                           
  1525                           ;Main.c: 526: sprintf(Buffer, "CT:%4.1fC ", t);
  1526  0014DA  0E1F               	movlw	low main@Buffer
  1527  0014DC  0100               	movlb	0	; () banked
  1528  0014DE  6FD4               	movwf	sprintf@sp& (0+255),b
  1529  0014E0  0E01               	movlw	high main@Buffer
  1530  0014E2  0100               	movlb	0	; () banked
  1531  0014E4  6FD5               	movwf	(sprintf@sp+1)& (0+255),b
  1532  0014E6  0EA3               	movlw	low STR_2
  1533  0014E8  0100               	movlb	0	; () banked
  1534  0014EA  6FD6               	movwf	sprintf@f& (0+255),b
  1535  0014EC  0EFF               	movlw	high STR_2
  1536  0014EE  0100               	movlb	0	; () banked
  1537  0014F0  6FD7               	movwf	(sprintf@f+1)& (0+255),b
  1538  0014F2  C0E6  F0D8         	movff	_t,?_sprintf+4
  1539  0014F6  C0E7  F0D9         	movff	_t+1,?_sprintf+5
  1540  0014FA  C0E8  F0DA         	movff	_t+2,?_sprintf+6
  1541  0014FE  C0E9  F0DB         	movff	_t+3,?_sprintf+7
  1542  001502  EC0D  F000         	call	_sprintf	;wreg free
  1543                           
  1544                           ;Main.c: 527: lcd_puts(Buffer);
  1545  001506  0E1F               	movlw	low main@Buffer
  1546  001508  0100               	movlb	0	; () banked
  1547  00150A  6F8E               	movwf	lcd_puts@s& (0+255),b
  1548  00150C  0E01               	movlw	high main@Buffer
  1549  00150E  0100               	movlb	0	; () banked
  1550  001510  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1551  001512  ECFB  F026         	call	_lcd_puts	;wreg free
  1552                           
  1553                           ;Main.c: 529: lcd_gotoxy(11, 2);
  1554  001516  0E02               	movlw	2
  1555  001518  0100               	movlb	0	; () banked
  1556  00151A  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1557  00151C  0E0B               	movlw	11
  1558  00151E  EC94  F025         	call	_lcd_gotoxy
  1559                           
  1560                           ;Main.c: 530: sprintf(Buffer, "CK:%s",cooker==1?" ON":"OFF");
  1561  001522  0450               	decf	_cooker,w,c
  1562  001524  1051               	iorwf	_cooker+1,w,c
  1563  001526  B4D8               	btfsc	status,2,c
  1564  001528  D005               	goto	l6095
  1565  00152A  0EF6               	movlw	low STR_5
  1566  00152C  0101               	movlb	1	; () banked
  1567  00152E  6F3F               	movwf	_main$1103& (0+255),b
  1568  001530  0EFF               	movlw	high STR_5
  1569  001532  D004               	goto	L1
  1570  001534                     l6095:
  1571  001534  0EFA               	movlw	low STR_4
  1572  001536  0101               	movlb	1	; () banked
  1573  001538  6F3F               	movwf	_main$1103& (0+255),b
  1574  00153A  0EFF               	movlw	high STR_4
  1575  00153C                     L1:
  1576  00153C  0101               	movlb	1	; () banked
  1577  00153E  6F40               	movwf	(_main$1103+1)& (0+255),b
  1578                           
  1579                           ; BSR set to: 1
  1580                           
  1581                           ; BSR set to: 1
  1582  001540  0E1F               	movlw	low main@Buffer
  1583  001542  0100               	movlb	0	; () banked
  1584  001544  6FD4               	movwf	sprintf@sp& (0+255),b
  1585  001546  0E01               	movlw	high main@Buffer
  1586  001548  0100               	movlb	0	; () banked
  1587  00154A  6FD5               	movwf	(sprintf@sp+1)& (0+255),b
  1588  00154C  0EDB               	movlw	low STR_3
  1589  00154E  0100               	movlb	0	; () banked
  1590  001550  6FD6               	movwf	sprintf@f& (0+255),b
  1591  001552  0EFF               	movlw	high STR_3
  1592  001554  0100               	movlb	0	; () banked
  1593  001556  6FD7               	movwf	(sprintf@f+1)& (0+255),b
  1594  001558  C13F  F0D8         	movff	_main$1103,?_sprintf+4
  1595  00155C  C140  F0D9         	movff	_main$1103+1,?_sprintf+5
  1596  001560  EC0D  F000         	call	_sprintf	;wreg free
  1597                           
  1598                           ;Main.c: 531: lcd_puts(Buffer);
  1599  001564  0E1F               	movlw	low main@Buffer
  1600  001566  0100               	movlb	0	; () banked
  1601  001568  6F8E               	movwf	lcd_puts@s& (0+255),b
  1602  00156A  0E01               	movlw	high main@Buffer
  1603  00156C  0100               	movlb	0	; () banked
  1604  00156E  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1605  001570  ECFB  F026         	call	_lcd_puts	;wreg free
  1606                           
  1607                           ;Main.c: 533: lcd_gotoxy(1, 3);
  1608  001574  0E03               	movlw	3
  1609  001576  0100               	movlb	0	; () banked
  1610  001578  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1611  00157A  0E01               	movlw	1
  1612  00157C  EC94  F025         	call	_lcd_gotoxy
  1613                           
  1614                           ;Main.c: 534: sprintf(Buffer, "SP:%4.1fC ",sp);
  1615  001580  0E1F               	movlw	low main@Buffer
  1616  001582  0100               	movlb	0	; () banked
  1617  001584  6FD4               	movwf	sprintf@sp& (0+255),b
  1618  001586  0E01               	movlw	high main@Buffer
  1619  001588  0100               	movlb	0	; () banked
  1620  00158A  6FD5               	movwf	(sprintf@sp+1)& (0+255),b
  1621  00158C  0E98               	movlw	low STR_6
  1622  00158E  0100               	movlb	0	; () banked
  1623  001590  6FD6               	movwf	sprintf@f& (0+255),b
  1624  001592  0EFF               	movlw	high STR_6
  1625  001594  0100               	movlb	0	; () banked
  1626  001596  6FD7               	movwf	(sprintf@f+1)& (0+255),b
  1627  001598  C0E2  F0D8         	movff	_sp,?_sprintf+4
  1628  00159C  C0E3  F0D9         	movff	_sp+1,?_sprintf+5
  1629  0015A0  C0E4  F0DA         	movff	_sp+2,?_sprintf+6
  1630  0015A4  C0E5  F0DB         	movff	_sp+3,?_sprintf+7
  1631  0015A8  EC0D  F000         	call	_sprintf	;wreg free
  1632                           
  1633                           ;Main.c: 535: lcd_puts(Buffer);
  1634  0015AC  0E1F               	movlw	low main@Buffer
  1635  0015AE  0100               	movlb	0	; () banked
  1636  0015B0  6F8E               	movwf	lcd_puts@s& (0+255),b
  1637  0015B2  0E01               	movlw	high main@Buffer
  1638  0015B4  0100               	movlb	0	; () banked
  1639  0015B6  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1640  0015B8  ECFB  F026         	call	_lcd_puts	;wreg free
  1641                           
  1642                           ;Main.c: 537: lcd_gotoxy(11, 3);
  1643  0015BC  0E03               	movlw	3
  1644  0015BE  0100               	movlb	0	; () banked
  1645  0015C0  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1646  0015C2  0E0B               	movlw	11
  1647  0015C4  EC94  F025         	call	_lcd_gotoxy
  1648                           
  1649                           ;Main.c: 538: sprintf(Buffer, "HT:%s",PORTCbits.RC5==1?" ON":"OFF");
  1650  0015C8  BA82               	btfsc	3970,5,c	;volatile
  1651  0015CA  D005               	goto	l6113
  1652  0015CC  0EF6               	movlw	low STR_5
  1653  0015CE  0101               	movlb	1	; () banked
  1654  0015D0  6F41               	movwf	_main$1109& (0+255),b
  1655  0015D2  0EFF               	movlw	high STR_5
  1656  0015D4  D004               	goto	L2
  1657  0015D6                     l6113:
  1658  0015D6  0EFA               	movlw	low STR_4
  1659  0015D8  0101               	movlb	1	; () banked
  1660  0015DA  6F41               	movwf	_main$1109& (0+255),b
  1661  0015DC  0EFF               	movlw	high STR_4
  1662  0015DE                     L2:
  1663  0015DE  0101               	movlb	1	; () banked
  1664  0015E0  6F42               	movwf	(_main$1109+1)& (0+255),b
  1665                           
  1666                           ; BSR set to: 1
  1667                           
  1668                           ; BSR set to: 1
  1669  0015E2  0E1F               	movlw	low main@Buffer
  1670  0015E4  0100               	movlb	0	; () banked
  1671  0015E6  6FD4               	movwf	sprintf@sp& (0+255),b
  1672  0015E8  0E01               	movlw	high main@Buffer
  1673  0015EA  0100               	movlb	0	; () banked
  1674  0015EC  6FD5               	movwf	(sprintf@sp+1)& (0+255),b
  1675  0015EE  0EE1               	movlw	low STR_7
  1676  0015F0  0100               	movlb	0	; () banked
  1677  0015F2  6FD6               	movwf	sprintf@f& (0+255),b
  1678  0015F4  0EFF               	movlw	high STR_7
  1679  0015F6  0100               	movlb	0	; () banked
  1680  0015F8  6FD7               	movwf	(sprintf@f+1)& (0+255),b
  1681  0015FA  C141  F0D8         	movff	_main$1109,?_sprintf+4
  1682  0015FE  C142  F0D9         	movff	_main$1109+1,?_sprintf+5
  1683  001602  EC0D  F000         	call	_sprintf	;wreg free
  1684                           
  1685                           ;Main.c: 539: lcd_puts(Buffer);
  1686  001606  0E1F               	movlw	low main@Buffer
  1687  001608  0100               	movlb	0	; () banked
  1688  00160A  6F8E               	movwf	lcd_puts@s& (0+255),b
  1689  00160C  0E01               	movlw	high main@Buffer
  1690  00160E  0100               	movlb	0	; () banked
  1691  001610  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1692  001612  ECFB  F026         	call	_lcd_puts	;wreg free
  1693                           
  1694                           ;Main.c: 541: lcd_gotoxy(1, 4);
  1695  001616  0E04               	movlw	4
  1696  001618  0100               	movlb	0	; () banked
  1697  00161A  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1698  00161C  0E01               	movlw	1
  1699  00161E  EC94  F025         	call	_lcd_gotoxy
  1700                           
  1701                           ;Main.c: 542: sprintf(Buffer, "MD:%s", modeschange==0?"S  ":modeschange==1?"10S  ":modes
      +                          change==2?"M  ":modeschange==3?"10M  ":modeschange==4?"HR  ":modeschange==5?"HT  ":"HY  
      +                          ");
  1702  001622  0100               	movlb	0	; () banked
  1703  001624  51EE               	movf	_modeschange& (0+255),w,b
  1704  001626  0100               	movlb	0	; () banked
  1705  001628  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  1706  00162A  B4D8               	btfsc	status,2,c
  1707  00162C  D05E               	goto	l6145
  1708                           
  1709                           ; BSR set to: 0
  1710  00162E  0100               	movlb	0	; () banked
  1711  001630  05EE               	decf	_modeschange& (0+255),w,b
  1712  001632  0100               	movlb	0	; () banked
  1713  001634  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  1714  001636  B4D8               	btfsc	status,2,c
  1715  001638  D04D               	goto	l6143
  1716                           
  1717                           ; BSR set to: 0
  1718  00163A  0E02               	movlw	2
  1719  00163C  0100               	movlb	0	; () banked
  1720  00163E  19EE               	xorwf	_modeschange& (0+255),w,b
  1721  001640  0100               	movlb	0	; () banked
  1722  001642  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  1723  001644  B4D8               	btfsc	status,2,c
  1724  001646  D03B               	goto	l6141
  1725                           
  1726                           ; BSR set to: 0
  1727  001648  0E03               	movlw	3
  1728  00164A  0100               	movlb	0	; () banked
  1729  00164C  19EE               	xorwf	_modeschange& (0+255),w,b
  1730  00164E  0100               	movlb	0	; () banked
  1731  001650  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  1732  001652  B4D8               	btfsc	status,2,c
  1733  001654  D029               	goto	l6139
  1734                           
  1735                           ; BSR set to: 0
  1736  001656  0E04               	movlw	4
  1737  001658  0100               	movlb	0	; () banked
  1738  00165A  19EE               	xorwf	_modeschange& (0+255),w,b
  1739  00165C  0100               	movlb	0	; () banked
  1740  00165E  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  1741  001660  B4D8               	btfsc	status,2,c
  1742  001662  D017               	goto	l6137
  1743                           
  1744                           ; BSR set to: 0
  1745  001664  0E05               	movlw	5
  1746  001666  0100               	movlb	0	; () banked
  1747  001668  19EE               	xorwf	_modeschange& (0+255),w,b
  1748  00166A  0100               	movlb	0	; () banked
  1749  00166C  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  1750  00166E  B4D8               	btfsc	status,2,c
  1751  001670  D005               	goto	l6135
  1752                           
  1753                           ; BSR set to: 0
  1754  001672  0EF1               	movlw	low STR_17
  1755  001674  0101               	movlb	1	; () banked
  1756  001676  6F4D               	movwf	_main$1129& (0+255),b
  1757  001678  0EFF               	movlw	high STR_17
  1758  00167A  D004               	goto	L3
  1759  00167C                     l6135:
  1760  00167C  0EEC               	movlw	low STR_16
  1761  00167E  0101               	movlb	1	; () banked
  1762  001680  6F4D               	movwf	_main$1129& (0+255),b
  1763  001682  0EFF               	movlw	high STR_16
  1764  001684                     L3:
  1765  001684  0101               	movlb	1	; () banked
  1766  001686  6F4E               	movwf	(_main$1129+1)& (0+255),b
  1767                           
  1768                           ; BSR set to: 1
  1769  001688  C14D  F14B         	movff	_main$1129,_main$1128
  1770  00168C  C14E  F14C         	movff	_main$1129+1,_main$1128+1
  1771  001690  D006               	goto	l338
  1772  001692                     l6137:
  1773  001692  0EE7               	movlw	low STR_15
  1774  001694  0101               	movlb	1	; () banked
  1775  001696  6F4B               	movwf	_main$1128& (0+255),b
  1776  001698  0EFF               	movlw	high STR_15
  1777  00169A  0101               	movlb	1	; () banked
  1778  00169C  6F4C               	movwf	(_main$1128+1)& (0+255),b
  1779  00169E                     l338:
  1780                           
  1781                           ; BSR set to: 1
  1782  00169E  C14B  F149         	movff	_main$1128,_main$1127
  1783  0016A2  C14C  F14A         	movff	_main$1128+1,_main$1127+1
  1784  0016A6  D006               	goto	l334
  1785  0016A8                     l6139:
  1786  0016A8  0EC9               	movlw	low STR_14
  1787  0016AA  0101               	movlb	1	; () banked
  1788  0016AC  6F49               	movwf	_main$1127& (0+255),b
  1789  0016AE  0EFF               	movlw	high STR_14
  1790  0016B0  0101               	movlb	1	; () banked
  1791  0016B2  6F4A               	movwf	(_main$1127+1)& (0+255),b
  1792  0016B4                     l334:
  1793                           
  1794                           ; BSR set to: 1
  1795  0016B4  C149  F147         	movff	_main$1127,_main$1126
  1796  0016B8  C14A  F148         	movff	_main$1127+1,_main$1126+1
  1797  0016BC  D006               	goto	l330
  1798  0016BE                     l6141:
  1799  0016BE  0ECB               	movlw	low (STR_14+2)
  1800  0016C0  0101               	movlb	1	; () banked
  1801  0016C2  6F47               	movwf	_main$1126& (0+255),b
  1802  0016C4  0EFF               	movlw	high (STR_14+2)
  1803  0016C6  0101               	movlb	1	; () banked
  1804  0016C8  6F48               	movwf	(_main$1126+1)& (0+255),b
  1805  0016CA                     l330:
  1806                           
  1807                           ; BSR set to: 1
  1808  0016CA  C147  F145         	movff	_main$1126,_main$1125
  1809  0016CE  C148  F146         	movff	_main$1126+1,_main$1125+1
  1810  0016D2  D006               	goto	l326
  1811  0016D4                     l6143:
  1812  0016D4  0ECF               	movlw	low STR_12
  1813  0016D6  0101               	movlb	1	; () banked
  1814  0016D8  6F45               	movwf	_main$1125& (0+255),b
  1815  0016DA  0EFF               	movlw	high STR_12
  1816  0016DC  0101               	movlb	1	; () banked
  1817  0016DE  6F46               	movwf	(_main$1125+1)& (0+255),b
  1818  0016E0                     l326:
  1819                           
  1820                           ; BSR set to: 1
  1821  0016E0  C145  F143         	movff	_main$1125,_main$1124
  1822  0016E4  C146  F144         	movff	_main$1125+1,_main$1124+1
  1823  0016E8  D006               	goto	l6147
  1824  0016EA                     l6145:
  1825  0016EA  0ED1               	movlw	low (STR_12+2)
  1826  0016EC  0101               	movlb	1	; () banked
  1827  0016EE  6F43               	movwf	_main$1124& (0+255),b
  1828  0016F0  0EFF               	movlw	high (STR_12+2)
  1829  0016F2  0101               	movlb	1	; () banked
  1830  0016F4  6F44               	movwf	(_main$1124+1)& (0+255),b
  1831  0016F6                     l6147:
  1832                           
  1833                           ; BSR set to: 1
  1834  0016F6  0E1F               	movlw	low main@Buffer
  1835  0016F8  0100               	movlb	0	; () banked
  1836  0016FA  6FD4               	movwf	sprintf@sp& (0+255),b
  1837  0016FC  0E01               	movlw	high main@Buffer
  1838  0016FE  0100               	movlb	0	; () banked
  1839  001700  6FD5               	movwf	(sprintf@sp+1)& (0+255),b
  1840  001702  0ED5               	movlw	low STR_10
  1841  001704  0100               	movlb	0	; () banked
  1842  001706  6FD6               	movwf	sprintf@f& (0+255),b
  1843  001708  0EFF               	movlw	high STR_10
  1844  00170A  0100               	movlb	0	; () banked
  1845  00170C  6FD7               	movwf	(sprintf@f+1)& (0+255),b
  1846  00170E  C143  F0D8         	movff	_main$1124,?_sprintf+4
  1847  001712  C144  F0D9         	movff	_main$1124+1,?_sprintf+5
  1848  001716  EC0D  F000         	call	_sprintf	;wreg free
  1849                           
  1850                           ;Main.c: 543: lcd_puts(Buffer);
  1851  00171A  0E1F               	movlw	low main@Buffer
  1852  00171C  0100               	movlb	0	; () banked
  1853  00171E  6F8E               	movwf	lcd_puts@s& (0+255),b
  1854  001720  0E01               	movlw	high main@Buffer
  1855  001722  0100               	movlb	0	; () banked
  1856  001724  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1857  001726  ECFB  F026         	call	_lcd_puts	;wreg free
  1858                           
  1859                           ;Main.c: 547: if(PORTBbits.RB3 == 0&& modeschange==5){
  1860  00172A  B681               	btfsc	3969,3,c	;volatile
  1861  00172C  D016               	goto	l6163
  1862  00172E  0E05               	movlw	5
  1863  001730  0100               	movlb	0	; () banked
  1864  001732  19EE               	xorwf	_modeschange& (0+255),w,b
  1865  001734  0100               	movlb	0	; () banked
  1866  001736  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  1867  001738  A4D8               	btfss	status,2,c
  1868  00173A  D00F               	goto	l6163
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;Main.c: 548: if(Percent_Heat_Counter==10)
  1872  00173C  0E0A               	movlw	10
  1873  00173E  185E               	xorwf	_Percent_Heat_Counter,w,c
  1874  001740  A4D8               	btfss	status,2,c
  1875  001742  D003               	goto	l6159
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;Main.c: 549: Percent_Heat_Counter=10;
  1879  001744  0E0A               	movlw	10
  1880  001746  6E5E               	movwf	_Percent_Heat_Counter,c
  1881  001748  D001               	goto	l6161
  1882  00174A                     l6159:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;Main.c: 550: else
  1886                           ;Main.c: 551: Percent_Heat_Counter++;{
  1887  00174A  2A5E               	incf	_Percent_Heat_Counter,f,c
  1888  00174C                     l6161:
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;Main.c: 552: delay_ms(200);}
  1892  00174C  0E00               	movlw	0
  1893  00174E  0100               	movlb	0	; () banked
  1894  001750  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  1895  001752  0EC8               	movlw	200
  1896  001754  6F80               	movwf	delay_ms@n& (0+255),b
  1897  001756  ECA3  F026         	call	_delay_ms	;wreg free
  1898  00175A                     l6163:
  1899                           
  1900                           ;Main.c: 553: }
  1901                           ;Main.c: 554: if(PORTBbits.RB4 == 0 && modeschange==5){
  1902  00175A  B881               	btfsc	3969,4,c	;volatile
  1903  00175C  D016               	goto	l6175
  1904  00175E  0E05               	movlw	5
  1905  001760  0100               	movlb	0	; () banked
  1906  001762  19EE               	xorwf	_modeschange& (0+255),w,b
  1907  001764  0100               	movlb	0	; () banked
  1908  001766  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  1909  001768  A4D8               	btfss	status,2,c
  1910  00176A  D00F               	goto	l6175
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;Main.c: 555: if(Percent_Heat_Counter==0)
  1914  00176C  505E               	movf	_Percent_Heat_Counter,w,c
  1915  00176E  A4D8               	btfss	status,2,c
  1916  001770  D003               	goto	l6171
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;Main.c: 556: Percent_Heat_Counter=0;
  1920  001772  0E00               	movlw	0
  1921  001774  6E5E               	movwf	_Percent_Heat_Counter,c
  1922  001776  D009               	goto	l6175
  1923  001778                     l6171:
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;Main.c: 557: else {
  1927                           ;Main.c: 559: Percent_Heat_Counter=Percent_Heat_Counter-1;
  1928  001778  045E               	decf	_Percent_Heat_Counter,w,c
  1929  00177A  6E5E               	movwf	_Percent_Heat_Counter,c
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;Main.c: 560: delay_ms(200);
  1933  00177C  0E00               	movlw	0
  1934  00177E  0100               	movlb	0	; () banked
  1935  001780  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  1936  001782  0EC8               	movlw	200
  1937  001784  6F80               	movwf	delay_ms@n& (0+255),b
  1938  001786  ECA3  F026         	call	_delay_ms	;wreg free
  1939  00178A                     l6175:
  1940                           
  1941                           ;Main.c: 561: }
  1942                           ;Main.c: 563: }
  1943                           ;Main.c: 565: update_hysteresis();
  1944  00178A  ECAB  F024         	call	_update_hysteresis	;wreg free
  1945                           
  1946                           ;Main.c: 568: lcd_gotoxy(8, 4);
  1947  00178E  0E04               	movlw	4
  1948  001790  0100               	movlb	0	; () banked
  1949  001792  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1950  001794  0E08               	movlw	8
  1951  001796  EC94  F025         	call	_lcd_gotoxy
  1952                           
  1953                           ;Main.c: 569: if(PORTAbits.RA5==0){
  1954  00179A  BA80               	btfsc	3968,5,c	;volatile
  1955  00179C  D00A               	goto	l349
  1956                           
  1957                           ;Main.c: 570: tog=!tog;
  1958  00179E  0101               	movlb	1	; () banked
  1959  0017A0  5155               	movf	_tog& (0+255),w,b
  1960  0017A2  0101               	movlb	1	; () banked
  1961  0017A4  A4D8               	btfss	status,2,c
  1962  0017A6  D002               	goto	u7930
  1963  0017A8  0E01               	movlw	1
  1964  0017AA  D001               	goto	u7940
  1965  0017AC                     u7930:
  1966  0017AC  0E00               	movlw	0
  1967  0017AE                     u7940:
  1968  0017AE  0101               	movlb	1	; () banked
  1969  0017B0  6F55               	movwf	_tog& (0+255),b
  1970  0017B2                     l349:
  1971                           
  1972                           ;Main.c: 571: }
  1973                           ;Main.c: 573: if(tog==0){
  1974  0017B2  0101               	movlb	1	; () banked
  1975  0017B4  5155               	movf	_tog& (0+255),w,b
  1976  0017B6  0101               	movlb	1	; () banked
  1977  0017B8  A4D8               	btfss	status,2,c
  1978  0017BA  D01D               	goto	l6187
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;Main.c: 575: sprintf(Buffer, "P:%d  ",Percent_Heat_Counter*10);
  1982  0017BC  0E1F               	movlw	low main@Buffer
  1983  0017BE  0100               	movlb	0	; () banked
  1984  0017C0  6FD4               	movwf	sprintf@sp& (0+255),b
  1985  0017C2  0E01               	movlw	high main@Buffer
  1986  0017C4  0100               	movlb	0	; () banked
  1987  0017C6  6FD5               	movwf	(sprintf@sp+1)& (0+255),b
  1988  0017C8  0EBC               	movlw	low STR_18
  1989  0017CA  0100               	movlb	0	; () banked
  1990  0017CC  6FD6               	movwf	sprintf@f& (0+255),b
  1991  0017CE  0EFF               	movlw	high STR_18
  1992  0017D0  0100               	movlb	0	; () banked
  1993  0017D2  6FD7               	movwf	(sprintf@f+1)& (0+255),b
  1994  0017D4  505E               	movf	_Percent_Heat_Counter,w,c
  1995  0017D6  0D0A               	mullw	10
  1996  0017D8  CFF3 F0D8          	movff	prodl,?_sprintf+4
  1997  0017DC  CFF4 F0D9          	movff	prodh,?_sprintf+5
  1998  0017E0  EC0D  F000         	call	_sprintf	;wreg free
  1999                           
  2000                           ;Main.c: 576: lcd_puts(Buffer);
  2001  0017E4  0E1F               	movlw	low main@Buffer
  2002  0017E6  0100               	movlb	0	; () banked
  2003  0017E8  6F8E               	movwf	lcd_puts@s& (0+255),b
  2004  0017EA  0E01               	movlw	high main@Buffer
  2005  0017EC  0100               	movlb	0	; () banked
  2006  0017EE  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  2007  0017F0  ECFB  F026         	call	_lcd_puts	;wreg free
  2008                           
  2009                           ;Main.c: 577: }
  2010  0017F4  D018               	goto	l6193
  2011  0017F6                     l6187:
  2012                           
  2013                           ;Main.c: 578: else{
  2014                           ;Main.c: 579: sprintf(Buffer, "P:A  ");
  2015  0017F6  0E1F               	movlw	low main@Buffer
  2016  0017F8  0100               	movlb	0	; () banked
  2017  0017FA  6FD4               	movwf	sprintf@sp& (0+255),b
  2018  0017FC  0E01               	movlw	high main@Buffer
  2019  0017FE  0100               	movlb	0	; () banked
  2020  001800  6FD5               	movwf	(sprintf@sp+1)& (0+255),b
  2021  001802  0EC3               	movlw	low STR_19
  2022  001804  0100               	movlb	0	; () banked
  2023  001806  6FD6               	movwf	sprintf@f& (0+255),b
  2024  001808  0EFF               	movlw	high STR_19
  2025  00180A  0100               	movlb	0	; () banked
  2026  00180C  6FD7               	movwf	(sprintf@f+1)& (0+255),b
  2027  00180E  EC0D  F000         	call	_sprintf	;wreg free
  2028                           
  2029                           ;Main.c: 580: lcd_puts(Buffer);
  2030  001812  0E1F               	movlw	low main@Buffer
  2031  001814  0100               	movlb	0	; () banked
  2032  001816  6F8E               	movwf	lcd_puts@s& (0+255),b
  2033  001818  0E01               	movlw	high main@Buffer
  2034  00181A  0100               	movlb	0	; () banked
  2035  00181C  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  2036  00181E  ECFB  F026         	call	_lcd_puts	;wreg free
  2037                           
  2038                           ;Main.c: 581: Auto_Heat();
  2039  001822  EC32  F01C         	call	_Auto_Heat	;wreg free
  2040  001826                     l6193:
  2041                           
  2042                           ;Main.c: 582: }
  2043                           ;Main.c: 587: lcd_gotoxy(13, 4);
  2044  001826  0E04               	movlw	4
  2045  001828  0100               	movlb	0	; () banked
  2046  00182A  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  2047  00182C  0E0D               	movlw	13
  2048  00182E  EC94  F025         	call	_lcd_gotoxy
  2049                           
  2050                           ;Main.c: 588: sprintf(Buffer, "H:%d  ",hys);
  2051  001832  0E1F               	movlw	low main@Buffer
  2052  001834  0100               	movlb	0	; () banked
  2053  001836  6FD4               	movwf	sprintf@sp& (0+255),b
  2054  001838  0E01               	movlw	high main@Buffer
  2055  00183A  0100               	movlb	0	; () banked
  2056  00183C  6FD5               	movwf	(sprintf@sp+1)& (0+255),b
  2057  00183E  0EB5               	movlw	low STR_20
  2058  001840  0100               	movlb	0	; () banked
  2059  001842  6FD6               	movwf	sprintf@f& (0+255),b
  2060  001844  0EFF               	movlw	high STR_20
  2061  001846  0100               	movlb	0	; () banked
  2062  001848  6FD7               	movwf	(sprintf@f+1)& (0+255),b
  2063  00184A  C0EC  F0D8         	movff	_hys,?_sprintf+4
  2064  00184E  C0ED  F0D9         	movff	_hys+1,?_sprintf+5
  2065  001852  EC0D  F000         	call	_sprintf	;wreg free
  2066                           
  2067                           ;Main.c: 589: lcd_puts(Buffer);
  2068  001856  0E1F               	movlw	low main@Buffer
  2069  001858  0100               	movlb	0	; () banked
  2070  00185A  6F8E               	movwf	lcd_puts@s& (0+255),b
  2071  00185C  0E01               	movlw	high main@Buffer
  2072  00185E  0100               	movlb	0	; () banked
  2073  001860  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  2074  001862  ECFB  F026         	call	_lcd_puts	;wreg free
  2075                           
  2076                           ;Main.c: 592: lcd_gotoxy(8, 4);
  2077  001866  0E04               	movlw	4
  2078  001868  0100               	movlb	0	; () banked
  2079  00186A  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  2080  00186C  0E08               	movlw	8
  2081  00186E  EC94  F025         	call	_lcd_gotoxy
  2082                           
  2083                           ;Main.c: 595: if(buzzer == 1){
  2084  001872  0101               	movlb	1	; () banked
  2085  001874  0553               	decf	_buzzer& (0+255),w,b
  2086  001876  0101               	movlb	1	; () banked
  2087  001878  1154               	iorwf	(_buzzer+1)& (0+255),w,b
  2088  00187A  A4D8               	btfss	status,2,c
  2089  00187C  D007               	goto	l6207
  2090                           
  2091                           ; BSR set to: 1
  2092                           ;Main.c: 596: buzzer = 0;
  2093  00187E  0E00               	movlw	0
  2094  001880  0101               	movlb	1	; () banked
  2095  001882  6F54               	movwf	(_buzzer+1)& (0+255),b
  2096  001884  0E00               	movlw	0
  2097  001886  6F53               	movwf	_buzzer& (0+255),b
  2098                           
  2099                           ; BSR set to: 1
  2100                           ;Main.c: 597: buzzerA();
  2101  001888  ECF3  F023         	call	_buzzerA	;wreg free
  2102  00188C                     l6207:
  2103                           
  2104                           ;Main.c: 598: }
  2105                           ;Main.c: 600: delay_ms(200);
  2106  00188C  0E00               	movlw	0
  2107  00188E  0100               	movlb	0	; () banked
  2108  001890  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  2109  001892  0EC8               	movlw	200
  2110  001894  6F80               	movwf	delay_ms@n& (0+255),b
  2111  001896  ECA3  F026         	call	_delay_ms	;wreg free
  2112  00189A  D585               	goto	l305
  2113  00189C                     __end_of_main:
  2114                           	opt stack 0
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           prodh	equ	0xFF4
  2120                           prodl	equ	0xFF3
  2121                           postinc0	equ	0xFEE
  2122                           wreg	equ	0xFE8
  2123                           postdec1	equ	0xFE5
  2124                           fsr1l	equ	0xFE1
  2125                           status	equ	0xFD8
  2126                           
  2127 ;; *************** function _update_hysteresis *****************
  2128 ;; Defined at:
  2129 ;;		line 330 in file "Main.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    4
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text1
  2158  004956                     __ptext1:
  2159                           	opt stack 0
  2160  004956                     _update_hysteresis:
  2161                           	opt stack 26
  2162                           
  2163                           ;Main.c: 331: if(modeschange==6&&PORTBbits.RB3 == 0){
  2164                           
  2165                           ;incstack = 0
  2166  004956  0E06               	movlw	6
  2167  004958  0100               	movlb	0	; () banked
  2168  00495A  19EE               	xorwf	_modeschange& (0+255),w,b
  2169  00495C  0100               	movlb	0	; () banked
  2170  00495E  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  2171  004960  B4D8               	btfsc	status,2,c
  2172                           
  2173                           ; BSR set to: 0
  2174  004962  B681               	btfsc	3969,3,c	;volatile
  2175  004964  D010               	goto	l5519
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;Main.c: 333: if(hys==3)
  2179  004966  0E03               	movlw	3
  2180  004968  0100               	movlb	0	; () banked
  2181  00496A  19EC               	xorwf	_hys& (0+255),w,b
  2182  00496C  0100               	movlb	0	; () banked
  2183  00496E  11ED               	iorwf	(_hys+1)& (0+255),w,b
  2184  004970  A4D8               	btfss	status,2,c
  2185  004972  D006               	goto	l5517
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;Main.c: 334: hys=3;
  2189  004974  0E00               	movlw	0
  2190  004976  0100               	movlb	0	; () banked
  2191  004978  6FED               	movwf	(_hys+1)& (0+255),b
  2192  00497A  0E03               	movlw	3
  2193  00497C  6FEC               	movwf	_hys& (0+255),b
  2194  00497E  D003               	goto	l5519
  2195  004980                     l5517:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;Main.c: 335: else
  2199                           ;Main.c: 336: hys++;
  2200  004980  0100               	movlb	0	; () banked
  2201  004982  4BEC               	infsnz	_hys& (0+255),f,b
  2202  004984  2BED               	incf	(_hys+1)& (0+255),f,b
  2203  004986                     l5519:
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;Main.c: 338: }
  2207                           ;Main.c: 339: if(modeschange==6&&PORTBbits.RB4 == 0){
  2208  004986  0E06               	movlw	6
  2209  004988  0100               	movlb	0	; () banked
  2210  00498A  19EE               	xorwf	_modeschange& (0+255),w,b
  2211  00498C  0100               	movlb	0	; () banked
  2212  00498E  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  2213  004990  A4D8               	btfss	status,2,c
  2214  004992  0012               	return	
  2215                           
  2216                           ; BSR set to: 0
  2217  004994  B881               	btfsc	3969,4,c	;volatile
  2218  004996  0012               	return	
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;Main.c: 341: if(hys==0)
  2222  004998  0100               	movlb	0	; () banked
  2223  00499A  51EC               	movf	_hys& (0+255),w,b
  2224  00499C  0100               	movlb	0	; () banked
  2225  00499E  11ED               	iorwf	(_hys+1)& (0+255),w,b
  2226  0049A0  A4D8               	btfss	status,2,c
  2227  0049A2  D006               	goto	l5527
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;Main.c: 342: hys=0;
  2231  0049A4  0E00               	movlw	0
  2232  0049A6  0100               	movlb	0	; () banked
  2233  0049A8  6FED               	movwf	(_hys+1)& (0+255),b
  2234  0049AA  0E00               	movlw	0
  2235  0049AC  6FEC               	movwf	_hys& (0+255),b
  2236  0049AE  0012               	return	
  2237  0049B0                     l5527:
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;Main.c: 343: else
  2241                           ;Main.c: 344: hys--;
  2242  0049B0  0100               	movlb	0	; () banked
  2243  0049B2  07EC               	decf	_hys& (0+255),f,b
  2244  0049B4  A0D8               	btfss	status,0,c
  2245  0049B6  07ED               	decf	(_hys+1)& (0+255),f,b
  2246                           
  2247                           ; BSR set to: 0
  2248  0049B8  0012               	return	
  2249  0049BA                     __end_of_update_hysteresis:
  2250                           	opt stack 0
  2251                           tblptru	equ	0xFF8
  2252                           tblptrh	equ	0xFF7
  2253                           tblptrl	equ	0xFF6
  2254                           tablat	equ	0xFF5
  2255                           prodh	equ	0xFF4
  2256                           prodl	equ	0xFF3
  2257                           postinc0	equ	0xFEE
  2258                           wreg	equ	0xFE8
  2259                           postdec1	equ	0xFE5
  2260                           fsr1l	equ	0xFE1
  2261                           status	equ	0xFD8
  2262                           
  2263 ;; *************** function _sprintf *****************
  2264 ;; Defined at:
  2265 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  sp              2   84[BANK0 ] PTR unsigned char 
  2268 ;;		 -> main@Buffer(32), 
  2269 ;;  f               2   86[BANK0 ] PTR const unsigned char 
  2270 ;;		 -> STR_20(7), STR_19(6), STR_18(7), STR_10(6), 
  2271 ;;		 -> STR_7(6), STR_6(11), STR_3(6), STR_2(11), 
  2272 ;;		 -> STR_1(21), 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  fval            4   22[BANK1 ] PTR const unsigned char 
  2275 ;;  val             4   14[BANK1 ] unsigned long 
  2276 ;;  tmpval          4   10[BANK1 ] struct .
  2277 ;;  prec            2   28[BANK1 ] int 
  2278 ;;  width           2   26[BANK1 ] int 
  2279 ;;  flag            2   20[BANK1 ] unsigned short 
  2280 ;;  exp             2   18[BANK1 ] int 
  2281 ;;  len             2    8[BANK1 ] unsigned int 
  2282 ;;  ap              2    6[BANK1 ] PTR void [1]
  2283 ;;		 -> ?_sprintf(2), 
  2284 ;;  cp              2    4[BANK1 ] PTR const unsigned char 
  2285 ;;		 -> STR_21(7), STR_17(5), STR_16(5), STR_15(5), 
  2286 ;;		 -> STR_14(6), STR_13(4), STR_12(6), STR_11(4), 
  2287 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  2288 ;;		 -> voltage(4), 
  2289 ;;  c               1   30[BANK1 ] char 
  2290 ;;  d               1    0        unsigned char 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  2   84[BANK0 ] int 
  2293 ;; Registers used:
  2294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2300 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Locals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Totals:         0      14      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;Total ram usage:       45 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; Hardware stack levels required when called:    6
  2307 ;; This function calls:
  2308 ;;		___awdiv
  2309 ;;		___fladd
  2310 ;;		___flge
  2311 ;;		___flmul
  2312 ;;		___flneg
  2313 ;;		___flsub
  2314 ;;		___fltol
  2315 ;;		___lldiv
  2316 ;;		___llmod
  2317 ;;		___wmul
  2318 ;;		___xxtofl
  2319 ;;		__div_to_l_
  2320 ;;		__tdiv_to_l_
  2321 ;;		_fround
  2322 ;;		_isdigit
  2323 ;;		_scale
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text2
  2330  00001A                     __ptext2:
  2331                           	opt stack 0
  2332  00001A                     _sprintf:
  2333                           	opt stack 24
  2334                           
  2335                           ;doprnt.c: 494: va_list ap;
  2336                           ;doprnt.c: 499: signed char c;
  2337                           ;doprnt.c: 501: int width;
  2338                           ;doprnt.c: 504: int prec;
  2339                           ;doprnt.c: 508: unsigned short flag;
  2340                           ;doprnt.c: 515: char d;
  2341                           ;doprnt.c: 516: double fval;
  2342                           ;doprnt.c: 517: int exp;
  2343                           ;doprnt.c: 523: union {
  2344                           ;doprnt.c: 524: unsigned long vd;
  2345                           ;doprnt.c: 525: double integ;
  2346                           ;doprnt.c: 526: } tmpval;
  2347                           ;doprnt.c: 528: unsigned long val;
  2348                           ;doprnt.c: 529: unsigned len;
  2349                           ;doprnt.c: 530: const char * cp;
  2350                           ;doprnt.c: 533: *ap = __va_start();
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;incstack = 0
  2354  00001A  0ED8               	movlw	low (?_sprintf+4)
  2355  00001C  0101               	movlb	1	; () banked
  2356  00001E  6F06               	movwf	sprintf@ap& (0+255),b
  2357  000020  0E00               	movlw	high (?_sprintf+4)
  2358  000022  0101               	movlb	1	; () banked
  2359  000024  6F07               	movwf	(sprintf@ap+1)& (0+255),b
  2360                           
  2361                           ;doprnt.c: 536: while(c = *f++) {
  2362  000026  EF26  F007         	goto	l6023
  2363  00002A                     l5659:
  2364                           
  2365                           ; BSR set to: 1
  2366                           ;doprnt.c: 538: if(c != '%')
  2367  00002A  0E25               	movlw	37
  2368  00002C  0101               	movlb	1	; () banked
  2369  00002E  191E               	xorwf	sprintf@c& (0+255),w,b
  2370  000030  B4D8               	btfsc	status,2,c
  2371  000032  D00B               	goto	l5665
  2372                           
  2373                           ; BSR set to: 1
  2374                           ;doprnt.c: 540: {
  2375                           ;doprnt.c: 541: ((*sp++ = (c)));
  2376  000034  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  2377  000038  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  2378  00003C  C11E  FFDF         	movff	sprintf@c,indf2
  2379                           
  2380                           ; BSR set to: 1
  2381  000040  0100               	movlb	0	; () banked
  2382  000042  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  2383  000044  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  2384                           
  2385                           ;doprnt.c: 542: continue;
  2386  000046  EF26  F007         	goto	l6023
  2387  00004A                     l5665:
  2388                           
  2389                           ;doprnt.c: 543: }
  2390                           ;doprnt.c: 546: width = 0;
  2391  00004A  0E00               	movlw	0
  2392  00004C  0101               	movlb	1	; () banked
  2393  00004E  6F1B               	movwf	(sprintf@width+1)& (0+255),b
  2394  000050  0E00               	movlw	0
  2395  000052  6F1A               	movwf	sprintf@width& (0+255),b
  2396                           
  2397                           ;doprnt.c: 548: flag = 0;
  2398  000054  0E00               	movlw	0
  2399  000056  0101               	movlb	1	; () banked
  2400  000058  6F15               	movwf	(sprintf@flag+1)& (0+255),b
  2401  00005A  0E00               	movlw	0
  2402  00005C  6F14               	movwf	sprintf@flag& (0+255),b
  2403                           
  2404                           ; BSR set to: 1
  2405                           ;doprnt.c: 551: switch(*f) {
  2406                           
  2407                           ;doprnt.c: 550: for(;;) {
  2408  00005E  D005               	goto	l5671
  2409  000060                     l5667:
  2410                           
  2411                           ;doprnt.c: 580: flag |= 0x04;
  2412  000060  0101               	movlb	1	; () banked
  2413  000062  8514               	bsf	sprintf@flag& (0+255),2,b
  2414                           
  2415                           ;doprnt.c: 581: f++;
  2416  000064  0100               	movlb	0	; () banked
  2417  000066  4BD6               	infsnz	sprintf@f& (0+255),f,b
  2418  000068  2BD7               	incf	(sprintf@f+1)& (0+255),f,b
  2419  00006A                     l5671:
  2420  00006A  C0D6  FFF6         	movff	sprintf@f,tblptrl
  2421  00006E  C0D7  FFF7         	movff	sprintf@f+1,tblptrh
  2422  000072                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2423  000072  6AF8               	clrf	tblptru,c
  2424  000074                     	endif
  2425  000074                     	if	0	;tblptru may be non-zero
  2426  000074                     	endif
  2427  000074  0008               	tblrd		*
  2428  000076  50F5               	movf	tablat,w,c
  2429                           
  2430                           ; Switch size 1, requested type "space"
  2431                           ; Number of cases is 1, Range of values is 48 to 48
  2432                           ; switch strategies available:
  2433                           ; Name         Instructions Cycles
  2434                           ; simple_byte            4     3 (average)
  2435                           ;	Chosen strategy is simple_byte
  2436  000078  0A30               	xorlw	48	; case 48
  2437  00007A  B4D8               	btfsc	status,2,c
  2438  00007C  D7F1               	goto	l5667
  2439                           
  2440                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2441                           
  2442                           ;doprnt.c: 586: }
  2443                           
  2444                           ;doprnt.c: 585: break;
  2445  00007E  C0D6  FFF6         	movff	sprintf@f,tblptrl
  2446  000082  C0D7  FFF7         	movff	sprintf@f+1,tblptrh
  2447  000086                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2448  000086  6AF8               	clrf	tblptru,c
  2449  000088                     	endif
  2450  000088                     	if	0	;tblptru may be non-zero
  2451  000088                     	endif
  2452  000088  0008               	tblrd		*
  2453  00008A  50F5               	movf	tablat,w,c
  2454  00008C  ECD2  F026         	call	_isdigit
  2455  000090  A0D8               	btfss	status,0,c
  2456  000092  D042               	goto	l5685
  2457                           
  2458                           ;doprnt.c: 598: width = 0;
  2459  000094  0E00               	movlw	0
  2460  000096  0101               	movlb	1	; () banked
  2461  000098  6F1B               	movwf	(sprintf@width+1)& (0+255),b
  2462  00009A  0E00               	movlw	0
  2463  00009C  6F1A               	movwf	sprintf@width& (0+255),b
  2464  00009E                     l5677:
  2465                           
  2466                           ;doprnt.c: 600: width *= 10;
  2467  00009E  C11A  F080         	movff	sprintf@width,___wmul@multiplier
  2468  0000A2  C11B  F081         	movff	sprintf@width+1,___wmul@multiplier+1
  2469  0000A6  0E00               	movlw	0
  2470  0000A8  0100               	movlb	0	; () banked
  2471  0000AA  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2472  0000AC  0E0A               	movlw	10
  2473  0000AE  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2474  0000B0  EC88  F026         	call	___wmul	;wreg free
  2475  0000B4  C080  F11A         	movff	?___wmul,sprintf@width
  2476  0000B8  C081  F11B         	movff	?___wmul+1,sprintf@width+1
  2477                           
  2478                           ;doprnt.c: 601: width += *f++ - '0';
  2479  0000BC  0ED0               	movlw	208
  2480  0000BE  0100               	movlb	0	; () banked
  2481  0000C0  6FDE               	movwf	??_sprintf& (0+255),b
  2482  0000C2  0EFF               	movlw	255
  2483  0000C4  0100               	movlb	0	; () banked
  2484  0000C6  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  2485  0000C8  C0D6  FFF6         	movff	sprintf@f,tblptrl
  2486  0000CC  C0D7  FFF7         	movff	sprintf@f+1,tblptrh
  2487  0000D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2488  0000D0  6AF8               	clrf	tblptru,c
  2489  0000D2                     	endif
  2490  0000D2                     	if	0	;tblptru may be non-zero
  2491  0000D2                     	endif
  2492  0000D2  0008               	tblrd		*
  2493  0000D4  50F5               	movf	tablat,w,c
  2494  0000D6  0100               	movlb	0	; () banked
  2495  0000D8  6FE0               	movwf	(??_sprintf+2)& (0+255),b
  2496  0000DA  6BE1               	clrf	(??_sprintf+3)& (0+255),b
  2497  0000DC  0100               	movlb	0	; () banked
  2498  0000DE  51DE               	movf	??_sprintf& (0+255),w,b
  2499  0000E0  0100               	movlb	0	; () banked
  2500  0000E2  27E0               	addwf	(??_sprintf+2)& (0+255),f,b
  2501  0000E4  0100               	movlb	0	; () banked
  2502  0000E6  51DF               	movf	(??_sprintf+1)& (0+255),w,b
  2503  0000E8  0100               	movlb	0	; () banked
  2504  0000EA  23E1               	addwfc	(??_sprintf+3)& (0+255),f,b
  2505  0000EC  0100               	movlb	0	; () banked
  2506  0000EE  51E0               	movf	(??_sprintf+2)& (0+255),w,b
  2507  0000F0  0101               	movlb	1	; () banked
  2508  0000F2  271A               	addwf	sprintf@width& (0+255),f,b
  2509  0000F4  0100               	movlb	0	; () banked
  2510  0000F6  51E1               	movf	(??_sprintf+3)& (0+255),w,b
  2511  0000F8  0101               	movlb	1	; () banked
  2512  0000FA  231B               	addwfc	(sprintf@width+1)& (0+255),f,b
  2513                           
  2514                           ; BSR set to: 1
  2515  0000FC  0100               	movlb	0	; () banked
  2516  0000FE  4BD6               	infsnz	sprintf@f& (0+255),f,b
  2517  000100  2BD7               	incf	(sprintf@f+1)& (0+255),f,b
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2521  000102  C0D6  FFF6         	movff	sprintf@f,tblptrl
  2522  000106  C0D7  FFF7         	movff	sprintf@f+1,tblptrh
  2523  00010A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2524  00010A  6AF8               	clrf	tblptru,c
  2525  00010C                     	endif
  2526  00010C                     	if	0	;tblptru may be non-zero
  2527  00010C                     	endif
  2528  00010C  0008               	tblrd		*
  2529  00010E  50F5               	movf	tablat,w,c
  2530  000110  ECD2  F026         	call	_isdigit
  2531  000114  B0D8               	btfsc	status,0,c
  2532  000116  D7C3               	goto	l5677
  2533  000118                     l5685:
  2534                           
  2535                           ;doprnt.c: 608: }
  2536                           ;doprnt.c: 611: if(*f == '.') {
  2537  000118  C0D6  FFF6         	movff	sprintf@f,tblptrl
  2538  00011C  C0D7  FFF7         	movff	sprintf@f+1,tblptrh
  2539  000120                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2540  000120  6AF8               	clrf	tblptru,c
  2541  000122                     	endif
  2542  000122                     	if	0	;tblptru may be non-zero
  2543  000122                     	endif
  2544  000122  0008               	tblrd		*
  2545  000124  50F5               	movf	tablat,w,c
  2546  000126  0A2E               	xorlw	46
  2547  000128  A4D8               	btfss	status,2,c
  2548  00012A  D03B               	goto	l5697
  2549                           
  2550                           ;doprnt.c: 612: flag |= 0x4000;
  2551  00012C  0101               	movlb	1	; () banked
  2552  00012E  8D15               	bsf	(sprintf@flag+1)& (0+255),6,b
  2553                           
  2554                           ;doprnt.c: 613: f++;
  2555  000130  0100               	movlb	0	; () banked
  2556  000132  4BD6               	infsnz	sprintf@f& (0+255),f,b
  2557  000134  2BD7               	incf	(sprintf@f+1)& (0+255),f,b
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;doprnt.c: 620: {
  2561                           ;doprnt.c: 621: prec = 0;
  2562  000136  0E00               	movlw	0
  2563  000138  0101               	movlb	1	; () banked
  2564  00013A  6F1D               	movwf	(sprintf@prec+1)& (0+255),b
  2565  00013C  0E00               	movlw	0
  2566  00013E  6F1C               	movwf	sprintf@prec& (0+255),b
  2567                           
  2568                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2569  000140  D024               	goto	l5695
  2570  000142                     l5691:
  2571                           
  2572                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2573  000142  C11C  F080         	movff	sprintf@prec,___wmul@multiplier
  2574  000146  C11D  F081         	movff	sprintf@prec+1,___wmul@multiplier+1
  2575  00014A  0E00               	movlw	0
  2576  00014C  0100               	movlb	0	; () banked
  2577  00014E  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2578  000150  0E0A               	movlw	10
  2579  000152  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2580  000154  EC88  F026         	call	___wmul	;wreg free
  2581  000158  C0D6  FFF6         	movff	sprintf@f,tblptrl
  2582  00015C  C0D7  FFF7         	movff	sprintf@f+1,tblptrh
  2583  000160                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2584  000160  6AF8               	clrf	tblptru,c
  2585  000162                     	endif
  2586  000162                     	if	0	;tblptru may be non-zero
  2587  000162                     	endif
  2588  000162  0008               	tblrd		*
  2589  000164  50F5               	movf	tablat,w,c
  2590  000166  0100               	movlb	0	; () banked
  2591  000168  2780               	addwf	?___wmul& (0+255),f,b
  2592  00016A  0E00               	movlw	0
  2593  00016C  0100               	movlb	0	; () banked
  2594  00016E  2381               	addwfc	(?___wmul+1)& (0+255),f,b
  2595  000170  0ED0               	movlw	208
  2596  000172  0100               	movlb	0	; () banked
  2597  000174  2580               	addwf	?___wmul& (0+255),w,b
  2598  000176  0101               	movlb	1	; () banked
  2599  000178  6F1C               	movwf	sprintf@prec& (0+255),b
  2600  00017A  0EFF               	movlw	255
  2601  00017C  0100               	movlb	0	; () banked
  2602  00017E  2181               	addwfc	(?___wmul+1)& (0+255),w,b
  2603  000180  0101               	movlb	1	; () banked
  2604  000182  6F1D               	movwf	(sprintf@prec+1)& (0+255),b
  2605                           
  2606                           ; BSR set to: 1
  2607  000184  0100               	movlb	0	; () banked
  2608  000186  4BD6               	infsnz	sprintf@f& (0+255),f,b
  2609  000188  2BD7               	incf	(sprintf@f+1)& (0+255),f,b
  2610  00018A                     l5695:
  2611  00018A  C0D6  FFF6         	movff	sprintf@f,tblptrl
  2612  00018E  C0D7  FFF7         	movff	sprintf@f+1,tblptrh
  2613  000192                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2614  000192  6AF8               	clrf	tblptru,c
  2615  000194                     	endif
  2616  000194                     	if	0	;tblptru may be non-zero
  2617  000194                     	endif
  2618  000194  0008               	tblrd		*
  2619  000196  50F5               	movf	tablat,w,c
  2620  000198  ECD2  F026         	call	_isdigit
  2621  00019C  A0D8               	btfss	status,0,c
  2622  00019E  D0B9               	goto	l5745
  2623  0001A0  D7D0               	goto	l5691
  2624  0001A2                     l5697:
  2625                           
  2626                           ;doprnt.c: 626: prec = 0;
  2627  0001A2  0E00               	movlw	0
  2628  0001A4  0101               	movlb	1	; () banked
  2629  0001A6  6F1D               	movwf	(sprintf@prec+1)& (0+255),b
  2630  0001A8  0E00               	movlw	0
  2631  0001AA  6F1C               	movwf	sprintf@prec& (0+255),b
  2632                           
  2633                           ; BSR set to: 1
  2634                           ;doprnt.c: 628: flag |= 0x1000;
  2635  0001AC  0101               	movlb	1	; () banked
  2636  0001AE  8915               	bsf	(sprintf@flag+1)& (0+255),4,b
  2637                           
  2638                           ; BSR set to: 1
  2639                           ;doprnt.c: 630: }
  2640                           ;doprnt.c: 635: switch(c = *f++) {
  2641  0001B0  D0B0               	goto	l5745
  2642  0001B2                     l5701:
  2643                           
  2644                           ; BSR set to: 1
  2645                           ;doprnt.c: 663: flag |= 0x400;
  2646  0001B2  0101               	movlb	1	; () banked
  2647  0001B4  8515               	bsf	(sprintf@flag+1)& (0+255),2,b
  2648                           
  2649                           ; BSR set to: 1
  2650                           ;doprnt.c: 698: case 'i':
  2651                           ;doprnt.c: 699: break;
  2652                           
  2653                           ; BSR set to: 1
  2654                           
  2655                           ;doprnt.c: 697: case 'd':
  2656                           
  2657                           ;doprnt.c: 664: break;
  2658  0001B6  D0CC               	goto	l5747
  2659  0001B8                     l5703:
  2660                           
  2661                           ; BSR set to: 1
  2662                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2663  0001B8  C106  FFD9         	movff	sprintf@ap,fsr2l
  2664  0001BC  C107  FFDA         	movff	sprintf@ap+1,fsr2h
  2665  0001C0  CFDE F104          	movff	postinc2,sprintf@cp
  2666  0001C4  CFDD F105          	movff	postdec2,sprintf@cp+1
  2667                           
  2668                           ; BSR set to: 1
  2669  0001C8  0E02               	movlw	2
  2670  0001CA  0101               	movlb	1	; () banked
  2671  0001CC  2706               	addwf	sprintf@ap& (0+255),f,b
  2672  0001CE  0E00               	movlw	0
  2673  0001D0  2307               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2674                           
  2675                           ; BSR set to: 1
  2676                           ;doprnt.c: 740: if(!cp)
  2677  0001D2  0101               	movlb	1	; () banked
  2678  0001D4  5104               	movf	sprintf@cp& (0+255),w,b
  2679  0001D6  0101               	movlb	1	; () banked
  2680  0001D8  1105               	iorwf	(sprintf@cp+1)& (0+255),w,b
  2681  0001DA  A4D8               	btfss	status,2,c
  2682  0001DC  D006               	goto	l5711
  2683                           
  2684                           ; BSR set to: 1
  2685                           ;doprnt.c: 741: cp = "(null)";
  2686  0001DE  0EAE               	movlw	low STR_21
  2687  0001E0  0101               	movlb	1	; () banked
  2688  0001E2  6F04               	movwf	sprintf@cp& (0+255),b
  2689  0001E4  0EFF               	movlw	high STR_21
  2690  0001E6  0101               	movlb	1	; () banked
  2691  0001E8  6F05               	movwf	(sprintf@cp+1)& (0+255),b
  2692  0001EA                     l5711:
  2693                           
  2694                           ; BSR set to: 1
  2695                           ;doprnt.c: 745: len = 0;
  2696  0001EA  0E00               	movlw	0
  2697  0001EC  0101               	movlb	1	; () banked
  2698  0001EE  6F09               	movwf	(sprintf@len+1)& (0+255),b
  2699  0001F0  0E00               	movlw	0
  2700  0001F2  6F08               	movwf	sprintf@len& (0+255),b
  2701                           
  2702                           ;doprnt.c: 746: while(cp[len])
  2703  0001F4  D003               	goto	l5715
  2704  0001F6                     l5713:
  2705                           
  2706                           ;doprnt.c: 747: len++;
  2707  0001F6  0101               	movlb	1	; () banked
  2708  0001F8  4B08               	infsnz	sprintf@len& (0+255),f,b
  2709  0001FA  2B09               	incf	(sprintf@len+1)& (0+255),f,b
  2710  0001FC                     l5715:
  2711                           
  2712                           ; BSR set to: 1
  2713  0001FC  0101               	movlb	1	; () banked
  2714  0001FE  5108               	movf	sprintf@len& (0+255),w,b
  2715  000200  0101               	movlb	1	; () banked
  2716  000202  2504               	addwf	sprintf@cp& (0+255),w,b
  2717  000204  0100               	movlb	0	; () banked
  2718  000206  6FDE               	movwf	??_sprintf& (0+255),b
  2719  000208  0101               	movlb	1	; () banked
  2720  00020A  5109               	movf	(sprintf@len+1)& (0+255),w,b
  2721  00020C  0101               	movlb	1	; () banked
  2722  00020E  2105               	addwfc	(sprintf@cp+1)& (0+255),w,b
  2723  000210  0100               	movlb	0	; () banked
  2724  000212  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  2725  000214  C0DE  FFF6         	movff	??_sprintf,tblptrl
  2726  000218  C0DF  FFF7         	movff	??_sprintf+1,tblptrh
  2727  00021C  0E00               	movlw	low (__mediumconst shr (0+16))
  2728  00021E  6EF8               	movwf	tblptru,c
  2729  000220  0E0F               	movlw	(high __ramtop+-1)
  2730  000222  64F7               	cpfsgt	tblptrh,c
  2731  000224  D003               	bra	u7107
  2732  000226  0008               	tblrd		*
  2733  000228  50F5               	movf	tablat,w,c
  2734  00022A  D005               	bra	u7100
  2735  00022C                     u7107:
  2736  00022C  CFF6 FFE1          	movff	tblptrl,fsr1l
  2737  000230  CFF7 FFE2          	movff	tblptrh,fsr1h
  2738  000234  50E7               	movf	indf1,w,c
  2739  000236                     u7100:
  2740  000236  0900               	iorlw	0
  2741  000238  A4D8               	btfss	status,2,c
  2742  00023A  D7DD               	goto	l5713
  2743                           
  2744                           ;doprnt.c: 753: if(prec && prec < len)
  2745  00023C  0101               	movlb	1	; () banked
  2746  00023E  511C               	movf	sprintf@prec& (0+255),w,b
  2747  000240  0101               	movlb	1	; () banked
  2748  000242  111D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2749  000244  B4D8               	btfsc	status,2,c
  2750  000246  D00E               	goto	l5723
  2751                           
  2752                           ; BSR set to: 1
  2753  000248  0101               	movlb	1	; () banked
  2754  00024A  5108               	movf	sprintf@len& (0+255),w,b
  2755  00024C  0101               	movlb	1	; () banked
  2756  00024E  5D1C               	subwf	sprintf@prec& (0+255),w,b
  2757  000250  0101               	movlb	1	; () banked
  2758  000252  5109               	movf	(sprintf@len+1)& (0+255),w,b
  2759  000254  0101               	movlb	1	; () banked
  2760  000256  591D               	subwfb	(sprintf@prec+1)& (0+255),w,b
  2761  000258  B0D8               	btfsc	status,0,c
  2762  00025A  D004               	goto	l5723
  2763                           
  2764                           ; BSR set to: 1
  2765                           ;doprnt.c: 754: len = prec;
  2766  00025C  C11C  F108         	movff	sprintf@prec,sprintf@len
  2767  000260  C11D  F109         	movff	sprintf@prec+1,sprintf@len+1
  2768  000264                     l5723:
  2769                           
  2770                           ; BSR set to: 1
  2771                           ;doprnt.c: 757: if(width > len)
  2772  000264  0101               	movlb	1	; () banked
  2773  000266  511A               	movf	sprintf@width& (0+255),w,b
  2774  000268  0101               	movlb	1	; () banked
  2775  00026A  5D08               	subwf	sprintf@len& (0+255),w,b
  2776  00026C  0101               	movlb	1	; () banked
  2777  00026E  511B               	movf	(sprintf@width+1)& (0+255),w,b
  2778  000270  0101               	movlb	1	; () banked
  2779  000272  5909               	subwfb	(sprintf@len+1)& (0+255),w,b
  2780  000274  B0D8               	btfsc	status,0,c
  2781  000276  D009               	goto	l5727
  2782                           
  2783                           ; BSR set to: 1
  2784                           ;doprnt.c: 758: width -= len;
  2785  000278  0101               	movlb	1	; () banked
  2786  00027A  5108               	movf	sprintf@len& (0+255),w,b
  2787  00027C  0101               	movlb	1	; () banked
  2788  00027E  5F1A               	subwf	sprintf@width& (0+255),f,b
  2789  000280  0101               	movlb	1	; () banked
  2790  000282  5109               	movf	(sprintf@len+1)& (0+255),w,b
  2791  000284  0101               	movlb	1	; () banked
  2792  000286  5B1B               	subwfb	(sprintf@width+1)& (0+255),f,b
  2793  000288  D00F               	goto	l5733
  2794  00028A                     l5727:
  2795                           
  2796                           ; BSR set to: 1
  2797                           ;doprnt.c: 759: else
  2798                           ;doprnt.c: 760: width = 0;
  2799  00028A  0E00               	movlw	0
  2800  00028C  0101               	movlb	1	; () banked
  2801  00028E  6F1B               	movwf	(sprintf@width+1)& (0+255),b
  2802  000290  0E00               	movlw	0
  2803  000292  6F1A               	movwf	sprintf@width& (0+255),b
  2804                           
  2805                           ; BSR set to: 1
  2806                           ;doprnt.c: 764: while(width--)
  2807  000294  D009               	goto	l5733
  2808  000296                     l5729:
  2809                           
  2810                           ; BSR set to: 1
  2811                           ;doprnt.c: 765: ((*sp++ = (' ')));
  2812  000296  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  2813  00029A  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  2814  00029E  0E20               	movlw	32
  2815  0002A0  6EDF               	movwf	indf2,c
  2816                           
  2817                           ; BSR set to: 1
  2818  0002A2  0100               	movlb	0	; () banked
  2819  0002A4  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  2820  0002A6  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  2821  0002A8                     l5733:
  2822  0002A8  0101               	movlb	1	; () banked
  2823  0002AA  071A               	decf	sprintf@width& (0+255),f,b
  2824  0002AC  A0D8               	btfss	status,0,c
  2825  0002AE  071B               	decf	(sprintf@width+1)& (0+255),f,b
  2826  0002B0  0101               	movlb	1	; () banked
  2827  0002B2  291A               	incf	sprintf@width& (0+255),w,b
  2828  0002B4  E1F0               	bnz	l5729
  2829  0002B6  0101               	movlb	1	; () banked
  2830  0002B8  291B               	incf	(sprintf@width+1)& (0+255),w,b
  2831  0002BA  B4D8               	btfsc	status,2,c
  2832  0002BC  D01D               	goto	l5741
  2833  0002BE  D7EB               	goto	l5729
  2834  0002C0                     l5735:
  2835                           
  2836                           ; BSR set to: 1
  2837                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  2838  0002C0  C104  FFF6         	movff	sprintf@cp,tblptrl
  2839  0002C4  C105  FFF7         	movff	sprintf@cp+1,tblptrh
  2840  0002C8  0E00               	movlw	low (__mediumconst shr (0+16))
  2841  0002CA  6EF8               	movwf	tblptru,c
  2842  0002CC  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  2843  0002D0  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  2844  0002D4  0E0F               	movlw	(high __ramtop+-1)
  2845  0002D6  64F7               	cpfsgt	tblptrh,c
  2846  0002D8  D003               	bra	u7167
  2847  0002DA  0008               	tblrd		*
  2848  0002DC  50F5               	movf	tablat,w,c
  2849  0002DE  D005               	bra	u7160
  2850  0002E0                     u7167:
  2851  0002E0  CFF6 FFE1          	movff	tblptrl,fsr1l
  2852  0002E4  CFF7 FFE2          	movff	tblptrh,fsr1h
  2853  0002E8  50E7               	movf	indf1,w,c
  2854  0002EA                     u7160:
  2855  0002EA  6EDF               	movwf	indf2,c
  2856  0002EC  0101               	movlb	1	; () banked
  2857  0002EE  4B04               	infsnz	sprintf@cp& (0+255),f,b
  2858  0002F0  2B05               	incf	(sprintf@cp+1)& (0+255),f,b
  2859                           
  2860                           ; BSR set to: 1
  2861  0002F2  0100               	movlb	0	; () banked
  2862  0002F4  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  2863  0002F6  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  2864  0002F8                     l5741:
  2865  0002F8  0101               	movlb	1	; () banked
  2866  0002FA  0708               	decf	sprintf@len& (0+255),f,b
  2867  0002FC  A0D8               	btfss	status,0,c
  2868  0002FE  0709               	decf	(sprintf@len+1)& (0+255),f,b
  2869  000300  0101               	movlb	1	; () banked
  2870  000302  2908               	incf	sprintf@len& (0+255),w,b
  2871  000304  E1DD               	bnz	l5735
  2872  000306  0101               	movlb	1	; () banked
  2873  000308  2909               	incf	(sprintf@len+1)& (0+255),w,b
  2874  00030A  B4D8               	btfsc	status,2,c
  2875  00030C  EF26  F007         	goto	l6023
  2876  000310  D7D7               	goto	l5735
  2877  000312                     l5745:
  2878  000312  C0D6  FFF6         	movff	sprintf@f,tblptrl
  2879  000316  C0D7  FFF7         	movff	sprintf@f+1,tblptrh
  2880  00031A  0100               	movlb	0	; () banked
  2881  00031C  4BD6               	infsnz	sprintf@f& (0+255),f,b
  2882  00031E  2BD7               	incf	(sprintf@f+1)& (0+255),f,b
  2883  000320                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2884  000320  6AF8               	clrf	tblptru,c
  2885  000322                     	endif
  2886  000322                     	if	0	;tblptru may be non-zero
  2887  000322                     	endif
  2888  000322  0008               	tblrd		*
  2889  000324  CFF5 F11E          	movff	tablat,sprintf@c
  2890  000328  0101               	movlb	1	; () banked
  2891  00032A  511E               	movf	sprintf@c& (0+255),w,b
  2892                           
  2893                           ; Switch size 1, requested type "space"
  2894                           ; Number of cases is 5, Range of values is 0 to 115
  2895                           ; switch strategies available:
  2896                           ; Name         Instructions Cycles
  2897                           ; simple_byte           16     9 (average)
  2898                           ;	Chosen strategy is simple_byte
  2899  00032C  0A00               	xorlw	0	; case 0
  2900  00032E  B4D8               	btfsc	status,2,c
  2901  000330  EF36  F007         	goto	l6025
  2902  000334  0A64               	xorlw	100	; case 100
  2903  000336  B4D8               	btfsc	status,2,c
  2904  000338  D00B               	goto	l5747
  2905  00033A  0A02               	xorlw	2	; case 102
  2906  00033C  B4D8               	btfsc	status,2,c
  2907  00033E  D739               	goto	l5701
  2908  000340  0A0F               	xorlw	15	; case 105
  2909  000342  B4D8               	btfsc	status,2,c
  2910  000344  D005               	goto	l5747
  2911  000346  0A1A               	xorlw	26	; case 115
  2912  000348  B4D8               	btfsc	status,2,c
  2913  00034A  D736               	goto	l5703
  2914  00034C  EF26  F007         	goto	l6023
  2915  000350                     l5747:
  2916                           
  2917                           ; BSR set to: 1
  2918                           ;doprnt.c: 825: if(flag & (0x700)) {
  2919  000350  0E07               	movlw	7
  2920  000352  0101               	movlb	1	; () banked
  2921  000354  1515               	andwf	(sprintf@flag+1)& (0+255),w,b
  2922  000356  B4D8               	btfsc	status,2,c
  2923  000358  D3DB               	goto	l5927
  2924                           
  2925                           ; BSR set to: 1
  2926                           ;doprnt.c: 827: if(flag & 0x1000)
  2927  00035A  0101               	movlb	1	; () banked
  2928  00035C  A915               	btfss	(sprintf@flag+1)& (0+255),4,b
  2929  00035E  D005               	goto	l5753
  2930                           
  2931                           ; BSR set to: 1
  2932                           ;doprnt.c: 829: prec = 6;
  2933  000360  0E00               	movlw	0
  2934  000362  0101               	movlb	1	; () banked
  2935  000364  6F1D               	movwf	(sprintf@prec+1)& (0+255),b
  2936  000366  0E06               	movlw	6
  2937  000368  6F1C               	movwf	sprintf@prec& (0+255),b
  2938  00036A                     l5753:
  2939                           
  2940                           ; BSR set to: 1
  2941                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2942  00036A  C106  FFD9         	movff	sprintf@ap,fsr2l
  2943  00036E  C107  FFDA         	movff	sprintf@ap+1,fsr2h
  2944  000372  CFDE F116          	movff	postinc2,sprintf@fval
  2945  000376  CFDE F117          	movff	postinc2,sprintf@fval+1
  2946  00037A  CFDE F118          	movff	postinc2,sprintf@fval+2
  2947  00037E  CFDE F119          	movff	postinc2,sprintf@fval+3
  2948                           
  2949                           ; BSR set to: 1
  2950  000382  0E04               	movlw	4
  2951  000384  0101               	movlb	1	; () banked
  2952  000386  2706               	addwf	sprintf@ap& (0+255),f,b
  2953  000388  0E00               	movlw	0
  2954  00038A  2307               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2955                           
  2956                           ; BSR set to: 1
  2957                           ;doprnt.c: 831: if(fval < 0.0) {
  2958  00038C  0101               	movlb	1	; () banked
  2959  00038E  AF19               	btfss	(sprintf@fval+3)& (0+255),7,b
  2960  000390  D015               	goto	l5763
  2961                           
  2962                           ; BSR set to: 1
  2963                           ;doprnt.c: 832: fval = -fval;
  2964  000392  C116  F080         	movff	sprintf@fval,___flneg@f1
  2965  000396  C117  F081         	movff	sprintf@fval+1,___flneg@f1+1
  2966  00039A  C118  F082         	movff	sprintf@fval+2,___flneg@f1+2
  2967  00039E  C119  F083         	movff	sprintf@fval+3,___flneg@f1+3
  2968  0003A2  EC6C  F026         	call	___flneg	;wreg free
  2969  0003A6  C080  F116         	movff	?___flneg,sprintf@fval
  2970  0003AA  C081  F117         	movff	?___flneg+1,sprintf@fval+1
  2971  0003AE  C082  F118         	movff	?___flneg+2,sprintf@fval+2
  2972  0003B2  C083  F119         	movff	?___flneg+3,sprintf@fval+3
  2973                           
  2974                           ;doprnt.c: 833: flag |= 0x03;
  2975  0003B6  0E03               	movlw	3
  2976  0003B8  0101               	movlb	1	; () banked
  2977  0003BA  1314               	iorwf	sprintf@flag& (0+255),f,b
  2978  0003BC                     l5763:
  2979                           
  2980                           ; BSR set to: 1
  2981                           ;doprnt.c: 834: }
  2982                           ;doprnt.c: 835: exp = 0;
  2983  0003BC  0E00               	movlw	0
  2984  0003BE  0101               	movlb	1	; () banked
  2985  0003C0  6F13               	movwf	(sprintf@exp+1)& (0+255),b
  2986  0003C2  0E00               	movlw	0
  2987  0003C4  6F12               	movwf	sprintf@exp& (0+255),b
  2988                           
  2989                           ; BSR set to: 1
  2990                           ;doprnt.c: 836: if( fval!=0) {
  2991  0003C6  0101               	movlb	1	; () banked
  2992  0003C8  5116               	movf	sprintf@fval& (0+255),w,b
  2993  0003CA  0101               	movlb	1	; () banked
  2994  0003CC  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2995  0003CE  0101               	movlb	1	; () banked
  2996  0003D0  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
  2997  0003D2  0101               	movlb	1	; () banked
  2998  0003D4  1119               	iorwf	(sprintf@fval+3)& (0+255),w,b
  2999  0003D6  B4D8               	btfsc	status,2,c
  3000  0003D8  D08E               	goto	l5791
  3001                           
  3002                           ; BSR set to: 1
  3003                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3004  0003DA  0101               	movlb	1	; () banked
  3005  0003DC  3518               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3006  0003DE  3519               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3007  0003E0  0F82               	addlw	130
  3008  0003E2  0101               	movlb	1	; () banked
  3009  0003E4  6F12               	movwf	sprintf@exp& (0+255),b
  3010  0003E6  0101               	movlb	1	; () banked
  3011  0003E8  6B13               	clrf	(sprintf@exp+1)& (0+255),b
  3012  0003EA  0EFF               	movlw	255
  3013  0003EC  2313               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3014                           
  3015                           ; BSR set to: 1
  3016                           ;doprnt.c: 838: exp--;
  3017  0003EE  0101               	movlb	1	; () banked
  3018  0003F0  0712               	decf	sprintf@exp& (0+255),f,b
  3019  0003F2  A0D8               	btfss	status,0,c
  3020  0003F4  0713               	decf	(sprintf@exp+1)& (0+255),f,b
  3021                           
  3022                           ; BSR set to: 1
  3023                           ;doprnt.c: 839: exp *= 3;
  3024  0003F6  C112  F080         	movff	sprintf@exp,___wmul@multiplier
  3025  0003FA  C113  F081         	movff	sprintf@exp+1,___wmul@multiplier+1
  3026  0003FE  0E00               	movlw	0
  3027  000400  0100               	movlb	0	; () banked
  3028  000402  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3029  000404  0E03               	movlw	3
  3030  000406  6F82               	movwf	___wmul@multiplicand& (0+255),b
  3031  000408  EC88  F026         	call	___wmul	;wreg free
  3032  00040C  C080  F112         	movff	?___wmul,sprintf@exp
  3033  000410  C081  F113         	movff	?___wmul+1,sprintf@exp+1
  3034                           
  3035                           ;doprnt.c: 840: exp /= 10;
  3036  000414  C112  F086         	movff	sprintf@exp,___awdiv@dividend
  3037  000418  C113  F087         	movff	sprintf@exp+1,___awdiv@dividend+1
  3038  00041C  0E00               	movlw	0
  3039  00041E  0100               	movlb	0	; () banked
  3040  000420  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  3041  000422  0E0A               	movlw	10
  3042  000424  6F88               	movwf	___awdiv@divisor& (0+255),b
  3043  000426  EC11  F021         	call	___awdiv	;wreg free
  3044  00042A  C086  F112         	movff	?___awdiv,sprintf@exp
  3045  00042E  C087  F113         	movff	?___awdiv+1,sprintf@exp+1
  3046                           
  3047                           ;doprnt.c: 841: if(exp < 0)
  3048  000432  0101               	movlb	1	; () banked
  3049  000434  AF13               	btfss	(sprintf@exp+1)& (0+255),7,b
  3050  000436  D004               	goto	l5779
  3051                           
  3052                           ; BSR set to: 1
  3053                           ;doprnt.c: 842: exp--;
  3054  000438  0101               	movlb	1	; () banked
  3055  00043A  0712               	decf	sprintf@exp& (0+255),f,b
  3056  00043C  A0D8               	btfss	status,0,c
  3057  00043E  0713               	decf	(sprintf@exp+1)& (0+255),f,b
  3058  000440                     l5779:
  3059                           
  3060                           ; BSR set to: 1
  3061                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3062  000440  0101               	movlb	1	; () banked
  3063  000442  5112               	movf	sprintf@exp& (0+255),w,b
  3064  000444  0800               	sublw	0
  3065  000446  EC3D  F007         	call	_scale
  3066  00044A  C0A7  F10A         	movff	?_scale,sprintf@tmpval
  3067  00044E  C0A8  F10B         	movff	?_scale+1,sprintf@tmpval+1
  3068  000452  C0A9  F10C         	movff	?_scale+2,sprintf@tmpval+2
  3069  000456  C0AA  F10D         	movff	?_scale+3,sprintf@tmpval+3
  3070                           
  3071                           ;doprnt.c: 847: tmpval.integ *= fval;
  3072  00045A  C10A  F08E         	movff	sprintf@tmpval,___flmul@b
  3073  00045E  C10B  F08F         	movff	sprintf@tmpval+1,___flmul@b+1
  3074  000462  C10C  F090         	movff	sprintf@tmpval+2,___flmul@b+2
  3075  000466  C10D  F091         	movff	sprintf@tmpval+3,___flmul@b+3
  3076  00046A  C116  F092         	movff	sprintf@fval,___flmul@a
  3077  00046E  C117  F093         	movff	sprintf@fval+1,___flmul@a+1
  3078  000472  C118  F094         	movff	sprintf@fval+2,___flmul@a+2
  3079  000476  C119  F095         	movff	sprintf@fval+3,___flmul@a+3
  3080  00047A  ECA2  F00E         	call	___flmul	;wreg free
  3081  00047E  C08E  F10A         	movff	?___flmul,sprintf@tmpval
  3082  000482  C08F  F10B         	movff	?___flmul+1,sprintf@tmpval+1
  3083  000486  C090  F10C         	movff	?___flmul+2,sprintf@tmpval+2
  3084  00048A  C091  F10D         	movff	?___flmul+3,sprintf@tmpval+3
  3085                           
  3086                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3087  00048E  C10A  F0C8         	movff	sprintf@tmpval,___flge@ff1
  3088  000492  C10B  F0C9         	movff	sprintf@tmpval+1,___flge@ff1+1
  3089  000496  C10C  F0CA         	movff	sprintf@tmpval+2,___flge@ff1+2
  3090  00049A  C10D  F0CB         	movff	sprintf@tmpval+3,___flge@ff1+3
  3091  00049E  0E00               	movlw	0
  3092  0004A0  0100               	movlb	0	; () banked
  3093  0004A2  6FCC               	movwf	___flge@ff2& (0+255),b
  3094  0004A4  0E00               	movlw	0
  3095  0004A6  6FCD               	movwf	(___flge@ff2+1)& (0+255),b
  3096  0004A8  0E80               	movlw	128
  3097  0004AA  6FCE               	movwf	(___flge@ff2+2)& (0+255),b
  3098  0004AC  0E3F               	movlw	63
  3099  0004AE  6FCF               	movwf	(___flge@ff2+3)& (0+255),b
  3100  0004B0  ECA6  F01A         	call	___flge	;wreg free
  3101  0004B4  0100               	movlb	0	; () banked
  3102  0004B6  B0D8               	btfsc	status,0,c
  3103  0004B8  D005               	goto	l5787
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;doprnt.c: 849: exp--;
  3107  0004BA  0101               	movlb	1	; () banked
  3108  0004BC  0712               	decf	sprintf@exp& (0+255),f,b
  3109  0004BE  A0D8               	btfss	status,0,c
  3110  0004C0  0713               	decf	(sprintf@exp+1)& (0+255),f,b
  3111  0004C2  D019               	goto	l5791
  3112  0004C4                     l5787:
  3113                           
  3114                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3115  0004C4  C10A  F0C8         	movff	sprintf@tmpval,___flge@ff1
  3116  0004C8  C10B  F0C9         	movff	sprintf@tmpval+1,___flge@ff1+1
  3117  0004CC  C10C  F0CA         	movff	sprintf@tmpval+2,___flge@ff1+2
  3118  0004D0  C10D  F0CB         	movff	sprintf@tmpval+3,___flge@ff1+3
  3119  0004D4  0E00               	movlw	0
  3120  0004D6  0100               	movlb	0	; () banked
  3121  0004D8  6FCC               	movwf	___flge@ff2& (0+255),b
  3122  0004DA  0E00               	movlw	0
  3123  0004DC  6FCD               	movwf	(___flge@ff2+1)& (0+255),b
  3124  0004DE  0E20               	movlw	32
  3125  0004E0  6FCE               	movwf	(___flge@ff2+2)& (0+255),b
  3126  0004E2  0E41               	movlw	65
  3127  0004E4  6FCF               	movwf	(___flge@ff2+3)& (0+255),b
  3128  0004E6  ECA6  F01A         	call	___flge	;wreg free
  3129  0004EA  0100               	movlb	0	; () banked
  3130  0004EC  A0D8               	btfss	status,0,c
  3131  0004EE  D003               	goto	l5791
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;doprnt.c: 851: exp++;
  3135  0004F0  0101               	movlb	1	; () banked
  3136  0004F2  4B12               	infsnz	sprintf@exp& (0+255),f,b
  3137  0004F4  2B13               	incf	(sprintf@exp+1)& (0+255),f,b
  3138  0004F6                     l5791:
  3139                           
  3140                           ;doprnt.c: 852: }
  3141                           ;doprnt.c: 1112: if(prec <= 12)
  3142  0004F6  0101               	movlb	1	; () banked
  3143  0004F8  BF1D               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3144  0004FA  D008               	goto	l5793
  3145  0004FC  0101               	movlb	1	; () banked
  3146  0004FE  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  3147  000500  E123               	bnz	l5795
  3148  000502  0E0D               	movlw	13
  3149  000504  0101               	movlb	1	; () banked
  3150  000506  5D1C               	subwf	sprintf@prec& (0+255),w,b
  3151  000508  B0D8               	btfsc	status,0,c
  3152  00050A  D01E               	goto	l5795
  3153  00050C                     l5793:
  3154                           
  3155                           ; BSR set to: 1
  3156                           ;doprnt.c: 1113: fval += fround(prec);
  3157  00050C  C116  F0B4         	movff	sprintf@fval,___fladd@b
  3158  000510  C117  F0B5         	movff	sprintf@fval+1,___fladd@b+1
  3159  000514  C118  F0B6         	movff	sprintf@fval+2,___fladd@b+2
  3160  000518  C119  F0B7         	movff	sprintf@fval+3,___fladd@b+3
  3161  00051C  0101               	movlb	1	; () banked
  3162  00051E  511C               	movf	sprintf@prec& (0+255),w,b
  3163  000520  EC1B  F016         	call	_fround
  3164  000524  C0A7  F0B8         	movff	?_fround,___fladd@a
  3165  000528  C0A8  F0B9         	movff	?_fround+1,___fladd@a+1
  3166  00052C  C0A9  F0BA         	movff	?_fround+2,___fladd@a+2
  3167  000530  C0AA  F0BB         	movff	?_fround+3,___fladd@a+3
  3168  000534  EC4E  F00C         	call	___fladd	;wreg free
  3169  000538  C0B4  F116         	movff	?___fladd,sprintf@fval
  3170  00053C  C0B5  F117         	movff	?___fladd+1,sprintf@fval+1
  3171  000540  C0B6  F118         	movff	?___fladd+2,sprintf@fval+2
  3172  000544  C0B7  F119         	movff	?___fladd+3,sprintf@fval+3
  3173  000548                     l5795:
  3174                           
  3175                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3176  000548  0101               	movlb	1	; () banked
  3177  00054A  BF13               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3178  00054C  D008               	goto	l5797
  3179  00054E  0101               	movlb	1	; () banked
  3180  000550  5113               	movf	(sprintf@exp+1)& (0+255),w,b
  3181  000552  E12E               	bnz	l5803
  3182  000554  0E0A               	movlw	10
  3183  000556  0101               	movlb	1	; () banked
  3184  000558  5D12               	subwf	sprintf@exp& (0+255),w,b
  3185  00055A  B0D8               	btfsc	status,0,c
  3186  00055C  D029               	goto	l5803
  3187  00055E                     l5797:
  3188                           
  3189                           ; BSR set to: 1
  3190  00055E  0101               	movlb	1	; () banked
  3191  000560  5116               	movf	sprintf@fval& (0+255),w,b
  3192  000562  0101               	movlb	1	; () banked
  3193  000564  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3194  000566  0101               	movlb	1	; () banked
  3195  000568  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3196  00056A  0101               	movlb	1	; () banked
  3197  00056C  1119               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3198  00056E  B4D8               	btfsc	status,2,c
  3199  000570  D06D               	goto	l5817
  3200                           
  3201                           ; BSR set to: 1
  3202  000572  C116  F0C8         	movff	sprintf@fval,___fltol@f1
  3203  000576  C117  F0C9         	movff	sprintf@fval+1,___fltol@f1+1
  3204  00057A  C118  F0CA         	movff	sprintf@fval+2,___fltol@f1+2
  3205  00057E  C119  F0CB         	movff	sprintf@fval+3,___fltol@f1+3
  3206  000582  EC5A  F01F         	call	___fltol	;wreg free
  3207  000586  0100               	movlb	0	; () banked
  3208  000588  51C8               	movf	?___fltol& (0+255),w,b
  3209  00058A  0100               	movlb	0	; () banked
  3210  00058C  11C9               	iorwf	(?___fltol+1)& (0+255),w,b
  3211  00058E  0100               	movlb	0	; () banked
  3212  000590  11CA               	iorwf	(?___fltol+2)& (0+255),w,b
  3213  000592  0100               	movlb	0	; () banked
  3214  000594  11CB               	iorwf	(?___fltol+3)& (0+255),w,b
  3215  000596  A4D8               	btfss	status,2,c
  3216  000598  D059               	goto	l5817
  3217                           
  3218                           ; BSR set to: 0
  3219  00059A  0101               	movlb	1	; () banked
  3220  00059C  BF13               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3221  00059E  D056               	goto	l5817
  3222  0005A0  0101               	movlb	1	; () banked
  3223  0005A2  5113               	movf	(sprintf@exp+1)& (0+255),w,b
  3224  0005A4  E105               	bnz	l5803
  3225  0005A6  0E02               	movlw	2
  3226  0005A8  0101               	movlb	1	; () banked
  3227  0005AA  5D12               	subwf	sprintf@exp& (0+255),w,b
  3228  0005AC  A0D8               	btfss	status,0,c
  3229  0005AE  D04E               	goto	l5817
  3230  0005B0                     l5803:
  3231                           
  3232                           ; BSR set to: 1
  3233                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3234  0005B0  C10A  F0C8         	movff	sprintf@tmpval,___flge@ff1
  3235  0005B4  C10B  F0C9         	movff	sprintf@tmpval+1,___flge@ff1+1
  3236  0005B8  C10C  F0CA         	movff	sprintf@tmpval+2,___flge@ff1+2
  3237  0005BC  C10D  F0CB         	movff	sprintf@tmpval+3,___flge@ff1+3
  3238  0005C0  0E5F               	movlw	95
  3239  0005C2  0100               	movlb	0	; () banked
  3240  0005C4  6FCC               	movwf	___flge@ff2& (0+255),b
  3241  0005C6  0E70               	movlw	112
  3242  0005C8  6FCD               	movwf	(___flge@ff2+1)& (0+255),b
  3243  0005CA  0E89               	movlw	137
  3244  0005CC  6FCE               	movwf	(___flge@ff2+2)& (0+255),b
  3245  0005CE  0E40               	movlw	64
  3246  0005D0  6FCF               	movwf	(___flge@ff2+3)& (0+255),b
  3247  0005D2  ECA6  F01A         	call	___flge	;wreg free
  3248  0005D6  0100               	movlb	0	; () banked
  3249  0005D8  B0D8               	btfsc	status,0,c
  3250  0005DA  D003               	goto	l5807
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3254  0005DC  0101               	movlb	1	; () banked
  3255  0005DE  0EF7               	movlw	247
  3256  0005E0  D002               	goto	L4
  3257  0005E2                     l5807:
  3258                           
  3259                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3260  0005E2  0101               	movlb	1	; () banked
  3261  0005E4  0EF8               	movlw	248
  3262  0005E6                     L4:
  3263  0005E6  2712               	addwf	sprintf@exp& (0+255),f,b
  3264  0005E8  0EFF               	movlw	255
  3265  0005EA  2313               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3266                           
  3267                           ; BSR set to: 1
  3268                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3269                           
  3270                           ; BSR set to: 1
  3271  0005EC  0101               	movlb	1	; () banked
  3272  0005EE  5112               	movf	sprintf@exp& (0+255),w,b
  3273  0005F0  EC3D  F007         	call	_scale
  3274  0005F4  C0A7  F10A         	movff	?_scale,sprintf@tmpval
  3275  0005F8  C0A8  F10B         	movff	?_scale+1,sprintf@tmpval+1
  3276  0005FC  C0A9  F10C         	movff	?_scale+2,sprintf@tmpval+2
  3277  000600  C0AA  F10D         	movff	?_scale+3,sprintf@tmpval+3
  3278  000604  C116  F080         	movff	sprintf@fval,__div_to_l_@f1
  3279  000608  C117  F081         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3280  00060C  C118  F082         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3281  000610  C119  F083         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3282  000614  C10A  F084         	movff	sprintf@tmpval,__div_to_l_@f2
  3283  000618  C10B  F085         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3284  00061C  C10C  F086         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3285  000620  C10D  F087         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3286  000624  EC6E  F01B         	call	__div_to_l_	;wreg free
  3287  000628  C080  F10E         	movff	?__div_to_l_,sprintf@val
  3288  00062C  C081  F10F         	movff	?__div_to_l_+1,sprintf@val+1
  3289  000630  C082  F110         	movff	?__div_to_l_+2,sprintf@val+2
  3290  000634  C083  F111         	movff	?__div_to_l_+3,sprintf@val+3
  3291                           
  3292                           ;doprnt.c: 1129: fval = 0.0;
  3293  000638  0E00               	movlw	0
  3294  00063A  0101               	movlb	1	; () banked
  3295  00063C  6F16               	movwf	sprintf@fval& (0+255),b
  3296  00063E  0E00               	movlw	0
  3297  000640  6F17               	movwf	(sprintf@fval+1)& (0+255),b
  3298  000642  0E00               	movlw	0
  3299  000644  6F18               	movwf	(sprintf@fval+2)& (0+255),b
  3300  000646  0E00               	movlw	0
  3301  000648  6F19               	movwf	(sprintf@fval+3)& (0+255),b
  3302                           
  3303                           ;doprnt.c: 1130: } else {
  3304  00064A  D03C               	goto	l5821
  3305  00064C                     l5817:
  3306                           
  3307                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3308  00064C  C116  F0C8         	movff	sprintf@fval,___fltol@f1
  3309  000650  C117  F0C9         	movff	sprintf@fval+1,___fltol@f1+1
  3310  000654  C118  F0CA         	movff	sprintf@fval+2,___fltol@f1+2
  3311  000658  C119  F0CB         	movff	sprintf@fval+3,___fltol@f1+3
  3312  00065C  EC5A  F01F         	call	___fltol	;wreg free
  3313  000660  C0C8  F10E         	movff	?___fltol,sprintf@val
  3314  000664  C0C9  F10F         	movff	?___fltol+1,sprintf@val+1
  3315  000668  C0CA  F110         	movff	?___fltol+2,sprintf@val+2
  3316  00066C  C0CB  F111         	movff	?___fltol+3,sprintf@val+3
  3317                           
  3318                           ;doprnt.c: 1132: fval -= (double)val;
  3319  000670  C116  F0C8         	movff	sprintf@fval,___flsub@b
  3320  000674  C117  F0C9         	movff	sprintf@fval+1,___flsub@b+1
  3321  000678  C118  F0CA         	movff	sprintf@fval+2,___flsub@b+2
  3322  00067C  C119  F0CB         	movff	sprintf@fval+3,___flsub@b+3
  3323  000680  C10E  F086         	movff	sprintf@val,___xxtofl@val
  3324  000684  C10F  F087         	movff	sprintf@val+1,___xxtofl@val+1
  3325  000688  C110  F088         	movff	sprintf@val+2,___xxtofl@val+2
  3326  00068C  C111  F089         	movff	sprintf@val+3,___xxtofl@val+3
  3327  000690  0E00               	movlw	0
  3328  000692  ECF0  F018         	call	___xxtofl
  3329  000696  C086  F0CC         	movff	?___xxtofl,___flsub@a
  3330  00069A  C087  F0CD         	movff	?___xxtofl+1,___flsub@a+1
  3331  00069E  C088  F0CE         	movff	?___xxtofl+2,___flsub@a+2
  3332  0006A2  C089  F0CF         	movff	?___xxtofl+3,___flsub@a+3
  3333  0006A6  EC09  F026         	call	___flsub	;wreg free
  3334  0006AA  C0C8  F116         	movff	?___flsub,sprintf@fval
  3335  0006AE  C0C9  F117         	movff	?___flsub+1,sprintf@fval+1
  3336  0006B2  C0CA  F118         	movff	?___flsub+2,sprintf@fval+2
  3337  0006B6  C0CB  F119         	movff	?___flsub+3,sprintf@fval+3
  3338                           
  3339                           ;doprnt.c: 1133: exp = 0;
  3340  0006BA  0E00               	movlw	0
  3341  0006BC  0101               	movlb	1	; () banked
  3342  0006BE  6F13               	movwf	(sprintf@exp+1)& (0+255),b
  3343  0006C0  0E00               	movlw	0
  3344  0006C2  6F12               	movwf	sprintf@exp& (0+255),b
  3345  0006C4                     l5821:
  3346                           
  3347                           ; BSR set to: 1
  3348                           ;doprnt.c: 1134: }
  3349                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3350  0006C4  0E01               	movlw	1
  3351  0006C6  0101               	movlb	1	; () banked
  3352  0006C8  6F1E               	movwf	sprintf@c& (0+255),b
  3353  0006CA                     l5823:
  3354                           
  3355                           ; BSR set to: 1
  3356  0006CA  0E0A               	movlw	10
  3357  0006CC  0101               	movlb	1	; () banked
  3358  0006CE  191E               	xorwf	sprintf@c& (0+255),w,b
  3359  0006D0  B4D8               	btfsc	status,2,c
  3360  0006D2  D021               	goto	l5835
  3361                           
  3362                           ; BSR set to: 1
  3363                           ;doprnt.c: 1137: if(val < dpowers[c])
  3364                           
  3365                           ; BSR set to: 1
  3366                           
  3367                           ; BSR set to: 1
  3368  0006D4  0101               	movlb	1	; () banked
  3369  0006D6  511E               	movf	sprintf@c& (0+255),w,b
  3370  0006D8  0D04               	mullw	4
  3371  0006DA  0E5B               	movlw	low _dpowers
  3372  0006DC  24F3               	addwf	prodl,w,c
  3373  0006DE  6EF6               	movwf	tblptrl,c
  3374  0006E0  0EFF               	movlw	high _dpowers
  3375  0006E2  20F4               	addwfc	prodh,w,c
  3376  0006E4  6EF7               	movwf	tblptrh,c
  3377  0006E6                     	if	1	;There are 3 active tblptr bytes
  3378  0006E6  6AF8               	clrf	tblptru,c
  3379  0006E8  0E00               	movlw	low (__mediumconst shr (0+16))
  3380  0006EA  22F8               	addwfc	tblptru,f,c
  3381  0006EC                     	endif
  3382  0006EC  0009               	tblrd		*+
  3383  0006EE  50F5               	movf	tablat,w,c
  3384  0006F0  0101               	movlb	1	; () banked
  3385  0006F2  5D0E               	subwf	sprintf@val& (0+255),w,b
  3386  0006F4  0009               	tblrd		*+
  3387  0006F6  50F5               	movf	tablat,w,c
  3388  0006F8  0101               	movlb	1	; () banked
  3389  0006FA  590F               	subwfb	(sprintf@val+1)& (0+255),w,b
  3390  0006FC  0009               	tblrd		*+
  3391  0006FE  50F5               	movf	tablat,w,c
  3392  000700  0101               	movlb	1	; () banked
  3393  000702  5910               	subwfb	(sprintf@val+2)& (0+255),w,b
  3394  000704  0009               	tblrd		*+
  3395  000706  50F5               	movf	tablat,w,c
  3396  000708  0101               	movlb	1	; () banked
  3397  00070A  5911               	subwfb	(sprintf@val+3)& (0+255),w,b
  3398  00070C  A0D8               	btfss	status,0,c
  3399  00070E  D003               	goto	l5835
  3400                           
  3401                           ; BSR set to: 1
  3402                           
  3403                           ; BSR set to: 1
  3404                           
  3405                           ; BSR set to: 1
  3406                           ;doprnt.c: 1138: break;
  3407  000710  0101               	movlb	1	; () banked
  3408  000712  2B1E               	incf	sprintf@c& (0+255),f,b
  3409  000714  D7DA               	goto	l5823
  3410  000716                     l5835:
  3411                           
  3412                           ; BSR set to: 1
  3413                           ;doprnt.c: 1142: width -= prec + c + exp;
  3414  000716  C11E  F0DE         	movff	sprintf@c,??_sprintf
  3415  00071A  0100               	movlb	0	; () banked
  3416  00071C  6BDF               	clrf	(??_sprintf+1)& (0+255),b
  3417  00071E  BFDE               	btfsc	??_sprintf& (0+255),7,b
  3418  000720  07DF               	decf	(??_sprintf+1)& (0+255),f,b
  3419  000722  0101               	movlb	1	; () banked
  3420  000724  511C               	movf	sprintf@prec& (0+255),w,b
  3421  000726  0100               	movlb	0	; () banked
  3422  000728  27DE               	addwf	??_sprintf& (0+255),f,b
  3423  00072A  0101               	movlb	1	; () banked
  3424  00072C  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  3425  00072E  0100               	movlb	0	; () banked
  3426  000730  23DF               	addwfc	(??_sprintf+1)& (0+255),f,b
  3427  000732  0101               	movlb	1	; () banked
  3428  000734  5112               	movf	sprintf@exp& (0+255),w,b
  3429  000736  0100               	movlb	0	; () banked
  3430  000738  27DE               	addwf	??_sprintf& (0+255),f,b
  3431  00073A  0101               	movlb	1	; () banked
  3432  00073C  5113               	movf	(sprintf@exp+1)& (0+255),w,b
  3433  00073E  0100               	movlb	0	; () banked
  3434  000740  23DF               	addwfc	(??_sprintf+1)& (0+255),f,b
  3435  000742  0100               	movlb	0	; () banked
  3436  000744  51DE               	movf	??_sprintf& (0+255),w,b
  3437  000746  0101               	movlb	1	; () banked
  3438  000748  5F1A               	subwf	sprintf@width& (0+255),f,b
  3439  00074A  0100               	movlb	0	; () banked
  3440  00074C  51DF               	movf	(??_sprintf+1)& (0+255),w,b
  3441  00074E  0101               	movlb	1	; () banked
  3442  000750  5B1B               	subwfb	(sprintf@width+1)& (0+255),f,b
  3443                           
  3444                           ;doprnt.c: 1143: if(
  3445                           ;doprnt.c: 1147: prec)
  3446  000752  0101               	movlb	1	; () banked
  3447  000754  511C               	movf	sprintf@prec& (0+255),w,b
  3448  000756  0101               	movlb	1	; () banked
  3449  000758  111D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3450  00075A  B4D8               	btfsc	status,2,c
  3451  00075C  D004               	goto	l5839
  3452                           
  3453                           ; BSR set to: 1
  3454                           ;doprnt.c: 1148: width--;
  3455  00075E  0101               	movlb	1	; () banked
  3456  000760  071A               	decf	sprintf@width& (0+255),f,b
  3457  000762  A0D8               	btfss	status,0,c
  3458  000764  071B               	decf	(sprintf@width+1)& (0+255),f,b
  3459  000766                     l5839:
  3460                           
  3461                           ; BSR set to: 1
  3462                           ;doprnt.c: 1149: if(flag & 0x03)
  3463  000766  0E03               	movlw	3
  3464  000768  0101               	movlb	1	; () banked
  3465  00076A  1514               	andwf	sprintf@flag& (0+255),w,b
  3466  00076C  0100               	movlb	0	; () banked
  3467  00076E  6FDE               	movwf	??_sprintf& (0+255),b
  3468  000770  0E00               	movlw	0
  3469  000772  0101               	movlb	1	; () banked
  3470  000774  1515               	andwf	(sprintf@flag+1)& (0+255),w,b
  3471  000776  0100               	movlb	0	; () banked
  3472  000778  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  3473  00077A  0100               	movlb	0	; () banked
  3474  00077C  51DE               	movf	??_sprintf& (0+255),w,b
  3475  00077E  0100               	movlb	0	; () banked
  3476  000780  11DF               	iorwf	(??_sprintf+1)& (0+255),w,b
  3477  000782  B4D8               	btfsc	status,2,c
  3478  000784  D004               	goto	l5843
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;doprnt.c: 1150: width--;
  3482  000786  0101               	movlb	1	; () banked
  3483  000788  071A               	decf	sprintf@width& (0+255),f,b
  3484  00078A  A0D8               	btfss	status,0,c
  3485  00078C  071B               	decf	(sprintf@width+1)& (0+255),f,b
  3486  00078E                     l5843:
  3487                           
  3488                           ;doprnt.c: 1153: if(flag & 0x04) {
  3489  00078E  0101               	movlb	1	; () banked
  3490  000790  A514               	btfss	sprintf@flag& (0+255),2,b
  3491  000792  D03F               	goto	l5865
  3492                           
  3493                           ; BSR set to: 1
  3494                           ;doprnt.c: 1157: if(flag & 0x03)
  3495  000794  0E03               	movlw	3
  3496  000796  0101               	movlb	1	; () banked
  3497  000798  1514               	andwf	sprintf@flag& (0+255),w,b
  3498  00079A  0100               	movlb	0	; () banked
  3499  00079C  6FDE               	movwf	??_sprintf& (0+255),b
  3500  00079E  0E00               	movlw	0
  3501  0007A0  0101               	movlb	1	; () banked
  3502  0007A2  1515               	andwf	(sprintf@flag+1)& (0+255),w,b
  3503  0007A4  0100               	movlb	0	; () banked
  3504  0007A6  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  3505  0007A8  0100               	movlb	0	; () banked
  3506  0007AA  51DE               	movf	??_sprintf& (0+255),w,b
  3507  0007AC  0100               	movlb	0	; () banked
  3508  0007AE  11DF               	iorwf	(??_sprintf+1)& (0+255),w,b
  3509  0007B0  B4D8               	btfsc	status,2,c
  3510  0007B2  D017               	goto	l5857
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  3514  0007B4  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  3515  0007B8  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  3516  0007BC  0E2D               	movlw	45
  3517  0007BE  6EDF               	movwf	indf2,c
  3518                           
  3519                           ; BSR set to: 0
  3520  0007C0  0100               	movlb	0	; () banked
  3521  0007C2  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  3522  0007C4  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;doprnt.c: 1168: while(width > 0) {
  3526  0007C6  D00D               	goto	l5857
  3527  0007C8                     l5851:
  3528                           
  3529                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  3530  0007C8  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  3531  0007CC  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  3532  0007D0  0E30               	movlw	48
  3533  0007D2  6EDF               	movwf	indf2,c
  3534  0007D4  0100               	movlb	0	; () banked
  3535  0007D6  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  3536  0007D8  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;doprnt.c: 1170: width--;
  3540  0007DA  0101               	movlb	1	; () banked
  3541  0007DC  071A               	decf	sprintf@width& (0+255),f,b
  3542  0007DE  A0D8               	btfss	status,0,c
  3543  0007E0  071B               	decf	(sprintf@width+1)& (0+255),f,b
  3544  0007E2                     l5857:
  3545  0007E2  0101               	movlb	1	; () banked
  3546  0007E4  BF1B               	btfsc	(sprintf@width+1)& (0+255),7,b
  3547  0007E6  D087               	goto	l5881
  3548  0007E8  0101               	movlb	1	; () banked
  3549  0007EA  511B               	movf	(sprintf@width+1)& (0+255),w,b
  3550  0007EC  E1ED               	bnz	l5851
  3551  0007EE  0101               	movlb	1	; () banked
  3552  0007F0  051A               	decf	sprintf@width& (0+255),w,b
  3553  0007F2  A0D8               	btfss	status,0,c
  3554  0007F4  D080               	goto	l5881
  3555  0007F6  D7E8               	goto	l5851
  3556  0007F8                     l5859:
  3557                           
  3558                           ; BSR set to: 1
  3559                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  3560  0007F8  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  3561  0007FC  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  3562  000800  0E20               	movlw	32
  3563  000802  6EDF               	movwf	indf2,c
  3564                           
  3565                           ; BSR set to: 1
  3566  000804  0100               	movlb	0	; () banked
  3567  000806  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  3568  000808  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;doprnt.c: 1182: width--;
  3572  00080A  0101               	movlb	1	; () banked
  3573  00080C  071A               	decf	sprintf@width& (0+255),f,b
  3574  00080E  A0D8               	btfss	status,0,c
  3575  000810  071B               	decf	(sprintf@width+1)& (0+255),f,b
  3576  000812                     l5865:
  3577                           
  3578                           ; BSR set to: 1
  3579  000812  0101               	movlb	1	; () banked
  3580  000814  BF1B               	btfsc	(sprintf@width+1)& (0+255),7,b
  3581  000816  D007               	goto	l5867
  3582  000818  0101               	movlb	1	; () banked
  3583  00081A  511B               	movf	(sprintf@width+1)& (0+255),w,b
  3584  00081C  E1ED               	bnz	l5859
  3585  00081E  0101               	movlb	1	; () banked
  3586  000820  051A               	decf	sprintf@width& (0+255),w,b
  3587  000822  B0D8               	btfsc	status,0,c
  3588  000824  D7E9               	goto	l5859
  3589  000826                     l5867:
  3590                           
  3591                           ; BSR set to: 1
  3592                           ;doprnt.c: 1183: }
  3593                           ;doprnt.c: 1188: if(flag & 0x03)
  3594  000826  0E03               	movlw	3
  3595  000828  0101               	movlb	1	; () banked
  3596  00082A  1514               	andwf	sprintf@flag& (0+255),w,b
  3597  00082C  0100               	movlb	0	; () banked
  3598  00082E  6FDE               	movwf	??_sprintf& (0+255),b
  3599  000830  0E00               	movlw	0
  3600  000832  0101               	movlb	1	; () banked
  3601  000834  1515               	andwf	(sprintf@flag+1)& (0+255),w,b
  3602  000836  0100               	movlb	0	; () banked
  3603  000838  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  3604  00083A  0100               	movlb	0	; () banked
  3605  00083C  51DE               	movf	??_sprintf& (0+255),w,b
  3606  00083E  0100               	movlb	0	; () banked
  3607  000840  11DF               	iorwf	(??_sprintf+1)& (0+255),w,b
  3608  000842  B4D8               	btfsc	status,2,c
  3609  000844  D058               	goto	l5881
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3613  000846  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  3614  00084A  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  3615  00084E  0E2D               	movlw	45
  3616  000850  D050               	goto	L5
  3617  000852                     l5871:
  3618                           
  3619                           ; BSR set to: 0
  3620  000852  0100               	movlb	0	; () banked
  3621  000854  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  3622  000856  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;doprnt.c: 1195: }
  3626                           ;doprnt.c: 1196: while(c--) {
  3627                           
  3628                           ; BSR set to: 0
  3629  000858  D04E               	goto	l5881
  3630  00085A                     l5873:
  3631                           
  3632                           ;doprnt.c: 1200: {
  3633                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3634  00085A  C10E  F080         	movff	sprintf@val,___lldiv@dividend
  3635  00085E  C10F  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  3636  000862  C110  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  3637  000866  C111  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  3638  00086A  0101               	movlb	1	; () banked
  3639  00086C  511E               	movf	sprintf@c& (0+255),w,b
  3640  00086E  0D04               	mullw	4
  3641  000870  0E5B               	movlw	low _dpowers
  3642  000872  24F3               	addwf	prodl,w,c
  3643  000874  6EF6               	movwf	tblptrl,c
  3644  000876  0EFF               	movlw	high _dpowers
  3645  000878  20F4               	addwfc	prodh,w,c
  3646  00087A  6EF7               	movwf	tblptrh,c
  3647  00087C                     	if	1	;There are 3 active tblptr bytes
  3648  00087C  6AF8               	clrf	tblptru,c
  3649  00087E  0E00               	movlw	low (__mediumconst shr (0+16))
  3650  000880  22F8               	addwfc	tblptru,f,c
  3651  000882                     	endif
  3652  000882  0009               	tblrd		*+
  3653  000884  CFF5 F084          	movff	tablat,___lldiv@divisor
  3654  000888  0009               	tblrd		*+
  3655  00088A  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  3656  00088E  0009               	tblrd		*+
  3657  000890  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  3658  000894  000A               	tblrd		*-
  3659  000896  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  3660  00089A  EC70  F021         	call	___lldiv	;wreg free
  3661  00089E  C080  F10A         	movff	?___lldiv,sprintf@tmpval
  3662  0008A2  C081  F10B         	movff	?___lldiv+1,sprintf@tmpval+1
  3663  0008A6  C082  F10C         	movff	?___lldiv+2,sprintf@tmpval+2
  3664  0008AA  C083  F10D         	movff	?___lldiv+3,sprintf@tmpval+3
  3665                           
  3666                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3667  0008AE  C10A  F08D         	movff	sprintf@tmpval,___llmod@dividend
  3668  0008B2  C10B  F08E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3669  0008B6  C10C  F08F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3670  0008BA  C10D  F090         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3671  0008BE  0E0A               	movlw	10
  3672  0008C0  0100               	movlb	0	; () banked
  3673  0008C2  6F91               	movwf	___llmod@divisor& (0+255),b
  3674  0008C4  0E00               	movlw	0
  3675  0008C6  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  3676  0008C8  0E00               	movlw	0
  3677  0008CA  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  3678  0008CC  0E00               	movlw	0
  3679  0008CE  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  3680  0008D0  ECD5  F022         	call	___llmod	;wreg free
  3681  0008D4  C08D  F10A         	movff	?___llmod,sprintf@tmpval
  3682  0008D8  C08E  F10B         	movff	?___llmod+1,sprintf@tmpval+1
  3683  0008DC  C08F  F10C         	movff	?___llmod+2,sprintf@tmpval+2
  3684  0008E0  C090  F10D         	movff	?___llmod+3,sprintf@tmpval+3
  3685                           
  3686                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3687  0008E4  0101               	movlb	1	; () banked
  3688  0008E6  510A               	movf	sprintf@tmpval& (0+255),w,b
  3689  0008E8  0F30               	addlw	48
  3690  0008EA  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  3691  0008EE  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  3692  0008F2                     L5:
  3693  0008F2  6EDF               	movwf	indf2,c
  3694  0008F4  D7AE               	goto	l5871
  3695  0008F6                     l5881:
  3696  0008F6  0101               	movlb	1	; () banked
  3697  0008F8  071E               	decf	sprintf@c& (0+255),f,b
  3698  0008FA  0101               	movlb	1	; () banked
  3699  0008FC  291E               	incf	sprintf@c& (0+255),w,b
  3700  0008FE  B4D8               	btfsc	status,2,c
  3701  000900  D00E               	goto	l5889
  3702  000902  D7AB               	goto	l5873
  3703  000904                     l5883:
  3704                           
  3705                           ; BSR set to: 1
  3706                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3707  000904  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  3708  000908  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  3709  00090C  0E30               	movlw	48
  3710  00090E  6EDF               	movwf	indf2,c
  3711                           
  3712                           ; BSR set to: 1
  3713  000910  0100               	movlb	0	; () banked
  3714  000912  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  3715  000914  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;doprnt.c: 1209: exp--;
  3719  000916  0101               	movlb	1	; () banked
  3720  000918  0712               	decf	sprintf@exp& (0+255),f,b
  3721  00091A  A0D8               	btfss	status,0,c
  3722  00091C  0713               	decf	(sprintf@exp+1)& (0+255),f,b
  3723  00091E                     l5889:
  3724                           
  3725                           ; BSR set to: 1
  3726  00091E  0101               	movlb	1	; () banked
  3727  000920  BF13               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3728  000922  D007               	goto	l5891
  3729  000924  0101               	movlb	1	; () banked
  3730  000926  5113               	movf	(sprintf@exp+1)& (0+255),w,b
  3731  000928  E1ED               	bnz	l5883
  3732  00092A  0101               	movlb	1	; () banked
  3733  00092C  0512               	decf	sprintf@exp& (0+255),w,b
  3734  00092E  B0D8               	btfsc	status,0,c
  3735  000930  D7E9               	goto	l5883
  3736  000932                     l5891:
  3737                           
  3738                           ; BSR set to: 1
  3739                           ;doprnt.c: 1210: }
  3740                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3741  000932  0101               	movlb	1	; () banked
  3742  000934  BF1D               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3743  000936  D00C               	goto	l469
  3744  000938  0101               	movlb	1	; () banked
  3745  00093A  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  3746  00093C  E105               	bnz	u7430
  3747  00093E  0E09               	movlw	9
  3748  000940  0101               	movlb	1	; () banked
  3749  000942  5D1C               	subwf	sprintf@prec& (0+255),w,b
  3750  000944  A0D8               	btfss	status,0,c
  3751  000946  D004               	goto	l469
  3752  000948                     u7430:
  3753                           
  3754                           ; BSR set to: 1
  3755                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3756  000948  0E08               	movlw	8
  3757  00094A  0101               	movlb	1	; () banked
  3758  00094C  6F1E               	movwf	sprintf@c& (0+255),b
  3759  00094E  D002               	goto	l5895
  3760  000950                     l469:
  3761                           
  3762                           ; BSR set to: 1
  3763                           ;doprnt.c: 1213: else
  3764                           ;doprnt.c: 1214: c = prec;
  3765  000950  C11C  F11E         	movff	sprintf@prec,sprintf@c
  3766  000954                     l5895:
  3767                           
  3768                           ; BSR set to: 1
  3769                           ;doprnt.c: 1215: prec -= c;
  3770  000954  0101               	movlb	1	; () banked
  3771  000956  511E               	movf	sprintf@c& (0+255),w,b
  3772  000958  0101               	movlb	1	; () banked
  3773  00095A  5F1C               	subwf	sprintf@prec& (0+255),f,b
  3774  00095C  0E00               	movlw	0
  3775  00095E  0101               	movlb	1	; () banked
  3776  000960  BF1E               	btfsc	sprintf@c& (0+255),7,b
  3777  000962  0EFF               	movlw	255
  3778  000964  0101               	movlb	1	; () banked
  3779  000966  5B1D               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;doprnt.c: 1219: if(c)
  3783  000968  0101               	movlb	1	; () banked
  3784  00096A  511E               	movf	sprintf@c& (0+255),w,b
  3785  00096C  0101               	movlb	1	; () banked
  3786  00096E  B4D8               	btfsc	status,2,c
  3787  000970  D009               	goto	l5903
  3788                           
  3789                           ; BSR set to: 1
  3790                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3791  000972  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  3792  000976  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  3793  00097A  0E2E               	movlw	46
  3794  00097C  6EDF               	movwf	indf2,c
  3795                           
  3796                           ; BSR set to: 1
  3797  00097E  0100               	movlb	0	; () banked
  3798  000980  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  3799  000982  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  3800  000984                     l5903:
  3801                           
  3802                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3803  000984  0101               	movlb	1	; () banked
  3804  000986  511E               	movf	sprintf@c& (0+255),w,b
  3805  000988  EC3D  F007         	call	_scale
  3806  00098C  C0A7  F100         	movff	?_scale,_sprintf$1800
  3807  000990  C0A8  F101         	movff	?_scale+1,_sprintf$1800+1
  3808  000994  C0A9  F102         	movff	?_scale+2,_sprintf$1800+2
  3809  000998  C0AA  F103         	movff	?_scale+3,_sprintf$1800+3
  3810                           
  3811                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3812  00099C  C116  F092         	movff	sprintf@fval,___flmul@a
  3813  0009A0  C117  F093         	movff	sprintf@fval+1,___flmul@a+1
  3814  0009A4  C118  F094         	movff	sprintf@fval+2,___flmul@a+2
  3815  0009A8  C119  F095         	movff	sprintf@fval+3,___flmul@a+3
  3816  0009AC  C100  F08E         	movff	_sprintf$1800,___flmul@b
  3817  0009B0  C101  F08F         	movff	_sprintf$1800+1,___flmul@b+1
  3818  0009B4  C102  F090         	movff	_sprintf$1800+2,___flmul@b+2
  3819  0009B8  C103  F091         	movff	_sprintf$1800+3,___flmul@b+3
  3820  0009BC  ECA2  F00E         	call	___flmul	;wreg free
  3821  0009C0  C08E  F0C8         	movff	?___flmul,___fltol@f1
  3822  0009C4  C08F  F0C9         	movff	?___flmul+1,___fltol@f1+1
  3823  0009C8  C090  F0CA         	movff	?___flmul+2,___fltol@f1+2
  3824  0009CC  C091  F0CB         	movff	?___flmul+3,___fltol@f1+3
  3825  0009D0  EC5A  F01F         	call	___fltol	;wreg free
  3826  0009D4  C0C8  F10E         	movff	?___fltol,sprintf@val
  3827  0009D8  C0C9  F10F         	movff	?___fltol+1,sprintf@val+1
  3828  0009DC  C0CA  F110         	movff	?___fltol+2,sprintf@val+2
  3829  0009E0  C0CB  F111         	movff	?___fltol+3,sprintf@val+3
  3830                           
  3831                           ;doprnt.c: 1228: while(c--) {
  3832  0009E4  D07A               	goto	l5917
  3833  0009E6                     l5907:
  3834                           
  3835                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3836  0009E6  C10E  F080         	movff	sprintf@val,___lldiv@dividend
  3837  0009EA  C10F  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  3838  0009EE  C110  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  3839  0009F2  C111  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  3840  0009F6  0101               	movlb	1	; () banked
  3841  0009F8  511E               	movf	sprintf@c& (0+255),w,b
  3842  0009FA  0D04               	mullw	4
  3843  0009FC  0E5B               	movlw	low _dpowers
  3844  0009FE  24F3               	addwf	prodl,w,c
  3845  000A00  6EF6               	movwf	tblptrl,c
  3846  000A02  0EFF               	movlw	high _dpowers
  3847  000A04  20F4               	addwfc	prodh,w,c
  3848  000A06  6EF7               	movwf	tblptrh,c
  3849  000A08                     	if	1	;There are 3 active tblptr bytes
  3850  000A08  6AF8               	clrf	tblptru,c
  3851  000A0A  0E00               	movlw	low (__mediumconst shr (0+16))
  3852  000A0C  22F8               	addwfc	tblptru,f,c
  3853  000A0E                     	endif
  3854  000A0E  0009               	tblrd		*+
  3855  000A10  CFF5 F084          	movff	tablat,___lldiv@divisor
  3856  000A14  0009               	tblrd		*+
  3857  000A16  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  3858  000A1A  0009               	tblrd		*+
  3859  000A1C  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  3860  000A20  000A               	tblrd		*-
  3861  000A22  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  3862  000A26  EC70  F021         	call	___lldiv	;wreg free
  3863  000A2A  C080  F10A         	movff	?___lldiv,sprintf@tmpval
  3864  000A2E  C081  F10B         	movff	?___lldiv+1,sprintf@tmpval+1
  3865  000A32  C082  F10C         	movff	?___lldiv+2,sprintf@tmpval+2
  3866  000A36  C083  F10D         	movff	?___lldiv+3,sprintf@tmpval+3
  3867                           
  3868                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3869  000A3A  C10A  F08D         	movff	sprintf@tmpval,___llmod@dividend
  3870  000A3E  C10B  F08E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3871  000A42  C10C  F08F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3872  000A46  C10D  F090         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3873  000A4A  0E0A               	movlw	10
  3874  000A4C  0100               	movlb	0	; () banked
  3875  000A4E  6F91               	movwf	___llmod@divisor& (0+255),b
  3876  000A50  0E00               	movlw	0
  3877  000A52  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  3878  000A54  0E00               	movlw	0
  3879  000A56  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  3880  000A58  0E00               	movlw	0
  3881  000A5A  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  3882  000A5C  ECD5  F022         	call	___llmod	;wreg free
  3883  000A60  C08D  F10A         	movff	?___llmod,sprintf@tmpval
  3884  000A64  C08E  F10B         	movff	?___llmod+1,sprintf@tmpval+1
  3885  000A68  C08F  F10C         	movff	?___llmod+2,sprintf@tmpval+2
  3886  000A6C  C090  F10D         	movff	?___llmod+3,sprintf@tmpval+3
  3887                           
  3888                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3889  000A70  0101               	movlb	1	; () banked
  3890  000A72  510A               	movf	sprintf@tmpval& (0+255),w,b
  3891  000A74  0F30               	addlw	48
  3892  000A76  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  3893  000A7A  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  3894  000A7E  6EDF               	movwf	indf2,c
  3895                           
  3896                           ; BSR set to: 1
  3897  000A80  0100               	movlb	0	; () banked
  3898  000A82  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  3899  000A84  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;doprnt.c: 1232: val %= dpowers[c];
  3903  000A86  C10E  F08D         	movff	sprintf@val,___llmod@dividend
  3904  000A8A  C10F  F08E         	movff	sprintf@val+1,___llmod@dividend+1
  3905  000A8E  C110  F08F         	movff	sprintf@val+2,___llmod@dividend+2
  3906  000A92  C111  F090         	movff	sprintf@val+3,___llmod@dividend+3
  3907  000A96  0101               	movlb	1	; () banked
  3908  000A98  511E               	movf	sprintf@c& (0+255),w,b
  3909  000A9A  0D04               	mullw	4
  3910  000A9C  0E5B               	movlw	low _dpowers
  3911  000A9E  24F3               	addwf	prodl,w,c
  3912  000AA0  6EF6               	movwf	tblptrl,c
  3913  000AA2  0EFF               	movlw	high _dpowers
  3914  000AA4  20F4               	addwfc	prodh,w,c
  3915  000AA6  6EF7               	movwf	tblptrh,c
  3916  000AA8                     	if	1	;There are 3 active tblptr bytes
  3917  000AA8  6AF8               	clrf	tblptru,c
  3918  000AAA  0E00               	movlw	low (__mediumconst shr (0+16))
  3919  000AAC  22F8               	addwfc	tblptru,f,c
  3920  000AAE                     	endif
  3921  000AAE  0009               	tblrd		*+
  3922  000AB0  CFF5 F091          	movff	tablat,___llmod@divisor
  3923  000AB4  0009               	tblrd		*+
  3924  000AB6  CFF5 F092          	movff	tablat,___llmod@divisor+1
  3925  000ABA  0009               	tblrd		*+
  3926  000ABC  CFF5 F093          	movff	tablat,___llmod@divisor+2
  3927  000AC0  000A               	tblrd		*-
  3928  000AC2  CFF5 F094          	movff	tablat,___llmod@divisor+3
  3929  000AC6  ECD5  F022         	call	___llmod	;wreg free
  3930  000ACA  C08D  F10E         	movff	?___llmod,sprintf@val
  3931  000ACE  C08E  F10F         	movff	?___llmod+1,sprintf@val+1
  3932  000AD2  C08F  F110         	movff	?___llmod+2,sprintf@val+2
  3933  000AD6  C090  F111         	movff	?___llmod+3,sprintf@val+3
  3934  000ADA                     l5917:
  3935  000ADA  0101               	movlb	1	; () banked
  3936  000ADC  071E               	decf	sprintf@c& (0+255),f,b
  3937  000ADE  0101               	movlb	1	; () banked
  3938  000AE0  291E               	incf	sprintf@c& (0+255),w,b
  3939  000AE2  B4D8               	btfsc	status,2,c
  3940  000AE4  D00E               	goto	l5925
  3941  000AE6  D77F               	goto	l5907
  3942  000AE8                     l5919:
  3943                           
  3944                           ; BSR set to: 1
  3945                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3946  000AE8  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  3947  000AEC  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  3948  000AF0  0E30               	movlw	48
  3949  000AF2  6EDF               	movwf	indf2,c
  3950                           
  3951                           ; BSR set to: 1
  3952  000AF4  0100               	movlb	0	; () banked
  3953  000AF6  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  3954  000AF8  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;doprnt.c: 1237: prec--;
  3958  000AFA  0101               	movlb	1	; () banked
  3959  000AFC  071C               	decf	sprintf@prec& (0+255),f,b
  3960  000AFE  A0D8               	btfss	status,0,c
  3961  000B00  071D               	decf	(sprintf@prec+1)& (0+255),f,b
  3962  000B02                     l5925:
  3963                           
  3964                           ; BSR set to: 1
  3965  000B02  0101               	movlb	1	; () banked
  3966  000B04  511C               	movf	sprintf@prec& (0+255),w,b
  3967  000B06  0101               	movlb	1	; () banked
  3968  000B08  111D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3969  000B0A  B4D8               	btfsc	status,2,c
  3970  000B0C  D19F               	goto	l6023
  3971  000B0E  D7EC               	goto	l5919
  3972  000B10                     l5927:
  3973                           
  3974                           ; BSR set to: 1
  3975                           ;doprnt.c: 1246: }
  3976                           ;doprnt.c: 1253: {
  3977                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3978  000B10  C106  FFD9         	movff	sprintf@ap,fsr2l
  3979  000B14  C107  FFDA         	movff	sprintf@ap+1,fsr2h
  3980  000B18  CFDE F10E          	movff	postinc2,sprintf@val
  3981  000B1C  CFDD F10F          	movff	postdec2,sprintf@val+1
  3982  000B20  0101               	movlb	1	; () banked
  3983  000B22  0E00               	movlw	0
  3984  000B24  BF0F               	btfsc	(sprintf@val+1)& (0+255),7,b
  3985  000B26  0EFF               	movlw	-1
  3986  000B28  6F10               	movwf	(sprintf@val+2)& (0+255),b
  3987  000B2A  6F11               	movwf	(sprintf@val+3)& (0+255),b
  3988                           
  3989                           ; BSR set to: 1
  3990  000B2C  0E02               	movlw	2
  3991  000B2E  0101               	movlb	1	; () banked
  3992  000B30  2706               	addwf	sprintf@ap& (0+255),f,b
  3993  000B32  0E00               	movlw	0
  3994  000B34  2307               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3995                           
  3996                           ; BSR set to: 1
  3997                           ;doprnt.c: 1261: if((long)val < 0) {
  3998  000B36  0101               	movlb	1	; () banked
  3999  000B38  AF11               	btfss	(sprintf@val+3)& (0+255),7,b
  4000  000B3A  D00C               	goto	l5937
  4001                           
  4002                           ; BSR set to: 1
  4003                           ;doprnt.c: 1262: flag |= 0x03;
  4004  000B3C  0E03               	movlw	3
  4005  000B3E  0101               	movlb	1	; () banked
  4006  000B40  1314               	iorwf	sprintf@flag& (0+255),f,b
  4007                           
  4008                           ; BSR set to: 1
  4009                           ;doprnt.c: 1263: val = -val;
  4010  000B42  0101               	movlb	1	; () banked
  4011  000B44  1F11               	comf	(sprintf@val+3)& (0+255),f,b
  4012  000B46  1F10               	comf	(sprintf@val+2)& (0+255),f,b
  4013  000B48  1F0F               	comf	(sprintf@val+1)& (0+255),f,b
  4014  000B4A  6D0E               	negf	sprintf@val& (0+255),b
  4015  000B4C  0E00               	movlw	0
  4016  000B4E  230F               	addwfc	(sprintf@val+1)& (0+255),f,b
  4017  000B50  2310               	addwfc	(sprintf@val+2)& (0+255),f,b
  4018  000B52  2311               	addwfc	(sprintf@val+3)& (0+255),f,b
  4019  000B54                     l5937:
  4020                           
  4021                           ; BSR set to: 1
  4022                           ;doprnt.c: 1264: }
  4023                           ;doprnt.c: 1266: }
  4024                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4025  000B54  0101               	movlb	1	; () banked
  4026  000B56  511C               	movf	sprintf@prec& (0+255),w,b
  4027  000B58  0101               	movlb	1	; () banked
  4028  000B5A  111D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4029  000B5C  A4D8               	btfss	status,2,c
  4030  000B5E  D00D               	goto	l5943
  4031                           
  4032                           ; BSR set to: 1
  4033  000B60  0101               	movlb	1	; () banked
  4034  000B62  510E               	movf	sprintf@val& (0+255),w,b
  4035  000B64  0101               	movlb	1	; () banked
  4036  000B66  110F               	iorwf	(sprintf@val+1)& (0+255),w,b
  4037  000B68  0101               	movlb	1	; () banked
  4038  000B6A  1110               	iorwf	(sprintf@val+2)& (0+255),w,b
  4039  000B6C  0101               	movlb	1	; () banked
  4040  000B6E  1111               	iorwf	(sprintf@val+3)& (0+255),w,b
  4041  000B70  A4D8               	btfss	status,2,c
  4042  000B72  D003               	goto	l5943
  4043                           
  4044                           ; BSR set to: 1
  4045                           ;doprnt.c: 1291: prec++;
  4046  000B74  0101               	movlb	1	; () banked
  4047  000B76  4B1C               	infsnz	sprintf@prec& (0+255),f,b
  4048  000B78  2B1D               	incf	(sprintf@prec+1)& (0+255),f,b
  4049  000B7A                     l5943:
  4050                           
  4051                           ; BSR set to: 1
  4052                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4053  000B7A  0E01               	movlw	1
  4054  000B7C  0101               	movlb	1	; () banked
  4055  000B7E  6F1E               	movwf	sprintf@c& (0+255),b
  4056  000B80                     l5945:
  4057                           
  4058                           ; BSR set to: 1
  4059  000B80  0E0A               	movlw	10
  4060  000B82  0101               	movlb	1	; () banked
  4061  000B84  191E               	xorwf	sprintf@c& (0+255),w,b
  4062  000B86  B4D8               	btfsc	status,2,c
  4063  000B88  D021               	goto	l5957
  4064                           
  4065                           ; BSR set to: 1
  4066                           ;doprnt.c: 1306: if(val < dpowers[c])
  4067                           
  4068                           ; BSR set to: 1
  4069                           
  4070                           ; BSR set to: 1
  4071  000B8A  0101               	movlb	1	; () banked
  4072  000B8C  511E               	movf	sprintf@c& (0+255),w,b
  4073  000B8E  0D04               	mullw	4
  4074  000B90  0E5B               	movlw	low _dpowers
  4075  000B92  24F3               	addwf	prodl,w,c
  4076  000B94  6EF6               	movwf	tblptrl,c
  4077  000B96  0EFF               	movlw	high _dpowers
  4078  000B98  20F4               	addwfc	prodh,w,c
  4079  000B9A  6EF7               	movwf	tblptrh,c
  4080  000B9C                     	if	1	;There are 3 active tblptr bytes
  4081  000B9C  6AF8               	clrf	tblptru,c
  4082  000B9E  0E00               	movlw	low (__mediumconst shr (0+16))
  4083  000BA0  22F8               	addwfc	tblptru,f,c
  4084  000BA2                     	endif
  4085  000BA2  0009               	tblrd		*+
  4086  000BA4  50F5               	movf	tablat,w,c
  4087  000BA6  0101               	movlb	1	; () banked
  4088  000BA8  5D0E               	subwf	sprintf@val& (0+255),w,b
  4089  000BAA  0009               	tblrd		*+
  4090  000BAC  50F5               	movf	tablat,w,c
  4091  000BAE  0101               	movlb	1	; () banked
  4092  000BB0  590F               	subwfb	(sprintf@val+1)& (0+255),w,b
  4093  000BB2  0009               	tblrd		*+
  4094  000BB4  50F5               	movf	tablat,w,c
  4095  000BB6  0101               	movlb	1	; () banked
  4096  000BB8  5910               	subwfb	(sprintf@val+2)& (0+255),w,b
  4097  000BBA  0009               	tblrd		*+
  4098  000BBC  50F5               	movf	tablat,w,c
  4099  000BBE  0101               	movlb	1	; () banked
  4100  000BC0  5911               	subwfb	(sprintf@val+3)& (0+255),w,b
  4101  000BC2  A0D8               	btfss	status,0,c
  4102  000BC4  D003               	goto	l5957
  4103                           
  4104                           ; BSR set to: 1
  4105                           
  4106                           ; BSR set to: 1
  4107                           
  4108                           ; BSR set to: 1
  4109                           ;doprnt.c: 1307: break;
  4110  000BC6  0101               	movlb	1	; () banked
  4111  000BC8  2B1E               	incf	sprintf@c& (0+255),f,b
  4112  000BCA  D7DA               	goto	l5945
  4113  000BCC                     l5957:
  4114                           
  4115                           ; BSR set to: 1
  4116                           ;doprnt.c: 1339: if(c < prec)
  4117  000BCC  0E80               	movlw	128
  4118  000BCE  0101               	movlb	1	; () banked
  4119  000BD0  BF1E               	btfsc	sprintf@c& (0+255),7,b
  4120  000BD2  0E7F               	movlw	127
  4121  000BD4  0100               	movlb	0	; () banked
  4122  000BD6  6FDE               	movwf	??_sprintf& (0+255),b
  4123  000BD8  0101               	movlb	1	; () banked
  4124  000BDA  511C               	movf	sprintf@prec& (0+255),w,b
  4125  000BDC  0101               	movlb	1	; () banked
  4126  000BDE  5D1E               	subwf	sprintf@c& (0+255),w,b
  4127  000BE0  0101               	movlb	1	; () banked
  4128  000BE2  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  4129  000BE4  0A80               	xorlw	128
  4130  000BE6  0100               	movlb	0	; () banked
  4131  000BE8  59DE               	subwfb	??_sprintf& (0+255),w,b
  4132  000BEA  B0D8               	btfsc	status,0,c
  4133  000BEC  D003               	goto	l5961
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;doprnt.c: 1340: c = prec;
  4137  000BEE  C11C  F11E         	movff	sprintf@prec,sprintf@c
  4138  000BF2  D018               	goto	l5965
  4139  000BF4                     l5961:
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;doprnt.c: 1341: else if(prec < c)
  4143  000BF4  0101               	movlb	1	; () banked
  4144  000BF6  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  4145  000BF8  0A80               	xorlw	128
  4146  000BFA  0100               	movlb	0	; () banked
  4147  000BFC  6FDE               	movwf	??_sprintf& (0+255),b
  4148  000BFE  0101               	movlb	1	; () banked
  4149  000C00  511E               	movf	sprintf@c& (0+255),w,b
  4150  000C02  0101               	movlb	1	; () banked
  4151  000C04  5D1C               	subwf	sprintf@prec& (0+255),w,b
  4152  000C06  0E80               	movlw	128
  4153  000C08  0101               	movlb	1	; () banked
  4154  000C0A  BF1E               	btfsc	sprintf@c& (0+255),7,b
  4155  000C0C  0E7F               	movlw	127
  4156  000C0E  0100               	movlb	0	; () banked
  4157  000C10  59DE               	subwfb	??_sprintf& (0+255),w,b
  4158  000C12  B0D8               	btfsc	status,0,c
  4159  000C14  D007               	goto	l5965
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;doprnt.c: 1342: prec = c;
  4163  000C16  0101               	movlb	1	; () banked
  4164  000C18  511E               	movf	sprintf@c& (0+255),w,b
  4165  000C1A  0101               	movlb	1	; () banked
  4166  000C1C  6F1C               	movwf	sprintf@prec& (0+255),b
  4167  000C1E  6B1D               	clrf	(sprintf@prec+1)& (0+255),b
  4168  000C20  BF1C               	btfsc	sprintf@prec& (0+255),7,b
  4169  000C22  071D               	decf	(sprintf@prec+1)& (0+255),f,b
  4170  000C24                     l5965:
  4171                           
  4172                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4173  000C24  0101               	movlb	1	; () banked
  4174  000C26  511A               	movf	sprintf@width& (0+255),w,b
  4175  000C28  0101               	movlb	1	; () banked
  4176  000C2A  111B               	iorwf	(sprintf@width+1)& (0+255),w,b
  4177  000C2C  B4D8               	btfsc	status,2,c
  4178  000C2E  D014               	goto	l5971
  4179                           
  4180                           ; BSR set to: 1
  4181  000C30  0E03               	movlw	3
  4182  000C32  0101               	movlb	1	; () banked
  4183  000C34  1514               	andwf	sprintf@flag& (0+255),w,b
  4184  000C36  0100               	movlb	0	; () banked
  4185  000C38  6FDE               	movwf	??_sprintf& (0+255),b
  4186  000C3A  0E00               	movlw	0
  4187  000C3C  0101               	movlb	1	; () banked
  4188  000C3E  1515               	andwf	(sprintf@flag+1)& (0+255),w,b
  4189  000C40  0100               	movlb	0	; () banked
  4190  000C42  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  4191  000C44  0100               	movlb	0	; () banked
  4192  000C46  51DE               	movf	??_sprintf& (0+255),w,b
  4193  000C48  0100               	movlb	0	; () banked
  4194  000C4A  11DF               	iorwf	(??_sprintf+1)& (0+255),w,b
  4195  000C4C  B4D8               	btfsc	status,2,c
  4196  000C4E  D004               	goto	l5971
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;doprnt.c: 1346: width--;
  4200  000C50  0101               	movlb	1	; () banked
  4201  000C52  071A               	decf	sprintf@width& (0+255),f,b
  4202  000C54  A0D8               	btfss	status,0,c
  4203  000C56  071B               	decf	(sprintf@width+1)& (0+255),f,b
  4204  000C58                     l5971:
  4205                           
  4206                           ;doprnt.c: 1348: if(flag & 0x4000) {
  4207  000C58  0101               	movlb	1	; () banked
  4208  000C5A  AD15               	btfss	(sprintf@flag+1)& (0+255),6,b
  4209  000C5C  D01E               	goto	l5979
  4210                           
  4211                           ; BSR set to: 1
  4212                           ;doprnt.c: 1349: if(width > prec)
  4213  000C5E  0101               	movlb	1	; () banked
  4214  000C60  511A               	movf	sprintf@width& (0+255),w,b
  4215  000C62  0101               	movlb	1	; () banked
  4216  000C64  5D1C               	subwf	sprintf@prec& (0+255),w,b
  4217  000C66  0101               	movlb	1	; () banked
  4218  000C68  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  4219  000C6A  0A80               	xorlw	128
  4220  000C6C  0100               	movlb	0	; () banked
  4221  000C6E  6FDE               	movwf	??_sprintf& (0+255),b
  4222  000C70  0101               	movlb	1	; () banked
  4223  000C72  511B               	movf	(sprintf@width+1)& (0+255),w,b
  4224  000C74  0A80               	xorlw	128
  4225  000C76  0100               	movlb	0	; () banked
  4226  000C78  59DE               	subwfb	??_sprintf& (0+255),w,b
  4227  000C7A  B0D8               	btfsc	status,0,c
  4228  000C7C  D009               	goto	l5977
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;doprnt.c: 1350: width -= prec;
  4232  000C7E  0101               	movlb	1	; () banked
  4233  000C80  511C               	movf	sprintf@prec& (0+255),w,b
  4234  000C82  0101               	movlb	1	; () banked
  4235  000C84  5F1A               	subwf	sprintf@width& (0+255),f,b
  4236  000C86  0101               	movlb	1	; () banked
  4237  000C88  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  4238  000C8A  0101               	movlb	1	; () banked
  4239  000C8C  5B1B               	subwfb	(sprintf@width+1)& (0+255),f,b
  4240  000C8E  D005               	goto	l5979
  4241  000C90                     l5977:
  4242                           
  4243                           ;doprnt.c: 1351: else
  4244                           ;doprnt.c: 1352: width = 0;
  4245  000C90  0E00               	movlw	0
  4246  000C92  0101               	movlb	1	; () banked
  4247  000C94  6F1B               	movwf	(sprintf@width+1)& (0+255),b
  4248  000C96  0E00               	movlw	0
  4249  000C98  6F1A               	movwf	sprintf@width& (0+255),b
  4250  000C9A                     l5979:
  4251                           
  4252                           ; BSR set to: 1
  4253                           ;doprnt.c: 1353: }
  4254                           ;doprnt.c: 1381: if(width > c)
  4255  000C9A  0E80               	movlw	128
  4256  000C9C  0101               	movlb	1	; () banked
  4257  000C9E  BF1E               	btfsc	sprintf@c& (0+255),7,b
  4258  000CA0  0E7F               	movlw	127
  4259  000CA2  0100               	movlb	0	; () banked
  4260  000CA4  6FDE               	movwf	??_sprintf& (0+255),b
  4261  000CA6  0101               	movlb	1	; () banked
  4262  000CA8  511A               	movf	sprintf@width& (0+255),w,b
  4263  000CAA  0101               	movlb	1	; () banked
  4264  000CAC  5D1E               	subwf	sprintf@c& (0+255),w,b
  4265  000CAE  0101               	movlb	1	; () banked
  4266  000CB0  511B               	movf	(sprintf@width+1)& (0+255),w,b
  4267  000CB2  0A80               	xorlw	128
  4268  000CB4  0100               	movlb	0	; () banked
  4269  000CB6  59DE               	subwfb	??_sprintf& (0+255),w,b
  4270  000CB8  B0D8               	btfsc	status,0,c
  4271  000CBA  D00B               	goto	l5983
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;doprnt.c: 1382: width -= c;
  4275  000CBC  0101               	movlb	1	; () banked
  4276  000CBE  511E               	movf	sprintf@c& (0+255),w,b
  4277  000CC0  0101               	movlb	1	; () banked
  4278  000CC2  5F1A               	subwf	sprintf@width& (0+255),f,b
  4279  000CC4  0E00               	movlw	0
  4280  000CC6  0101               	movlb	1	; () banked
  4281  000CC8  BF1E               	btfsc	sprintf@c& (0+255),7,b
  4282  000CCA  0EFF               	movlw	255
  4283  000CCC  0101               	movlb	1	; () banked
  4284  000CCE  5B1B               	subwfb	(sprintf@width+1)& (0+255),f,b
  4285  000CD0  D005               	goto	l5985
  4286  000CD2                     l5983:
  4287                           
  4288                           ;doprnt.c: 1383: else
  4289                           ;doprnt.c: 1384: width = 0;
  4290  000CD2  0E00               	movlw	0
  4291  000CD4  0101               	movlb	1	; () banked
  4292  000CD6  6F1B               	movwf	(sprintf@width+1)& (0+255),b
  4293  000CD8  0E00               	movlw	0
  4294  000CDA  6F1A               	movwf	sprintf@width& (0+255),b
  4295  000CDC                     l5985:
  4296                           
  4297                           ; BSR set to: 1
  4298                           ;doprnt.c: 1387: if(flag & 0x04) {
  4299  000CDC  0101               	movlb	1	; () banked
  4300  000CDE  A514               	btfss	sprintf@flag& (0+255),2,b
  4301  000CE0  D02D               	goto	l6001
  4302                           
  4303                           ; BSR set to: 1
  4304                           ;doprnt.c: 1392: if(flag & 0x03)
  4305  000CE2  0E03               	movlw	3
  4306  000CE4  0101               	movlb	1	; () banked
  4307  000CE6  1514               	andwf	sprintf@flag& (0+255),w,b
  4308  000CE8  0100               	movlb	0	; () banked
  4309  000CEA  6FDE               	movwf	??_sprintf& (0+255),b
  4310  000CEC  0E00               	movlw	0
  4311  000CEE  0101               	movlb	1	; () banked
  4312  000CF0  1515               	andwf	(sprintf@flag+1)& (0+255),w,b
  4313  000CF2  0100               	movlb	0	; () banked
  4314  000CF4  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  4315  000CF6  0100               	movlb	0	; () banked
  4316  000CF8  51DE               	movf	??_sprintf& (0+255),w,b
  4317  000CFA  0100               	movlb	0	; () banked
  4318  000CFC  11DF               	iorwf	(??_sprintf+1)& (0+255),w,b
  4319  000CFE  B4D8               	btfsc	status,2,c
  4320  000D00  D009               	goto	l5993
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  4324  000D02  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  4325  000D06  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  4326  000D0A  0E2D               	movlw	45
  4327  000D0C  6EDF               	movwf	indf2,c
  4328                           
  4329                           ; BSR set to: 0
  4330  000D0E  0100               	movlb	0	; () banked
  4331  000D10  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  4332  000D12  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  4333  000D14                     l5993:
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;doprnt.c: 1415: if(width)
  4337  000D14  0101               	movlb	1	; () banked
  4338  000D16  511A               	movf	sprintf@width& (0+255),w,b
  4339  000D18  0101               	movlb	1	; () banked
  4340  000D1A  111B               	iorwf	(sprintf@width+1)& (0+255),w,b
  4341  000D1C  B4D8               	btfsc	status,2,c
  4342  000D1E  D08B               	goto	l6021
  4343                           
  4344                           ; BSR set to: 1
  4345                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4346                           
  4347                           ; BSR set to: 1
  4348                           
  4349                           ;doprnt.c: 1416: do
  4350  000D20  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  4351  000D24  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  4352  000D28  0E30               	movlw	48
  4353  000D2A  6EDF               	movwf	indf2,c
  4354                           
  4355                           ; BSR set to: 1
  4356  000D2C  0100               	movlb	0	; () banked
  4357  000D2E  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  4358  000D30  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;doprnt.c: 1418: while(--width);
  4362  000D32  0101               	movlb	1	; () banked
  4363  000D34  071A               	decf	sprintf@width& (0+255),f,b
  4364  000D36  A0D8               	btfss	status,0,c
  4365  000D38  071B               	decf	(sprintf@width+1)& (0+255),f,b
  4366  000D3A  D7EC               	goto	l5993
  4367  000D3C                     l6001:
  4368                           
  4369                           ; BSR set to: 1
  4370                           ;doprnt.c: 1422: {
  4371                           ;doprnt.c: 1424: if(width
  4372                           ;doprnt.c: 1428: )
  4373  000D3C  0101               	movlb	1	; () banked
  4374  000D3E  511A               	movf	sprintf@width& (0+255),w,b
  4375  000D40  0101               	movlb	1	; () banked
  4376  000D42  111B               	iorwf	(sprintf@width+1)& (0+255),w,b
  4377  000D44  B4D8               	btfsc	status,2,c
  4378  000D46  D013               	goto	l6009
  4379  000D48                     l6003:
  4380                           
  4381                           ; BSR set to: 1
  4382                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4383  000D48  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  4384  000D4C  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  4385  000D50  0E20               	movlw	32
  4386  000D52  6EDF               	movwf	indf2,c
  4387                           
  4388                           ; BSR set to: 1
  4389  000D54  0100               	movlb	0	; () banked
  4390  000D56  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  4391  000D58  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;doprnt.c: 1431: while(--width);
  4395  000D5A  0101               	movlb	1	; () banked
  4396  000D5C  071A               	decf	sprintf@width& (0+255),f,b
  4397  000D5E  A0D8               	btfss	status,0,c
  4398  000D60  071B               	decf	(sprintf@width+1)& (0+255),f,b
  4399  000D62  0101               	movlb	1	; () banked
  4400  000D64  511A               	movf	sprintf@width& (0+255),w,b
  4401  000D66  0101               	movlb	1	; () banked
  4402  000D68  111B               	iorwf	(sprintf@width+1)& (0+255),w,b
  4403  000D6A  A4D8               	btfss	status,2,c
  4404  000D6C  D7ED               	goto	l6003
  4405  000D6E                     l6009:
  4406                           
  4407                           ; BSR set to: 1
  4408                           ;doprnt.c: 1438: if(flag & 0x03)
  4409  000D6E  0E03               	movlw	3
  4410  000D70  0101               	movlb	1	; () banked
  4411  000D72  1514               	andwf	sprintf@flag& (0+255),w,b
  4412  000D74  0100               	movlb	0	; () banked
  4413  000D76  6FDE               	movwf	??_sprintf& (0+255),b
  4414  000D78  0E00               	movlw	0
  4415  000D7A  0101               	movlb	1	; () banked
  4416  000D7C  1515               	andwf	(sprintf@flag+1)& (0+255),w,b
  4417  000D7E  0100               	movlb	0	; () banked
  4418  000D80  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  4419  000D82  0100               	movlb	0	; () banked
  4420  000D84  51DE               	movf	??_sprintf& (0+255),w,b
  4421  000D86  0100               	movlb	0	; () banked
  4422  000D88  11DF               	iorwf	(??_sprintf+1)& (0+255),w,b
  4423  000D8A  B4D8               	btfsc	status,2,c
  4424  000D8C  D054               	goto	l6021
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4428  000D8E  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  4429  000D92  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  4430  000D96  0E2D               	movlw	45
  4431  000D98  6EDF               	movwf	indf2,c
  4432  000D9A  D04A               	goto	l6019
  4433  000D9C                     l6015:
  4434                           
  4435                           ;doprnt.c: 1478: {
  4436                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4437  000D9C  C11C  F0DE         	movff	sprintf@prec,??_sprintf
  4438  000DA0  C11D  F0DF         	movff	sprintf@prec+1,??_sprintf+1
  4439  000DA4  0100               	movlb	0	; () banked
  4440  000DA6  90D8               	bcf	status,0,c
  4441  000DA8  37DE               	rlcf	??_sprintf& (0+255),f,b
  4442  000DAA  37DF               	rlcf	(??_sprintf+1)& (0+255),f,b
  4443  000DAC  0100               	movlb	0	; () banked
  4444  000DAE  90D8               	bcf	status,0,c
  4445  000DB0  37DE               	rlcf	??_sprintf& (0+255),f,b
  4446  000DB2  37DF               	rlcf	(??_sprintf+1)& (0+255),f,b
  4447  000DB4  0E5B               	movlw	low _dpowers
  4448  000DB6  0100               	movlb	0	; () banked
  4449  000DB8  25DE               	addwf	??_sprintf& (0+255),w,b
  4450  000DBA  6EF6               	movwf	tblptrl,c
  4451  000DBC  0EFF               	movlw	high _dpowers
  4452  000DBE  21DF               	addwfc	(??_sprintf+1)& (0+255),w,b
  4453  000DC0  6EF7               	movwf	tblptrh,c
  4454  000DC2                     	if	1	;There are 3 active tblptr bytes
  4455  000DC2  6AF8               	clrf	tblptru,c
  4456  000DC4  0E00               	movlw	low (__mediumconst shr (0+16))
  4457  000DC6  22F8               	addwfc	tblptru,f,c
  4458  000DC8                     	endif
  4459  000DC8  0009               	tblrd		*+
  4460  000DCA  CFF5 F084          	movff	tablat,___lldiv@divisor
  4461  000DCE  0009               	tblrd		*+
  4462  000DD0  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  4463  000DD4  0009               	tblrd		*+
  4464  000DD6  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  4465  000DDA  000A               	tblrd		*-
  4466  000DDC  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  4467  000DE0  C10E  F080         	movff	sprintf@val,___lldiv@dividend
  4468  000DE4  C10F  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  4469  000DE8  C110  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  4470  000DEC  C111  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  4471  000DF0  EC70  F021         	call	___lldiv	;wreg free
  4472  000DF4  C080  F08D         	movff	?___lldiv,___llmod@dividend
  4473  000DF8  C081  F08E         	movff	?___lldiv+1,___llmod@dividend+1
  4474  000DFC  C082  F08F         	movff	?___lldiv+2,___llmod@dividend+2
  4475  000E00  C083  F090         	movff	?___lldiv+3,___llmod@dividend+3
  4476  000E04  0E0A               	movlw	10
  4477  000E06  0100               	movlb	0	; () banked
  4478  000E08  6F91               	movwf	___llmod@divisor& (0+255),b
  4479  000E0A  0E00               	movlw	0
  4480  000E0C  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  4481  000E0E  0E00               	movlw	0
  4482  000E10  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  4483  000E12  0E00               	movlw	0
  4484  000E14  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  4485  000E16  ECD5  F022         	call	___llmod	;wreg free
  4486  000E1A  0100               	movlb	0	; () banked
  4487  000E1C  518D               	movf	?___llmod& (0+255),w,b
  4488  000E1E  0F30               	addlw	48
  4489  000E20  0101               	movlb	1	; () banked
  4490  000E22  6F1E               	movwf	sprintf@c& (0+255),b
  4491                           
  4492                           ; BSR set to: 1
  4493                           ;doprnt.c: 1523: }
  4494                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4495  000E24  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  4496  000E28  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  4497  000E2C  C11E  FFDF         	movff	sprintf@c,indf2
  4498  000E30                     l6019:
  4499                           
  4500                           ; BSR set to: 1
  4501  000E30  0100               	movlb	0	; () banked
  4502  000E32  4BD4               	infsnz	sprintf@sp& (0+255),f,b
  4503  000E34  2BD5               	incf	(sprintf@sp+1)& (0+255),f,b
  4504  000E36                     l6021:
  4505  000E36  0101               	movlb	1	; () banked
  4506  000E38  071C               	decf	sprintf@prec& (0+255),f,b
  4507  000E3A  A0D8               	btfss	status,0,c
  4508  000E3C  071D               	decf	(sprintf@prec+1)& (0+255),f,b
  4509  000E3E  0101               	movlb	1	; () banked
  4510  000E40  291C               	incf	sprintf@prec& (0+255),w,b
  4511  000E42  E1AC               	bnz	l6015
  4512  000E44  0101               	movlb	1	; () banked
  4513  000E46  291D               	incf	(sprintf@prec+1)& (0+255),w,b
  4514  000E48  A4D8               	btfss	status,2,c
  4515  000E4A  D7A8               	goto	l6015
  4516  000E4C                     l6023:
  4517  000E4C  C0D6  FFF6         	movff	sprintf@f,tblptrl
  4518  000E50  C0D7  FFF7         	movff	sprintf@f+1,tblptrh
  4519  000E54  0100               	movlb	0	; () banked
  4520  000E56  4BD6               	infsnz	sprintf@f& (0+255),f,b
  4521  000E58  2BD7               	incf	(sprintf@f+1)& (0+255),f,b
  4522  000E5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4523  000E5A  6AF8               	clrf	tblptru,c
  4524  000E5C                     	endif
  4525  000E5C                     	if	0	;tblptru may be non-zero
  4526  000E5C                     	endif
  4527  000E5C  0008               	tblrd		*
  4528  000E5E  CFF5 F11E          	movff	tablat,sprintf@c
  4529  000E62  0101               	movlb	1	; () banked
  4530  000E64  511E               	movf	sprintf@c& (0+255),w,b
  4531  000E66  A4D8               	btfss	status,2,c
  4532  000E68  EF15  F000         	goto	l5659
  4533  000E6C                     l6025:
  4534                           
  4535                           ; BSR set to: 1
  4536                           ;doprnt.c: 1538: *sp = 0;
  4537  000E6C  C0D4  FFD9         	movff	sprintf@sp,fsr2l
  4538  000E70  C0D5  FFDA         	movff	sprintf@sp+1,fsr2h
  4539  000E74  0E00               	movlw	0
  4540  000E76  6EDF               	movwf	indf2,c
  4541  000E78  0012               	return	
  4542  000E7A                     __end_of_sprintf:
  4543                           	opt stack 0
  4544                           tblptru	equ	0xFF8
  4545                           tblptrh	equ	0xFF7
  4546                           tblptrl	equ	0xFF6
  4547                           tablat	equ	0xFF5
  4548                           prodh	equ	0xFF4
  4549                           prodl	equ	0xFF3
  4550                           postinc0	equ	0xFEE
  4551                           wreg	equ	0xFE8
  4552                           indf1	equ	0xFE7
  4553                           postdec1	equ	0xFE5
  4554                           fsr1h	equ	0xFE2
  4555                           fsr1l	equ	0xFE1
  4556                           indf2	equ	0xFDF
  4557                           postinc2	equ	0xFDE
  4558                           postdec2	equ	0xFDD
  4559                           fsr2h	equ	0xFDA
  4560                           fsr2l	equ	0xFD9
  4561                           status	equ	0xFD8
  4562                           
  4563 ;; *************** function _scale *****************
  4564 ;; Defined at:
  4565 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  scl             1    wreg     char 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  scl             1   47[BANK0 ] char 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  4   39[BANK0 ] char 
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4579 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4580 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;Total ram usage:        9 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:    5
  4586 ;; This function calls:
  4587 ;;		___awdiv
  4588 ;;		___awmod
  4589 ;;		___flmul
  4590 ;; This function is called by:
  4591 ;;		_sprintf
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text3
  4596  000E7A                     __ptext3:
  4597                           	opt stack 0
  4598  000E7A                     _scale:
  4599                           	opt stack 24
  4600                           
  4601                           ; BSR set to: 1
  4602                           ;incstack = 0
  4603                           ;scale@scl stored from wreg
  4604  000E7A  0100               	movlb	0	; () banked
  4605  000E7C  6FAF               	movwf	scale@scl& (0+255),b
  4606                           
  4607                           ;doprnt.c: 428: if(scl < 0) {
  4608  000E7E  0100               	movlb	0	; () banked
  4609  000E80  AFAF               	btfss	scale@scl& (0+255),7,b
  4610  000E82  D145               	goto	l4943
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;doprnt.c: 429: scl = -scl;
  4614  000E84  0100               	movlb	0	; () banked
  4615  000E86  6DAF               	negf	scale@scl& (0+255),b
  4616                           
  4617                           ;doprnt.c: 430: if(scl>=110)
  4618  000E88  0100               	movlb	0	; () banked
  4619  000E8A  51AF               	movf	scale@scl& (0+255),w,b
  4620  000E8C  0A80               	xorlw	128
  4621  000E8E  0F12               	addlw	-238
  4622  000E90  A0D8               	btfss	status,0,c
  4623  000E92  D0BB               	goto	l4933
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4627  000E94  0E00               	movlw	0
  4628  000E96  0100               	movlb	0	; () banked
  4629  000E98  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4630  000E9A  0E0A               	movlw	10
  4631  000E9C  6F88               	movwf	___awdiv@divisor& (0+255),b
  4632  000E9E  0E00               	movlw	0
  4633  000EA0  0100               	movlb	0	; () banked
  4634  000EA2  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  4635  000EA4  0E64               	movlw	100
  4636  000EA6  6F82               	movwf	___awmod@divisor& (0+255),b
  4637  000EA8  0100               	movlb	0	; () banked
  4638  000EAA  51AF               	movf	scale@scl& (0+255),w,b
  4639  000EAC  0100               	movlb	0	; () banked
  4640  000EAE  6F80               	movwf	___awmod@dividend& (0+255),b
  4641  000EB0  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  4642  000EB2  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  4643  000EB4  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  4644  000EB6  EC84  F022         	call	___awmod	;wreg free
  4645  000EBA  C080  F086         	movff	?___awmod,___awdiv@dividend
  4646  000EBE  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  4647  000EC2  EC11  F021         	call	___awdiv	;wreg free
  4648  000EC6  0100               	movlb	0	; () banked
  4649  000EC8  90D8               	bcf	status,0,c
  4650  000ECA  3786               	rlcf	?___awdiv& (0+255),f,b
  4651  000ECC  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4652  000ECE  0100               	movlb	0	; () banked
  4653  000ED0  90D8               	bcf	status,0,c
  4654  000ED2  3786               	rlcf	?___awdiv& (0+255),f,b
  4655  000ED4  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4656  000ED6  0E24               	movlw	36
  4657  000ED8  0100               	movlb	0	; () banked
  4658  000EDA  2786               	addwf	?___awdiv& (0+255),f,b
  4659  000EDC  0E00               	movlw	0
  4660  000EDE  0100               	movlb	0	; () banked
  4661  000EE0  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  4662  000EE2  0EF3               	movlw	low __npowers_
  4663  000EE4  0100               	movlb	0	; () banked
  4664  000EE6  2586               	addwf	?___awdiv& (0+255),w,b
  4665  000EE8  6EF6               	movwf	tblptrl,c
  4666  000EEA  0EFE               	movlw	high __npowers_
  4667  000EEC  0100               	movlb	0	; () banked
  4668  000EEE  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4669  000EF0  6EF7               	movwf	tblptrh,c
  4670  000EF2                     	if	1	;There are 3 active tblptr bytes
  4671  000EF2  6AF8               	clrf	tblptru,c
  4672  000EF4  0E00               	movlw	low (__mediumconst shr (0+16))
  4673  000EF6  22F8               	addwfc	tblptru,f,c
  4674  000EF8                     	endif
  4675  000EF8  0009               	tblrd		*+
  4676  000EFA  CFF5 F092          	movff	tablat,___flmul@a
  4677  000EFE  0009               	tblrd		*+
  4678  000F00  CFF5 F093          	movff	tablat,___flmul@a+1
  4679  000F04  0009               	tblrd		*+
  4680  000F06  CFF5 F094          	movff	tablat,___flmul@a+2
  4681  000F0A  000A               	tblrd		*-
  4682  000F0C  CFF5 F095          	movff	tablat,___flmul@a+3
  4683  000F10  0E00               	movlw	0
  4684  000F12  0100               	movlb	0	; () banked
  4685  000F14  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4686  000F16  0E64               	movlw	100
  4687  000F18  6F88               	movwf	___awdiv@divisor& (0+255),b
  4688  000F1A  0100               	movlb	0	; () banked
  4689  000F1C  51AF               	movf	scale@scl& (0+255),w,b
  4690  000F1E  0100               	movlb	0	; () banked
  4691  000F20  6F86               	movwf	___awdiv@dividend& (0+255),b
  4692  000F22  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  4693  000F24  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  4694  000F26  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4695  000F28  EC11  F021         	call	___awdiv	;wreg free
  4696  000F2C  0100               	movlb	0	; () banked
  4697  000F2E  90D8               	bcf	status,0,c
  4698  000F30  3786               	rlcf	?___awdiv& (0+255),f,b
  4699  000F32  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4700  000F34  0100               	movlb	0	; () banked
  4701  000F36  90D8               	bcf	status,0,c
  4702  000F38  3786               	rlcf	?___awdiv& (0+255),f,b
  4703  000F3A  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4704  000F3C  0E48               	movlw	72
  4705  000F3E  0100               	movlb	0	; () banked
  4706  000F40  2786               	addwf	?___awdiv& (0+255),f,b
  4707  000F42  0E00               	movlw	0
  4708  000F44  0100               	movlb	0	; () banked
  4709  000F46  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  4710  000F48  0EF3               	movlw	low __npowers_
  4711  000F4A  0100               	movlb	0	; () banked
  4712  000F4C  2586               	addwf	?___awdiv& (0+255),w,b
  4713  000F4E  6EF6               	movwf	tblptrl,c
  4714  000F50  0EFE               	movlw	high __npowers_
  4715  000F52  0100               	movlb	0	; () banked
  4716  000F54  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4717  000F56  6EF7               	movwf	tblptrh,c
  4718  000F58                     	if	1	;There are 3 active tblptr bytes
  4719  000F58  6AF8               	clrf	tblptru,c
  4720  000F5A  0E00               	movlw	low (__mediumconst shr (0+16))
  4721  000F5C  22F8               	addwfc	tblptru,f,c
  4722  000F5E                     	endif
  4723  000F5E  0009               	tblrd		*+
  4724  000F60  CFF5 F08E          	movff	tablat,___flmul@b
  4725  000F64  0009               	tblrd		*+
  4726  000F66  CFF5 F08F          	movff	tablat,___flmul@b+1
  4727  000F6A  0009               	tblrd		*+
  4728  000F6C  CFF5 F090          	movff	tablat,___flmul@b+2
  4729  000F70  000A               	tblrd		*-
  4730  000F72  CFF5 F091          	movff	tablat,___flmul@b+3
  4731  000F76  ECA2  F00E         	call	___flmul	;wreg free
  4732  000F7A  C08E  F0AB         	movff	?___flmul,_scale$1799
  4733  000F7E  C08F  F0AC         	movff	?___flmul+1,_scale$1799+1
  4734  000F82  C090  F0AD         	movff	?___flmul+2,_scale$1799+2
  4735  000F86  C091  F0AE         	movff	?___flmul+3,_scale$1799+3
  4736                           
  4737                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4738  000F8A  C0AB  F08E         	movff	_scale$1799,___flmul@b
  4739  000F8E  C0AC  F08F         	movff	_scale$1799+1,___flmul@b+1
  4740  000F92  C0AD  F090         	movff	_scale$1799+2,___flmul@b+2
  4741  000F96  C0AE  F091         	movff	_scale$1799+3,___flmul@b+3
  4742  000F9A  0E00               	movlw	0
  4743  000F9C  0100               	movlb	0	; () banked
  4744  000F9E  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  4745  000FA0  0E0A               	movlw	10
  4746  000FA2  6F82               	movwf	___awmod@divisor& (0+255),b
  4747  000FA4  0100               	movlb	0	; () banked
  4748  000FA6  51AF               	movf	scale@scl& (0+255),w,b
  4749  000FA8  0100               	movlb	0	; () banked
  4750  000FAA  6F80               	movwf	___awmod@dividend& (0+255),b
  4751  000FAC  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  4752  000FAE  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  4753  000FB0  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  4754  000FB2  EC84  F022         	call	___awmod	;wreg free
  4755  000FB6  0100               	movlb	0	; () banked
  4756  000FB8  90D8               	bcf	status,0,c
  4757  000FBA  3780               	rlcf	?___awmod& (0+255),f,b
  4758  000FBC  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4759  000FBE  0100               	movlb	0	; () banked
  4760  000FC0  90D8               	bcf	status,0,c
  4761  000FC2  3780               	rlcf	?___awmod& (0+255),f,b
  4762  000FC4  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4763  000FC6  0EF3               	movlw	low __npowers_
  4764  000FC8  0100               	movlb	0	; () banked
  4765  000FCA  2580               	addwf	?___awmod& (0+255),w,b
  4766  000FCC  6EF6               	movwf	tblptrl,c
  4767  000FCE  0EFE               	movlw	high __npowers_
  4768  000FD0  0100               	movlb	0	; () banked
  4769  000FD2  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  4770  000FD4  6EF7               	movwf	tblptrh,c
  4771  000FD6                     	if	1	;There are 3 active tblptr bytes
  4772  000FD6  6AF8               	clrf	tblptru,c
  4773  000FD8  0E00               	movlw	low (__mediumconst shr (0+16))
  4774  000FDA  22F8               	addwfc	tblptru,f,c
  4775  000FDC                     	endif
  4776  000FDC  0009               	tblrd		*+
  4777  000FDE  CFF5 F092          	movff	tablat,___flmul@a
  4778  000FE2  0009               	tblrd		*+
  4779  000FE4  CFF5 F093          	movff	tablat,___flmul@a+1
  4780  000FE8  0009               	tblrd		*+
  4781  000FEA  CFF5 F094          	movff	tablat,___flmul@a+2
  4782  000FEE  000A               	tblrd		*-
  4783  000FF0  CFF5 F095          	movff	tablat,___flmul@a+3
  4784  000FF4  ECA2  F00E         	call	___flmul	;wreg free
  4785  000FF8  C08E  F0A7         	movff	?___flmul,?_scale
  4786  000FFC  C08F  F0A8         	movff	?___flmul+1,?_scale+1
  4787  001000  C090  F0A9         	movff	?___flmul+2,?_scale+2
  4788  001004  C091  F0AA         	movff	?___flmul+3,?_scale+3
  4789  001008  0012               	return	
  4790  00100A                     l4933:
  4791                           
  4792                           ;doprnt.c: 432: else if(scl > 10)
  4793  00100A  0100               	movlb	0	; () banked
  4794  00100C  51AF               	movf	scale@scl& (0+255),w,b
  4795  00100E  0A80               	xorlw	128
  4796  001010  0F75               	addlw	-139
  4797  001012  A0D8               	btfss	status,0,c
  4798  001014  D063               	goto	l4939
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4802  001016  0E00               	movlw	0
  4803  001018  0100               	movlb	0	; () banked
  4804  00101A  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4805  00101C  0E0A               	movlw	10
  4806  00101E  6F88               	movwf	___awdiv@divisor& (0+255),b
  4807  001020  0100               	movlb	0	; () banked
  4808  001022  51AF               	movf	scale@scl& (0+255),w,b
  4809  001024  0100               	movlb	0	; () banked
  4810  001026  6F86               	movwf	___awdiv@dividend& (0+255),b
  4811  001028  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  4812  00102A  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  4813  00102C  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4814  00102E  EC11  F021         	call	___awdiv	;wreg free
  4815  001032  0100               	movlb	0	; () banked
  4816  001034  90D8               	bcf	status,0,c
  4817  001036  3786               	rlcf	?___awdiv& (0+255),f,b
  4818  001038  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4819  00103A  0100               	movlb	0	; () banked
  4820  00103C  90D8               	bcf	status,0,c
  4821  00103E  3786               	rlcf	?___awdiv& (0+255),f,b
  4822  001040  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4823  001042  0E24               	movlw	36
  4824  001044  0100               	movlb	0	; () banked
  4825  001046  2786               	addwf	?___awdiv& (0+255),f,b
  4826  001048  0E00               	movlw	0
  4827  00104A  0100               	movlb	0	; () banked
  4828  00104C  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  4829  00104E  0EF3               	movlw	low __npowers_
  4830  001050  0100               	movlb	0	; () banked
  4831  001052  2586               	addwf	?___awdiv& (0+255),w,b
  4832  001054  6EF6               	movwf	tblptrl,c
  4833  001056  0EFE               	movlw	high __npowers_
  4834  001058  0100               	movlb	0	; () banked
  4835  00105A  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4836  00105C  6EF7               	movwf	tblptrh,c
  4837  00105E                     	if	1	;There are 3 active tblptr bytes
  4838  00105E  6AF8               	clrf	tblptru,c
  4839  001060  0E00               	movlw	low (__mediumconst shr (0+16))
  4840  001062  22F8               	addwfc	tblptru,f,c
  4841  001064                     	endif
  4842  001064  0009               	tblrd		*+
  4843  001066  CFF5 F08E          	movff	tablat,___flmul@b
  4844  00106A  0009               	tblrd		*+
  4845  00106C  CFF5 F08F          	movff	tablat,___flmul@b+1
  4846  001070  0009               	tblrd		*+
  4847  001072  CFF5 F090          	movff	tablat,___flmul@b+2
  4848  001076  000A               	tblrd		*-
  4849  001078  CFF5 F091          	movff	tablat,___flmul@b+3
  4850  00107C  0E00               	movlw	0
  4851  00107E  0100               	movlb	0	; () banked
  4852  001080  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  4853  001082  0E0A               	movlw	10
  4854  001084  6F82               	movwf	___awmod@divisor& (0+255),b
  4855  001086  0100               	movlb	0	; () banked
  4856  001088  51AF               	movf	scale@scl& (0+255),w,b
  4857  00108A  0100               	movlb	0	; () banked
  4858  00108C  6F80               	movwf	___awmod@dividend& (0+255),b
  4859  00108E  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  4860  001090  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  4861  001092  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  4862  001094  EC84  F022         	call	___awmod	;wreg free
  4863  001098  0100               	movlb	0	; () banked
  4864  00109A  90D8               	bcf	status,0,c
  4865  00109C  3780               	rlcf	?___awmod& (0+255),f,b
  4866  00109E  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4867  0010A0  0100               	movlb	0	; () banked
  4868  0010A2  90D8               	bcf	status,0,c
  4869  0010A4  3780               	rlcf	?___awmod& (0+255),f,b
  4870  0010A6  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4871  0010A8  0EF3               	movlw	low __npowers_
  4872  0010AA  0100               	movlb	0	; () banked
  4873  0010AC  2580               	addwf	?___awmod& (0+255),w,b
  4874  0010AE  6EF6               	movwf	tblptrl,c
  4875  0010B0  0EFE               	movlw	high __npowers_
  4876  0010B2  0100               	movlb	0	; () banked
  4877  0010B4  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  4878  0010B6  6EF7               	movwf	tblptrh,c
  4879  0010B8                     	if	1	;There are 3 active tblptr bytes
  4880  0010B8  6AF8               	clrf	tblptru,c
  4881  0010BA  0E00               	movlw	low (__mediumconst shr (0+16))
  4882  0010BC  22F8               	addwfc	tblptru,f,c
  4883  0010BE                     	endif
  4884  0010BE  0009               	tblrd		*+
  4885  0010C0  CFF5 F092          	movff	tablat,___flmul@a
  4886  0010C4  0009               	tblrd		*+
  4887  0010C6  CFF5 F093          	movff	tablat,___flmul@a+1
  4888  0010CA  0009               	tblrd		*+
  4889  0010CC  CFF5 F094          	movff	tablat,___flmul@a+2
  4890  0010D0  000A               	tblrd		*-
  4891  0010D2  CFF5 F095          	movff	tablat,___flmul@a+3
  4892  0010D6  ECA2  F00E         	call	___flmul	;wreg free
  4893  0010DA  D78E               	goto	L6
  4894  0010DC                     l4939:
  4895                           
  4896                           ;doprnt.c: 434: return _npowers_[scl];
  4897  0010DC  0100               	movlb	0	; () banked
  4898  0010DE  51AF               	movf	scale@scl& (0+255),w,b
  4899  0010E0  0D04               	mullw	4
  4900  0010E2  0EF3               	movlw	low __npowers_
  4901  0010E4  24F3               	addwf	prodl,w,c
  4902  0010E6  6EF6               	movwf	tblptrl,c
  4903  0010E8  0EFE               	movlw	high __npowers_
  4904  0010EA  20F4               	addwfc	prodh,w,c
  4905  0010EC  6EF7               	movwf	tblptrh,c
  4906  0010EE                     	if	1	;There are 3 active tblptr bytes
  4907  0010EE  6AF8               	clrf	tblptru,c
  4908  0010F0  0E00               	movlw	low (__mediumconst shr (0+16))
  4909  0010F2  22F8               	addwfc	tblptru,f,c
  4910  0010F4                     	endif
  4911  0010F4  0009               	tblrd		*+
  4912  0010F6  CFF5 F0A7          	movff	tablat,?_scale
  4913  0010FA  0009               	tblrd		*+
  4914  0010FC  CFF5 F0A8          	movff	tablat,?_scale+1
  4915  001100  0009               	tblrd		*+
  4916  001102  CFF5 F0A9          	movff	tablat,?_scale+2
  4917  001106  000A               	tblrd		*-
  4918  001108  CFF5 F0AA          	movff	tablat,?_scale+3
  4919                           
  4920                           ; BSR set to: 0
  4921  00110C  0012               	return	
  4922  00110E                     l4943:
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;doprnt.c: 435: }
  4926                           ;doprnt.c: 436: if(scl>=110)
  4927  00110E  0100               	movlb	0	; () banked
  4928  001110  51AF               	movf	scale@scl& (0+255),w,b
  4929  001112  0A80               	xorlw	128
  4930  001114  0F12               	addlw	-238
  4931  001116  A0D8               	btfss	status,0,c
  4932  001118  D0BB               	goto	l4951
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4936  00111A  0E00               	movlw	0
  4937  00111C  0100               	movlb	0	; () banked
  4938  00111E  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4939  001120  0E0A               	movlw	10
  4940  001122  6F88               	movwf	___awdiv@divisor& (0+255),b
  4941  001124  0E00               	movlw	0
  4942  001126  0100               	movlb	0	; () banked
  4943  001128  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  4944  00112A  0E64               	movlw	100
  4945  00112C  6F82               	movwf	___awmod@divisor& (0+255),b
  4946  00112E  0100               	movlb	0	; () banked
  4947  001130  51AF               	movf	scale@scl& (0+255),w,b
  4948  001132  0100               	movlb	0	; () banked
  4949  001134  6F80               	movwf	___awmod@dividend& (0+255),b
  4950  001136  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  4951  001138  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  4952  00113A  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  4953  00113C  EC84  F022         	call	___awmod	;wreg free
  4954  001140  C080  F086         	movff	?___awmod,___awdiv@dividend
  4955  001144  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  4956  001148  EC11  F021         	call	___awdiv	;wreg free
  4957  00114C  0100               	movlb	0	; () banked
  4958  00114E  90D8               	bcf	status,0,c
  4959  001150  3786               	rlcf	?___awdiv& (0+255),f,b
  4960  001152  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4961  001154  0100               	movlb	0	; () banked
  4962  001156  90D8               	bcf	status,0,c
  4963  001158  3786               	rlcf	?___awdiv& (0+255),f,b
  4964  00115A  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4965  00115C  0E24               	movlw	36
  4966  00115E  0100               	movlb	0	; () banked
  4967  001160  2786               	addwf	?___awdiv& (0+255),f,b
  4968  001162  0E00               	movlw	0
  4969  001164  0100               	movlb	0	; () banked
  4970  001166  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  4971  001168  0E27               	movlw	low __powers_
  4972  00116A  0100               	movlb	0	; () banked
  4973  00116C  2586               	addwf	?___awdiv& (0+255),w,b
  4974  00116E  6EF6               	movwf	tblptrl,c
  4975  001170  0EFF               	movlw	high __powers_
  4976  001172  0100               	movlb	0	; () banked
  4977  001174  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4978  001176  6EF7               	movwf	tblptrh,c
  4979  001178                     	if	1	;There are 3 active tblptr bytes
  4980  001178  6AF8               	clrf	tblptru,c
  4981  00117A  0E00               	movlw	low (__mediumconst shr (0+16))
  4982  00117C  22F8               	addwfc	tblptru,f,c
  4983  00117E                     	endif
  4984  00117E  0009               	tblrd		*+
  4985  001180  CFF5 F092          	movff	tablat,___flmul@a
  4986  001184  0009               	tblrd		*+
  4987  001186  CFF5 F093          	movff	tablat,___flmul@a+1
  4988  00118A  0009               	tblrd		*+
  4989  00118C  CFF5 F094          	movff	tablat,___flmul@a+2
  4990  001190  000A               	tblrd		*-
  4991  001192  CFF5 F095          	movff	tablat,___flmul@a+3
  4992  001196  0E00               	movlw	0
  4993  001198  0100               	movlb	0	; () banked
  4994  00119A  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4995  00119C  0E64               	movlw	100
  4996  00119E  6F88               	movwf	___awdiv@divisor& (0+255),b
  4997  0011A0  0100               	movlb	0	; () banked
  4998  0011A2  51AF               	movf	scale@scl& (0+255),w,b
  4999  0011A4  0100               	movlb	0	; () banked
  5000  0011A6  6F86               	movwf	___awdiv@dividend& (0+255),b
  5001  0011A8  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  5002  0011AA  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  5003  0011AC  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5004  0011AE  EC11  F021         	call	___awdiv	;wreg free
  5005  0011B2  0100               	movlb	0	; () banked
  5006  0011B4  90D8               	bcf	status,0,c
  5007  0011B6  3786               	rlcf	?___awdiv& (0+255),f,b
  5008  0011B8  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5009  0011BA  0100               	movlb	0	; () banked
  5010  0011BC  90D8               	bcf	status,0,c
  5011  0011BE  3786               	rlcf	?___awdiv& (0+255),f,b
  5012  0011C0  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5013  0011C2  0E48               	movlw	72
  5014  0011C4  0100               	movlb	0	; () banked
  5015  0011C6  2786               	addwf	?___awdiv& (0+255),f,b
  5016  0011C8  0E00               	movlw	0
  5017  0011CA  0100               	movlb	0	; () banked
  5018  0011CC  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  5019  0011CE  0E27               	movlw	low __powers_
  5020  0011D0  0100               	movlb	0	; () banked
  5021  0011D2  2586               	addwf	?___awdiv& (0+255),w,b
  5022  0011D4  6EF6               	movwf	tblptrl,c
  5023  0011D6  0EFF               	movlw	high __powers_
  5024  0011D8  0100               	movlb	0	; () banked
  5025  0011DA  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  5026  0011DC  6EF7               	movwf	tblptrh,c
  5027  0011DE                     	if	1	;There are 3 active tblptr bytes
  5028  0011DE  6AF8               	clrf	tblptru,c
  5029  0011E0  0E00               	movlw	low (__mediumconst shr (0+16))
  5030  0011E2  22F8               	addwfc	tblptru,f,c
  5031  0011E4                     	endif
  5032  0011E4  0009               	tblrd		*+
  5033  0011E6  CFF5 F08E          	movff	tablat,___flmul@b
  5034  0011EA  0009               	tblrd		*+
  5035  0011EC  CFF5 F08F          	movff	tablat,___flmul@b+1
  5036  0011F0  0009               	tblrd		*+
  5037  0011F2  CFF5 F090          	movff	tablat,___flmul@b+2
  5038  0011F6  000A               	tblrd		*-
  5039  0011F8  CFF5 F091          	movff	tablat,___flmul@b+3
  5040  0011FC  ECA2  F00E         	call	___flmul	;wreg free
  5041  001200  C08E  F0AB         	movff	?___flmul,_scale$1799
  5042  001204  C08F  F0AC         	movff	?___flmul+1,_scale$1799+1
  5043  001208  C090  F0AD         	movff	?___flmul+2,_scale$1799+2
  5044  00120C  C091  F0AE         	movff	?___flmul+3,_scale$1799+3
  5045                           
  5046                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5047  001210  C0AB  F08E         	movff	_scale$1799,___flmul@b
  5048  001214  C0AC  F08F         	movff	_scale$1799+1,___flmul@b+1
  5049  001218  C0AD  F090         	movff	_scale$1799+2,___flmul@b+2
  5050  00121C  C0AE  F091         	movff	_scale$1799+3,___flmul@b+3
  5051  001220  0E00               	movlw	0
  5052  001222  0100               	movlb	0	; () banked
  5053  001224  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  5054  001226  0E0A               	movlw	10
  5055  001228  6F82               	movwf	___awmod@divisor& (0+255),b
  5056  00122A  0100               	movlb	0	; () banked
  5057  00122C  51AF               	movf	scale@scl& (0+255),w,b
  5058  00122E  0100               	movlb	0	; () banked
  5059  001230  6F80               	movwf	___awmod@dividend& (0+255),b
  5060  001232  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  5061  001234  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  5062  001236  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  5063  001238  EC84  F022         	call	___awmod	;wreg free
  5064  00123C  0100               	movlb	0	; () banked
  5065  00123E  90D8               	bcf	status,0,c
  5066  001240  3780               	rlcf	?___awmod& (0+255),f,b
  5067  001242  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  5068  001244  0100               	movlb	0	; () banked
  5069  001246  90D8               	bcf	status,0,c
  5070  001248  3780               	rlcf	?___awmod& (0+255),f,b
  5071  00124A  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  5072  00124C  0E27               	movlw	low __powers_
  5073  00124E  0100               	movlb	0	; () banked
  5074  001250  2580               	addwf	?___awmod& (0+255),w,b
  5075  001252  6EF6               	movwf	tblptrl,c
  5076  001254  0EFF               	movlw	high __powers_
  5077  001256  0100               	movlb	0	; () banked
  5078  001258  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  5079  00125A  6EF7               	movwf	tblptrh,c
  5080  00125C                     	if	1	;There are 3 active tblptr bytes
  5081  00125C  6AF8               	clrf	tblptru,c
  5082  00125E  0E00               	movlw	low (__mediumconst shr (0+16))
  5083  001260  22F8               	addwfc	tblptru,f,c
  5084  001262                     	endif
  5085  001262  0009               	tblrd		*+
  5086  001264  CFF5 F092          	movff	tablat,___flmul@a
  5087  001268  0009               	tblrd		*+
  5088  00126A  CFF5 F093          	movff	tablat,___flmul@a+1
  5089  00126E  0009               	tblrd		*+
  5090  001270  CFF5 F094          	movff	tablat,___flmul@a+2
  5091  001274  000A               	tblrd		*-
  5092  001276  CFF5 F095          	movff	tablat,___flmul@a+3
  5093  00127A  ECA2  F00E         	call	___flmul	;wreg free
  5094  00127E  C08E  F0A7         	movff	?___flmul,?_scale
  5095  001282  C08F  F0A8         	movff	?___flmul+1,?_scale+1
  5096  001286  C090  F0A9         	movff	?___flmul+2,?_scale+2
  5097  00128A  C091  F0AA         	movff	?___flmul+3,?_scale+3
  5098  00128E  0012               	return	
  5099  001290                     l4951:
  5100                           
  5101                           ;doprnt.c: 438: else if(scl > 10)
  5102  001290  0100               	movlb	0	; () banked
  5103  001292  51AF               	movf	scale@scl& (0+255),w,b
  5104  001294  0A80               	xorlw	128
  5105  001296  0F75               	addlw	-139
  5106  001298  A0D8               	btfss	status,0,c
  5107  00129A  D063               	goto	l4957
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  5111  00129C  0E00               	movlw	0
  5112  00129E  0100               	movlb	0	; () banked
  5113  0012A0  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  5114  0012A2  0E0A               	movlw	10
  5115  0012A4  6F88               	movwf	___awdiv@divisor& (0+255),b
  5116  0012A6  0100               	movlb	0	; () banked
  5117  0012A8  51AF               	movf	scale@scl& (0+255),w,b
  5118  0012AA  0100               	movlb	0	; () banked
  5119  0012AC  6F86               	movwf	___awdiv@dividend& (0+255),b
  5120  0012AE  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  5121  0012B0  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  5122  0012B2  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5123  0012B4  EC11  F021         	call	___awdiv	;wreg free
  5124  0012B8  0100               	movlb	0	; () banked
  5125  0012BA  90D8               	bcf	status,0,c
  5126  0012BC  3786               	rlcf	?___awdiv& (0+255),f,b
  5127  0012BE  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5128  0012C0  0100               	movlb	0	; () banked
  5129  0012C2  90D8               	bcf	status,0,c
  5130  0012C4  3786               	rlcf	?___awdiv& (0+255),f,b
  5131  0012C6  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5132  0012C8  0E24               	movlw	36
  5133  0012CA  0100               	movlb	0	; () banked
  5134  0012CC  2786               	addwf	?___awdiv& (0+255),f,b
  5135  0012CE  0E00               	movlw	0
  5136  0012D0  0100               	movlb	0	; () banked
  5137  0012D2  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  5138  0012D4  0E27               	movlw	low __powers_
  5139  0012D6  0100               	movlb	0	; () banked
  5140  0012D8  2586               	addwf	?___awdiv& (0+255),w,b
  5141  0012DA  6EF6               	movwf	tblptrl,c
  5142  0012DC  0EFF               	movlw	high __powers_
  5143  0012DE  0100               	movlb	0	; () banked
  5144  0012E0  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  5145  0012E2  6EF7               	movwf	tblptrh,c
  5146  0012E4                     	if	1	;There are 3 active tblptr bytes
  5147  0012E4  6AF8               	clrf	tblptru,c
  5148  0012E6  0E00               	movlw	low (__mediumconst shr (0+16))
  5149  0012E8  22F8               	addwfc	tblptru,f,c
  5150  0012EA                     	endif
  5151  0012EA  0009               	tblrd		*+
  5152  0012EC  CFF5 F08E          	movff	tablat,___flmul@b
  5153  0012F0  0009               	tblrd		*+
  5154  0012F2  CFF5 F08F          	movff	tablat,___flmul@b+1
  5155  0012F6  0009               	tblrd		*+
  5156  0012F8  CFF5 F090          	movff	tablat,___flmul@b+2
  5157  0012FC  000A               	tblrd		*-
  5158  0012FE  CFF5 F091          	movff	tablat,___flmul@b+3
  5159  001302  0E00               	movlw	0
  5160  001304  0100               	movlb	0	; () banked
  5161  001306  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  5162  001308  0E0A               	movlw	10
  5163  00130A  6F82               	movwf	___awmod@divisor& (0+255),b
  5164  00130C  0100               	movlb	0	; () banked
  5165  00130E  51AF               	movf	scale@scl& (0+255),w,b
  5166  001310  0100               	movlb	0	; () banked
  5167  001312  6F80               	movwf	___awmod@dividend& (0+255),b
  5168  001314  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  5169  001316  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  5170  001318  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  5171  00131A  EC84  F022         	call	___awmod	;wreg free
  5172  00131E  0100               	movlb	0	; () banked
  5173  001320  90D8               	bcf	status,0,c
  5174  001322  3780               	rlcf	?___awmod& (0+255),f,b
  5175  001324  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  5176  001326  0100               	movlb	0	; () banked
  5177  001328  90D8               	bcf	status,0,c
  5178  00132A  3780               	rlcf	?___awmod& (0+255),f,b
  5179  00132C  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  5180  00132E  0E27               	movlw	low __powers_
  5181  001330  0100               	movlb	0	; () banked
  5182  001332  2580               	addwf	?___awmod& (0+255),w,b
  5183  001334  6EF6               	movwf	tblptrl,c
  5184  001336  0EFF               	movlw	high __powers_
  5185  001338  0100               	movlb	0	; () banked
  5186  00133A  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  5187  00133C  6EF7               	movwf	tblptrh,c
  5188  00133E                     	if	1	;There are 3 active tblptr bytes
  5189  00133E  6AF8               	clrf	tblptru,c
  5190  001340  0E00               	movlw	low (__mediumconst shr (0+16))
  5191  001342  22F8               	addwfc	tblptru,f,c
  5192  001344                     	endif
  5193  001344  0009               	tblrd		*+
  5194  001346  CFF5 F092          	movff	tablat,___flmul@a
  5195  00134A  0009               	tblrd		*+
  5196  00134C  CFF5 F093          	movff	tablat,___flmul@a+1
  5197  001350  0009               	tblrd		*+
  5198  001352  CFF5 F094          	movff	tablat,___flmul@a+2
  5199  001356  000A               	tblrd		*-
  5200  001358  CFF5 F095          	movff	tablat,___flmul@a+3
  5201  00135C  ECA2  F00E         	call	___flmul	;wreg free
  5202  001360  D78E               	goto	L7
  5203  001362                     l4957:
  5204                           
  5205                           ;doprnt.c: 440: return _powers_[scl];
  5206  001362  0100               	movlb	0	; () banked
  5207  001364  51AF               	movf	scale@scl& (0+255),w,b
  5208  001366  0D04               	mullw	4
  5209  001368  0E27               	movlw	low __powers_
  5210  00136A  24F3               	addwf	prodl,w,c
  5211  00136C  6EF6               	movwf	tblptrl,c
  5212  00136E  0EFF               	movlw	high __powers_
  5213  001370  20F4               	addwfc	prodh,w,c
  5214  001372  6EF7               	movwf	tblptrh,c
  5215  001374                     	if	1	;There are 3 active tblptr bytes
  5216  001374  6AF8               	clrf	tblptru,c
  5217  001376  0E00               	movlw	low (__mediumconst shr (0+16))
  5218  001378  22F8               	addwfc	tblptru,f,c
  5219  00137A                     	endif
  5220  00137A  0009               	tblrd		*+
  5221  00137C  CFF5 F0A7          	movff	tablat,?_scale
  5222  001380  0009               	tblrd		*+
  5223  001382  CFF5 F0A8          	movff	tablat,?_scale+1
  5224  001386  0009               	tblrd		*+
  5225  001388  CFF5 F0A9          	movff	tablat,?_scale+2
  5226  00138C  000A               	tblrd		*-
  5227  00138E  CFF5 F0AA          	movff	tablat,?_scale+3
  5228  001392  0012               	return	
  5229  001394                     __end_of_scale:
  5230                           	opt stack 0
  5231                           tblptru	equ	0xFF8
  5232                           tblptrh	equ	0xFF7
  5233                           tblptrl	equ	0xFF6
  5234                           tablat	equ	0xFF5
  5235                           prodh	equ	0xFF4
  5236                           prodl	equ	0xFF3
  5237                           postinc0	equ	0xFEE
  5238                           wreg	equ	0xFE8
  5239                           indf1	equ	0xFE7
  5240                           postdec1	equ	0xFE5
  5241                           fsr1h	equ	0xFE2
  5242                           fsr1l	equ	0xFE1
  5243                           indf2	equ	0xFDF
  5244                           postinc2	equ	0xFDE
  5245                           postdec2	equ	0xFDD
  5246                           fsr2h	equ	0xFDA
  5247                           fsr2l	equ	0xFD9
  5248                           status	equ	0xFD8
  5249                           
  5250 ;; *************** function _isdigit *****************
  5251 ;; Defined at:
  5252 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;  c               1    wreg     unsigned char 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  c               1    2[BANK0 ] unsigned char 
  5257 ;; Return value:  Size  Location     Type
  5258 ;;		None               void
  5259 ;; Registers used:
  5260 ;;		wreg, status,2, status,0
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;Total ram usage:        3 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:    4
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_sprintf
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text4
  5281  004DA4                     __ptext4:
  5282                           	opt stack 0
  5283  004DA4                     _isdigit:
  5284                           	opt stack 25
  5285                           
  5286                           ;incstack = 0
  5287                           ;isdigit@c stored from wreg
  5288  004DA4  0100               	movlb	0	; () banked
  5289  004DA6  6F82               	movwf	isdigit@c& (0+255),b
  5290  004DA8  0E00               	movlw	0
  5291  004DAA  0100               	movlb	0	; () banked
  5292  004DAC  6F81               	movwf	_isdigit$1426& (0+255),b
  5293                           
  5294                           ; BSR set to: 0
  5295  004DAE  0E3A               	movlw	58
  5296  004DB0  0100               	movlb	0	; () banked
  5297  004DB2  6182               	cpfslt	isdigit@c& (0+255),b
  5298  004DB4  D007               	goto	l4969
  5299                           
  5300                           ; BSR set to: 0
  5301  004DB6  0E2F               	movlw	47
  5302  004DB8  0100               	movlb	0	; () banked
  5303  004DBA  6582               	cpfsgt	isdigit@c& (0+255),b
  5304  004DBC  D003               	goto	l4969
  5305                           
  5306                           ; BSR set to: 0
  5307  004DBE  0E01               	movlw	1
  5308  004DC0  0100               	movlb	0	; () banked
  5309  004DC2  6F81               	movwf	_isdigit$1426& (0+255),b
  5310  004DC4                     l4969:
  5311                           
  5312                           ; BSR set to: 0
  5313  004DC4  C081  F080         	movff	_isdigit$1426,??_isdigit
  5314  004DC8  0100               	movlb	0	; () banked
  5315  004DCA  3180               	rrcf	??_isdigit& (0+255),w,b
  5316  004DCC  0012               	return	
  5317  004DCE                     __end_of_isdigit:
  5318                           	opt stack 0
  5319                           tblptru	equ	0xFF8
  5320                           tblptrh	equ	0xFF7
  5321                           tblptrl	equ	0xFF6
  5322                           tablat	equ	0xFF5
  5323                           prodh	equ	0xFF4
  5324                           prodl	equ	0xFF3
  5325                           postinc0	equ	0xFEE
  5326                           wreg	equ	0xFE8
  5327                           indf1	equ	0xFE7
  5328                           postdec1	equ	0xFE5
  5329                           fsr1h	equ	0xFE2
  5330                           fsr1l	equ	0xFE1
  5331                           indf2	equ	0xFDF
  5332                           postinc2	equ	0xFDE
  5333                           postdec2	equ	0xFDD
  5334                           fsr2h	equ	0xFDA
  5335                           fsr2l	equ	0xFD9
  5336                           status	equ	0xFD8
  5337                           
  5338 ;; *************** function _fround *****************
  5339 ;; Defined at:
  5340 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  prec            1    wreg     unsigned char 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;  prec            1   51[BANK0 ] unsigned char 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  4   39[BANK0 ] unsigned char 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5354 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;Total ram usage:       13 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    5
  5361 ;; This function calls:
  5362 ;;		___awdiv
  5363 ;;		___awmod
  5364 ;;		___flmul
  5365 ;; This function is called by:
  5366 ;;		_sprintf
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text5
  5371  002C36                     __ptext5:
  5372                           	opt stack 0
  5373  002C36                     _fround:
  5374                           	opt stack 24
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;incstack = 0
  5378                           ;fround@prec stored from wreg
  5379  002C36  0100               	movlb	0	; () banked
  5380  002C38  6FB3               	movwf	fround@prec& (0+255),b
  5381                           
  5382                           ;doprnt.c: 413: if(prec>=110)
  5383  002C3A  0E6D               	movlw	109
  5384  002C3C  0100               	movlb	0	; () banked
  5385  002C3E  65B3               	cpfsgt	fround@prec& (0+255),b
  5386  002C40  D0CD               	goto	l4911
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5390  002C42  0E00               	movlw	0
  5391  002C44  0100               	movlb	0	; () banked
  5392  002C46  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  5393  002C48  0E0A               	movlw	10
  5394  002C4A  6F88               	movwf	___awdiv@divisor& (0+255),b
  5395  002C4C  0E00               	movlw	0
  5396  002C4E  0100               	movlb	0	; () banked
  5397  002C50  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  5398  002C52  0E64               	movlw	100
  5399  002C54  6F82               	movwf	___awmod@divisor& (0+255),b
  5400  002C56  C0B3  F080         	movff	fround@prec,___awmod@dividend
  5401  002C5A  0100               	movlb	0	; () banked
  5402  002C5C  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  5403  002C5E  EC84  F022         	call	___awmod	;wreg free
  5404  002C62  C080  F086         	movff	?___awmod,___awdiv@dividend
  5405  002C66  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  5406  002C6A  EC11  F021         	call	___awdiv	;wreg free
  5407  002C6E  0100               	movlb	0	; () banked
  5408  002C70  90D8               	bcf	status,0,c
  5409  002C72  3786               	rlcf	?___awdiv& (0+255),f,b
  5410  002C74  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5411  002C76  0100               	movlb	0	; () banked
  5412  002C78  90D8               	bcf	status,0,c
  5413  002C7A  3786               	rlcf	?___awdiv& (0+255),f,b
  5414  002C7C  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5415  002C7E  0E24               	movlw	36
  5416  002C80  0100               	movlb	0	; () banked
  5417  002C82  2786               	addwf	?___awdiv& (0+255),f,b
  5418  002C84  0E00               	movlw	0
  5419  002C86  0100               	movlb	0	; () banked
  5420  002C88  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  5421  002C8A  0EF3               	movlw	low __npowers_
  5422  002C8C  0100               	movlb	0	; () banked
  5423  002C8E  2586               	addwf	?___awdiv& (0+255),w,b
  5424  002C90  6EF6               	movwf	tblptrl,c
  5425  002C92  0EFE               	movlw	high __npowers_
  5426  002C94  0100               	movlb	0	; () banked
  5427  002C96  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  5428  002C98  6EF7               	movwf	tblptrh,c
  5429  002C9A                     	if	1	;There are 3 active tblptr bytes
  5430  002C9A  6AF8               	clrf	tblptru,c
  5431  002C9C  0E00               	movlw	low (__mediumconst shr (0+16))
  5432  002C9E  22F8               	addwfc	tblptru,f,c
  5433  002CA0                     	endif
  5434  002CA0  0009               	tblrd		*+
  5435  002CA2  CFF5 F092          	movff	tablat,___flmul@a
  5436  002CA6  0009               	tblrd		*+
  5437  002CA8  CFF5 F093          	movff	tablat,___flmul@a+1
  5438  002CAC  0009               	tblrd		*+
  5439  002CAE  CFF5 F094          	movff	tablat,___flmul@a+2
  5440  002CB2  000A               	tblrd		*-
  5441  002CB4  CFF5 F095          	movff	tablat,___flmul@a+3
  5442  002CB8  0E00               	movlw	0
  5443  002CBA  0100               	movlb	0	; () banked
  5444  002CBC  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  5445  002CBE  0E64               	movlw	100
  5446  002CC0  6F88               	movwf	___awdiv@divisor& (0+255),b
  5447  002CC2  C0B3  F086         	movff	fround@prec,___awdiv@dividend
  5448  002CC6  0100               	movlb	0	; () banked
  5449  002CC8  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  5450  002CCA  EC11  F021         	call	___awdiv	;wreg free
  5451  002CCE  0100               	movlb	0	; () banked
  5452  002CD0  90D8               	bcf	status,0,c
  5453  002CD2  3786               	rlcf	?___awdiv& (0+255),f,b
  5454  002CD4  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5455  002CD6  0100               	movlb	0	; () banked
  5456  002CD8  90D8               	bcf	status,0,c
  5457  002CDA  3786               	rlcf	?___awdiv& (0+255),f,b
  5458  002CDC  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5459  002CDE  0E48               	movlw	72
  5460  002CE0  0100               	movlb	0	; () banked
  5461  002CE2  2786               	addwf	?___awdiv& (0+255),f,b
  5462  002CE4  0E00               	movlw	0
  5463  002CE6  0100               	movlb	0	; () banked
  5464  002CE8  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  5465  002CEA  0EF3               	movlw	low __npowers_
  5466  002CEC  0100               	movlb	0	; () banked
  5467  002CEE  2586               	addwf	?___awdiv& (0+255),w,b
  5468  002CF0  6EF6               	movwf	tblptrl,c
  5469  002CF2  0EFE               	movlw	high __npowers_
  5470  002CF4  0100               	movlb	0	; () banked
  5471  002CF6  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  5472  002CF8  6EF7               	movwf	tblptrh,c
  5473  002CFA                     	if	1	;There are 3 active tblptr bytes
  5474  002CFA  6AF8               	clrf	tblptru,c
  5475  002CFC  0E00               	movlw	low (__mediumconst shr (0+16))
  5476  002CFE  22F8               	addwfc	tblptru,f,c
  5477  002D00                     	endif
  5478  002D00  0009               	tblrd		*+
  5479  002D02  CFF5 F08E          	movff	tablat,___flmul@b
  5480  002D06  0009               	tblrd		*+
  5481  002D08  CFF5 F08F          	movff	tablat,___flmul@b+1
  5482  002D0C  0009               	tblrd		*+
  5483  002D0E  CFF5 F090          	movff	tablat,___flmul@b+2
  5484  002D12  000A               	tblrd		*-
  5485  002D14  CFF5 F091          	movff	tablat,___flmul@b+3
  5486  002D18  ECA2  F00E         	call	___flmul	;wreg free
  5487  002D1C  C08E  F0AF         	movff	?___flmul,_fround$1797
  5488  002D20  C08F  F0B0         	movff	?___flmul+1,_fround$1797+1
  5489  002D24  C090  F0B1         	movff	?___flmul+2,_fround$1797+2
  5490  002D28  C091  F0B2         	movff	?___flmul+3,_fround$1797+3
  5491                           
  5492                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5493  002D2C  0E00               	movlw	0
  5494  002D2E  0100               	movlb	0	; () banked
  5495  002D30  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  5496  002D32  0E0A               	movlw	10
  5497  002D34  6F82               	movwf	___awmod@divisor& (0+255),b
  5498  002D36  C0B3  F080         	movff	fround@prec,___awmod@dividend
  5499  002D3A  0100               	movlb	0	; () banked
  5500  002D3C  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  5501  002D3E  EC84  F022         	call	___awmod	;wreg free
  5502  002D42  0100               	movlb	0	; () banked
  5503  002D44  90D8               	bcf	status,0,c
  5504  002D46  3780               	rlcf	?___awmod& (0+255),f,b
  5505  002D48  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  5506  002D4A  0100               	movlb	0	; () banked
  5507  002D4C  90D8               	bcf	status,0,c
  5508  002D4E  3780               	rlcf	?___awmod& (0+255),f,b
  5509  002D50  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  5510  002D52  0EF3               	movlw	low __npowers_
  5511  002D54  0100               	movlb	0	; () banked
  5512  002D56  2580               	addwf	?___awmod& (0+255),w,b
  5513  002D58  6EF6               	movwf	tblptrl,c
  5514  002D5A  0EFE               	movlw	high __npowers_
  5515  002D5C  0100               	movlb	0	; () banked
  5516  002D5E  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  5517  002D60  6EF7               	movwf	tblptrh,c
  5518  002D62                     	if	1	;There are 3 active tblptr bytes
  5519  002D62  6AF8               	clrf	tblptru,c
  5520  002D64  0E00               	movlw	low (__mediumconst shr (0+16))
  5521  002D66  22F8               	addwfc	tblptru,f,c
  5522  002D68                     	endif
  5523  002D68  0009               	tblrd		*+
  5524  002D6A  CFF5 F092          	movff	tablat,___flmul@a
  5525  002D6E  0009               	tblrd		*+
  5526  002D70  CFF5 F093          	movff	tablat,___flmul@a+1
  5527  002D74  0009               	tblrd		*+
  5528  002D76  CFF5 F094          	movff	tablat,___flmul@a+2
  5529  002D7A  000A               	tblrd		*-
  5530  002D7C  CFF5 F095          	movff	tablat,___flmul@a+3
  5531  002D80  C0AF  F08E         	movff	_fround$1797,___flmul@b
  5532  002D84  C0B0  F08F         	movff	_fround$1797+1,___flmul@b+1
  5533  002D88  C0B1  F090         	movff	_fround$1797+2,___flmul@b+2
  5534  002D8C  C0B2  F091         	movff	_fround$1797+3,___flmul@b+3
  5535  002D90  ECA2  F00E         	call	___flmul	;wreg free
  5536  002D94  C08E  F0AB         	movff	?___flmul,_fround$1798
  5537  002D98  C08F  F0AC         	movff	?___flmul+1,_fround$1798+1
  5538  002D9C  C090  F0AD         	movff	?___flmul+2,_fround$1798+2
  5539  002DA0  C091  F0AE         	movff	?___flmul+3,_fround$1798+3
  5540                           
  5541                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5542  002DA4  C0AB  F08E         	movff	_fround$1798,___flmul@b
  5543  002DA8  C0AC  F08F         	movff	_fround$1798+1,___flmul@b+1
  5544  002DAC  C0AD  F090         	movff	_fround$1798+2,___flmul@b+2
  5545  002DB0  C0AE  F091         	movff	_fround$1798+3,___flmul@b+3
  5546  002DB4  0E00               	movlw	0
  5547  002DB6  0100               	movlb	0	; () banked
  5548  002DB8  6F92               	movwf	___flmul@a& (0+255),b
  5549  002DBA  0E00               	movlw	0
  5550  002DBC  6F93               	movwf	(___flmul@a+1)& (0+255),b
  5551  002DBE  0E00               	movlw	0
  5552  002DC0  6F94               	movwf	(___flmul@a+2)& (0+255),b
  5553  002DC2  0E3F               	movlw	63
  5554  002DC4  6F95               	movwf	(___flmul@a+3)& (0+255),b
  5555  002DC6  ECA2  F00E         	call	___flmul	;wreg free
  5556  002DCA  C08E  F0A7         	movff	?___flmul,?_fround
  5557  002DCE  C08F  F0A8         	movff	?___flmul+1,?_fround+1
  5558  002DD2  C090  F0A9         	movff	?___flmul+2,?_fround+2
  5559  002DD6  C091  F0AA         	movff	?___flmul+3,?_fround+3
  5560  002DDA  0012               	return	
  5561  002DDC                     l4911:
  5562                           
  5563                           ;doprnt.c: 415: else if(prec > 10)
  5564  002DDC  0E0A               	movlw	10
  5565  002DDE  0100               	movlb	0	; () banked
  5566  002DE0  65B3               	cpfsgt	fround@prec& (0+255),b
  5567  002DE2  D078               	goto	l4919
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5571  002DE4  0E00               	movlw	0
  5572  002DE6  0100               	movlb	0	; () banked
  5573  002DE8  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  5574  002DEA  0E0A               	movlw	10
  5575  002DEC  6F82               	movwf	___awmod@divisor& (0+255),b
  5576  002DEE  C0B3  F080         	movff	fround@prec,___awmod@dividend
  5577  002DF2  0100               	movlb	0	; () banked
  5578  002DF4  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  5579  002DF6  EC84  F022         	call	___awmod	;wreg free
  5580  002DFA  0100               	movlb	0	; () banked
  5581  002DFC  90D8               	bcf	status,0,c
  5582  002DFE  3780               	rlcf	?___awmod& (0+255),f,b
  5583  002E00  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  5584  002E02  0100               	movlb	0	; () banked
  5585  002E04  90D8               	bcf	status,0,c
  5586  002E06  3780               	rlcf	?___awmod& (0+255),f,b
  5587  002E08  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  5588  002E0A  0EF3               	movlw	low __npowers_
  5589  002E0C  0100               	movlb	0	; () banked
  5590  002E0E  2580               	addwf	?___awmod& (0+255),w,b
  5591  002E10  6EF6               	movwf	tblptrl,c
  5592  002E12  0EFE               	movlw	high __npowers_
  5593  002E14  0100               	movlb	0	; () banked
  5594  002E16  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  5595  002E18  6EF7               	movwf	tblptrh,c
  5596  002E1A                     	if	1	;There are 3 active tblptr bytes
  5597  002E1A  6AF8               	clrf	tblptru,c
  5598  002E1C  0E00               	movlw	low (__mediumconst shr (0+16))
  5599  002E1E  22F8               	addwfc	tblptru,f,c
  5600  002E20                     	endif
  5601  002E20  0009               	tblrd		*+
  5602  002E22  CFF5 F092          	movff	tablat,___flmul@a
  5603  002E26  0009               	tblrd		*+
  5604  002E28  CFF5 F093          	movff	tablat,___flmul@a+1
  5605  002E2C  0009               	tblrd		*+
  5606  002E2E  CFF5 F094          	movff	tablat,___flmul@a+2
  5607  002E32  000A               	tblrd		*-
  5608  002E34  CFF5 F095          	movff	tablat,___flmul@a+3
  5609  002E38  0E00               	movlw	0
  5610  002E3A  0100               	movlb	0	; () banked
  5611  002E3C  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  5612  002E3E  0E0A               	movlw	10
  5613  002E40  6F88               	movwf	___awdiv@divisor& (0+255),b
  5614  002E42  C0B3  F086         	movff	fround@prec,___awdiv@dividend
  5615  002E46  0100               	movlb	0	; () banked
  5616  002E48  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  5617  002E4A  EC11  F021         	call	___awdiv	;wreg free
  5618  002E4E  0100               	movlb	0	; () banked
  5619  002E50  90D8               	bcf	status,0,c
  5620  002E52  3786               	rlcf	?___awdiv& (0+255),f,b
  5621  002E54  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5622  002E56  0100               	movlb	0	; () banked
  5623  002E58  90D8               	bcf	status,0,c
  5624  002E5A  3786               	rlcf	?___awdiv& (0+255),f,b
  5625  002E5C  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5626  002E5E  0E24               	movlw	36
  5627  002E60  0100               	movlb	0	; () banked
  5628  002E62  2786               	addwf	?___awdiv& (0+255),f,b
  5629  002E64  0E00               	movlw	0
  5630  002E66  0100               	movlb	0	; () banked
  5631  002E68  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  5632  002E6A  0EF3               	movlw	low __npowers_
  5633  002E6C  0100               	movlb	0	; () banked
  5634  002E6E  2586               	addwf	?___awdiv& (0+255),w,b
  5635  002E70  6EF6               	movwf	tblptrl,c
  5636  002E72  0EFE               	movlw	high __npowers_
  5637  002E74  0100               	movlb	0	; () banked
  5638  002E76  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  5639  002E78  6EF7               	movwf	tblptrh,c
  5640  002E7A                     	if	1	;There are 3 active tblptr bytes
  5641  002E7A  6AF8               	clrf	tblptru,c
  5642  002E7C  0E00               	movlw	low (__mediumconst shr (0+16))
  5643  002E7E  22F8               	addwfc	tblptru,f,c
  5644  002E80                     	endif
  5645  002E80  0009               	tblrd		*+
  5646  002E82  CFF5 F08E          	movff	tablat,___flmul@b
  5647  002E86  0009               	tblrd		*+
  5648  002E88  CFF5 F08F          	movff	tablat,___flmul@b+1
  5649  002E8C  0009               	tblrd		*+
  5650  002E8E  CFF5 F090          	movff	tablat,___flmul@b+2
  5651  002E92  000A               	tblrd		*-
  5652  002E94  CFF5 F091          	movff	tablat,___flmul@b+3
  5653  002E98  ECA2  F00E         	call	___flmul	;wreg free
  5654  002E9C  C08E  F0AF         	movff	?___flmul,_fround$1797
  5655  002EA0  C08F  F0B0         	movff	?___flmul+1,_fround$1797+1
  5656  002EA4  C090  F0B1         	movff	?___flmul+2,_fround$1797+2
  5657  002EA8  C091  F0B2         	movff	?___flmul+3,_fround$1797+3
  5658                           
  5659                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5660  002EAC  C0AF  F08E         	movff	_fround$1797,___flmul@b
  5661  002EB0  C0B0  F08F         	movff	_fround$1797+1,___flmul@b+1
  5662  002EB4  C0B1  F090         	movff	_fround$1797+2,___flmul@b+2
  5663  002EB8  C0B2  F091         	movff	_fround$1797+3,___flmul@b+3
  5664  002EBC  0E00               	movlw	0
  5665  002EBE  0100               	movlb	0	; () banked
  5666  002EC0  6F92               	movwf	___flmul@a& (0+255),b
  5667  002EC2  0E00               	movlw	0
  5668  002EC4  6F93               	movwf	(___flmul@a+1)& (0+255),b
  5669  002EC6  0E00               	movlw	0
  5670  002EC8  6F94               	movwf	(___flmul@a+2)& (0+255),b
  5671  002ECA  0E3F               	movlw	63
  5672  002ECC  6F95               	movwf	(___flmul@a+3)& (0+255),b
  5673  002ECE  ECA2  F00E         	call	___flmul	;wreg free
  5674  002ED2  D77B               	goto	L8
  5675  002ED4                     l4919:
  5676                           
  5677                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5678  002ED4  0100               	movlb	0	; () banked
  5679  002ED6  51B3               	movf	fround@prec& (0+255),w,b
  5680  002ED8  0D04               	mullw	4
  5681  002EDA  0EF3               	movlw	low __npowers_
  5682  002EDC  24F3               	addwf	prodl,w,c
  5683  002EDE  6EF6               	movwf	tblptrl,c
  5684  002EE0  0EFE               	movlw	high __npowers_
  5685  002EE2  20F4               	addwfc	prodh,w,c
  5686  002EE4  6EF7               	movwf	tblptrh,c
  5687  002EE6                     	if	1	;There are 3 active tblptr bytes
  5688  002EE6  6AF8               	clrf	tblptru,c
  5689  002EE8  0E00               	movlw	low (__mediumconst shr (0+16))
  5690  002EEA  22F8               	addwfc	tblptru,f,c
  5691  002EEC                     	endif
  5692  002EEC  0009               	tblrd		*+
  5693  002EEE  CFF5 F08E          	movff	tablat,___flmul@b
  5694  002EF2  0009               	tblrd		*+
  5695  002EF4  CFF5 F08F          	movff	tablat,___flmul@b+1
  5696  002EF8  0009               	tblrd		*+
  5697  002EFA  CFF5 F090          	movff	tablat,___flmul@b+2
  5698  002EFE  000A               	tblrd		*-
  5699  002F00  CFF5 F091          	movff	tablat,___flmul@b+3
  5700  002F04  0E00               	movlw	0
  5701  002F06  0100               	movlb	0	; () banked
  5702  002F08  6F92               	movwf	___flmul@a& (0+255),b
  5703  002F0A  0E00               	movlw	0
  5704  002F0C  6F93               	movwf	(___flmul@a+1)& (0+255),b
  5705  002F0E  0E00               	movlw	0
  5706  002F10  6F94               	movwf	(___flmul@a+2)& (0+255),b
  5707  002F12  0E3F               	movlw	63
  5708  002F14  6F95               	movwf	(___flmul@a+3)& (0+255),b
  5709  002F16  ECA2  F00E         	call	___flmul	;wreg free
  5710  002F1A  C08E  F0A7         	movff	?___flmul,?_fround
  5711  002F1E  C08F  F0A8         	movff	?___flmul+1,?_fround+1
  5712  002F22  C090  F0A9         	movff	?___flmul+2,?_fround+2
  5713  002F26  C091  F0AA         	movff	?___flmul+3,?_fround+3
  5714  002F2A  0012               	return	
  5715  002F2C                     __end_of_fround:
  5716                           	opt stack 0
  5717                           tblptru	equ	0xFF8
  5718                           tblptrh	equ	0xFF7
  5719                           tblptrl	equ	0xFF6
  5720                           tablat	equ	0xFF5
  5721                           prodh	equ	0xFF4
  5722                           prodl	equ	0xFF3
  5723                           postinc0	equ	0xFEE
  5724                           wreg	equ	0xFE8
  5725                           indf1	equ	0xFE7
  5726                           postdec1	equ	0xFE5
  5727                           fsr1h	equ	0xFE2
  5728                           fsr1l	equ	0xFE1
  5729                           indf2	equ	0xFDF
  5730                           postinc2	equ	0xFDE
  5731                           postdec2	equ	0xFDD
  5732                           fsr2h	equ	0xFDA
  5733                           fsr2l	equ	0xFD9
  5734                           status	equ	0xFD8
  5735                           
  5736 ;; *************** function ___awmod *****************
  5737 ;; Defined at:
  5738 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;  dividend        2    0[BANK0 ] int 
  5741 ;;  divisor         2    2[BANK0 ] int 
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;  sign            1    5[BANK0 ] unsigned char 
  5744 ;;  counter         1    4[BANK0 ] unsigned char 
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  2    0[BANK0 ] int 
  5747 ;; Registers used:
  5748 ;;		wreg, status,2, status,0
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5754 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5757 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5758 ;;Total ram usage:        6 bytes
  5759 ;; Hardware stack levels used:    1
  5760 ;; Hardware stack levels required when called:    4
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		_fround
  5765 ;;		_scale
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           	psect	text6
  5770  004508                     __ptext6:
  5771                           	opt stack 0
  5772  004508                     ___awmod:
  5773                           	opt stack 24
  5774                           
  5775                           ;incstack = 0
  5776  004508  0E00               	movlw	0
  5777  00450A  0100               	movlb	0	; () banked
  5778  00450C  6F85               	movwf	___awmod@sign& (0+255),b
  5779                           
  5780                           ; BSR set to: 0
  5781  00450E  0100               	movlb	0	; () banked
  5782  004510  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
  5783  004512  D008               	goto	l4279
  5784                           
  5785                           ; BSR set to: 0
  5786  004514  0100               	movlb	0	; () banked
  5787  004516  6D80               	negf	___awmod@dividend& (0+255),b
  5788  004518  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  5789  00451A  B0D8               	btfsc	status,0,c
  5790  00451C  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  5791                           
  5792                           ; BSR set to: 0
  5793  00451E  0E01               	movlw	1
  5794  004520  0100               	movlb	0	; () banked
  5795  004522  6F85               	movwf	___awmod@sign& (0+255),b
  5796  004524                     l4279:
  5797                           
  5798                           ; BSR set to: 0
  5799  004524  0100               	movlb	0	; () banked
  5800  004526  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5801  004528  D005               	goto	l4283
  5802                           
  5803                           ; BSR set to: 0
  5804  00452A  0100               	movlb	0	; () banked
  5805  00452C  6D82               	negf	___awmod@divisor& (0+255),b
  5806  00452E  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  5807  004530  B0D8               	btfsc	status,0,c
  5808  004532  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  5809  004534                     l4283:
  5810                           
  5811                           ; BSR set to: 0
  5812  004534  0100               	movlb	0	; () banked
  5813  004536  5182               	movf	___awmod@divisor& (0+255),w,b
  5814  004538  0100               	movlb	0	; () banked
  5815  00453A  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  5816  00453C  B4D8               	btfsc	status,2,c
  5817  00453E  D026               	goto	l4299
  5818                           
  5819                           ; BSR set to: 0
  5820  004540  0E01               	movlw	1
  5821  004542  0100               	movlb	0	; () banked
  5822  004544  6F84               	movwf	___awmod@counter& (0+255),b
  5823  004546  D006               	goto	l4289
  5824  004548                     l4287:
  5825                           
  5826                           ; BSR set to: 0
  5827  004548  0100               	movlb	0	; () banked
  5828  00454A  90D8               	bcf	status,0,c
  5829  00454C  3782               	rlcf	___awmod@divisor& (0+255),f,b
  5830  00454E  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5831  004550  0100               	movlb	0	; () banked
  5832  004552  2B84               	incf	___awmod@counter& (0+255),f,b
  5833  004554                     l4289:
  5834                           
  5835                           ; BSR set to: 0
  5836  004554  0100               	movlb	0	; () banked
  5837  004556  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5838  004558  D7F7               	goto	l4287
  5839  00455A                     l4291:
  5840                           
  5841                           ; BSR set to: 0
  5842  00455A  0100               	movlb	0	; () banked
  5843  00455C  5182               	movf	___awmod@divisor& (0+255),w,b
  5844  00455E  0100               	movlb	0	; () banked
  5845  004560  5D80               	subwf	___awmod@dividend& (0+255),w,b
  5846  004562  0100               	movlb	0	; () banked
  5847  004564  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  5848  004566  0100               	movlb	0	; () banked
  5849  004568  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5850  00456A  A0D8               	btfss	status,0,c
  5851  00456C  D008               	goto	l4295
  5852                           
  5853                           ; BSR set to: 0
  5854  00456E  0100               	movlb	0	; () banked
  5855  004570  5182               	movf	___awmod@divisor& (0+255),w,b
  5856  004572  0100               	movlb	0	; () banked
  5857  004574  5F80               	subwf	___awmod@dividend& (0+255),f,b
  5858  004576  0100               	movlb	0	; () banked
  5859  004578  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  5860  00457A  0100               	movlb	0	; () banked
  5861  00457C  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5862  00457E                     l4295:
  5863                           
  5864                           ; BSR set to: 0
  5865  00457E  0100               	movlb	0	; () banked
  5866  004580  90D8               	bcf	status,0,c
  5867  004582  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5868  004584  3382               	rrcf	___awmod@divisor& (0+255),f,b
  5869                           
  5870                           ; BSR set to: 0
  5871  004586  0100               	movlb	0	; () banked
  5872  004588  2F84               	decfsz	___awmod@counter& (0+255),f,b
  5873  00458A  D7E7               	goto	l4291
  5874  00458C                     l4299:
  5875                           
  5876                           ; BSR set to: 0
  5877  00458C  0100               	movlb	0	; () banked
  5878  00458E  5185               	movf	___awmod@sign& (0+255),w,b
  5879  004590  0100               	movlb	0	; () banked
  5880  004592  B4D8               	btfsc	status,2,c
  5881  004594  D005               	goto	l4303
  5882                           
  5883                           ; BSR set to: 0
  5884  004596  0100               	movlb	0	; () banked
  5885  004598  6D80               	negf	___awmod@dividend& (0+255),b
  5886  00459A  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  5887  00459C  B0D8               	btfsc	status,0,c
  5888  00459E  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  5889  0045A0                     l4303:
  5890                           
  5891                           ; BSR set to: 0
  5892  0045A0  C080  F080         	movff	___awmod@dividend,?___awmod
  5893  0045A4  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  5894  0045A8  0012               	return	
  5895  0045AA                     __end_of___awmod:
  5896                           	opt stack 0
  5897                           tblptru	equ	0xFF8
  5898                           tblptrh	equ	0xFF7
  5899                           tblptrl	equ	0xFF6
  5900                           tablat	equ	0xFF5
  5901                           prodh	equ	0xFF4
  5902                           prodl	equ	0xFF3
  5903                           postinc0	equ	0xFEE
  5904                           wreg	equ	0xFE8
  5905                           indf1	equ	0xFE7
  5906                           postdec1	equ	0xFE5
  5907                           fsr1h	equ	0xFE2
  5908                           fsr1l	equ	0xFE1
  5909                           indf2	equ	0xFDF
  5910                           postinc2	equ	0xFDE
  5911                           postdec2	equ	0xFDD
  5912                           fsr2h	equ	0xFDA
  5913                           fsr2l	equ	0xFD9
  5914                           status	equ	0xFD8
  5915                           
  5916 ;; *************** function __tdiv_to_l_ *****************
  5917 ;; Defined at:
  5918 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  f1              4    0[BANK0 ] float 
  5921 ;;  f2              4    4[BANK0 ] float 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  quot            4   11[BANK0 ] unsigned long 
  5924 ;;  exp1            1   16[BANK0 ] unsigned char 
  5925 ;;  cntr            1   15[BANK0 ] unsigned char 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  4    0[BANK0 ] unsigned long 
  5928 ;; Registers used:
  5929 ;;		wreg, status,2, status,0
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5935 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;Total ram usage:       17 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    4
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_sprintf
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text7
  5950  0033AE                     __ptext7:
  5951                           	opt stack 0
  5952  0033AE                     __tdiv_to_l_:
  5953                           	opt stack 25
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;incstack = 0
  5957  0033AE  C082  F088         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5958  0033B2  0100               	movlb	0	; () banked
  5959  0033B4  6B89               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5960  0033B6  6B8A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5961  0033B8  0100               	movlb	0	; () banked
  5962  0033BA  3581               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5963  0033BC  0100               	movlb	0	; () banked
  5964  0033BE  3788               	rlcf	??__tdiv_to_l_& (0+255),f,b
  5965  0033C0  E301               	bnc	u6021
  5966  0033C2  8189               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  5967  0033C4                     u6021:
  5968  0033C4  0100               	movlb	0	; () banked
  5969  0033C6  5188               	movf	??__tdiv_to_l_& (0+255),w,b
  5970  0033C8  0100               	movlb	0	; () banked
  5971  0033CA  6F90               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5972  0033CC  0100               	movlb	0	; () banked
  5973  0033CE  5190               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5974  0033D0  A4D8               	btfss	status,2,c
  5975  0033D2  D00A               	goto	l4979
  5976                           
  5977                           ; BSR set to: 0
  5978  0033D4  0E00               	movlw	0
  5979  0033D6  0100               	movlb	0	; () banked
  5980  0033D8  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  5981  0033DA  0E00               	movlw	0
  5982  0033DC  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5983  0033DE  0E00               	movlw	0
  5984  0033E0  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5985  0033E2  0E00               	movlw	0
  5986  0033E4  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5987                           
  5988                           ; BSR set to: 0
  5989  0033E6  0012               	return	
  5990  0033E8                     l4979:
  5991                           
  5992                           ; BSR set to: 0
  5993  0033E8  C086  F088         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5994  0033EC  0100               	movlb	0	; () banked
  5995  0033EE  6B89               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5996  0033F0  6B8A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5997  0033F2  0100               	movlb	0	; () banked
  5998  0033F4  3585               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5999  0033F6  0100               	movlb	0	; () banked
  6000  0033F8  3788               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6001  0033FA  E301               	bnc	u6041
  6002  0033FC  8189               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6003  0033FE                     u6041:
  6004  0033FE  0100               	movlb	0	; () banked
  6005  003400  5188               	movf	??__tdiv_to_l_& (0+255),w,b
  6006  003402  0100               	movlb	0	; () banked
  6007  003404  6F8F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6008  003406  0100               	movlb	0	; () banked
  6009  003408  518F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6010  00340A  A4D8               	btfss	status,2,c
  6011  00340C  D00A               	goto	l4985
  6012                           
  6013                           ; BSR set to: 0
  6014  00340E  0E00               	movlw	0
  6015  003410  0100               	movlb	0	; () banked
  6016  003412  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  6017  003414  0E00               	movlw	0
  6018  003416  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6019  003418  0E00               	movlw	0
  6020  00341A  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6021  00341C  0E00               	movlw	0
  6022  00341E  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6023                           
  6024                           ; BSR set to: 0
  6025  003420  0012               	return	
  6026  003422                     l4985:
  6027                           
  6028                           ; BSR set to: 0
  6029  003422  0100               	movlb	0	; () banked
  6030  003424  8F81               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6031                           
  6032                           ; BSR set to: 0
  6033  003426  0EFF               	movlw	255
  6034  003428  0100               	movlb	0	; () banked
  6035  00342A  1780               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6036  00342C  0EFF               	movlw	255
  6037  00342E  0100               	movlb	0	; () banked
  6038  003430  1781               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6039  003432  0E00               	movlw	0
  6040  003434  0100               	movlb	0	; () banked
  6041  003436  1782               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6042  003438  0100               	movlb	0	; () banked
  6043  00343A  8F85               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6044                           
  6045                           ; BSR set to: 0
  6046  00343C  0EFF               	movlw	255
  6047  00343E  0100               	movlb	0	; () banked
  6048  003440  1784               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6049  003442  0EFF               	movlw	255
  6050  003444  0100               	movlb	0	; () banked
  6051  003446  1785               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6052  003448  0E00               	movlw	0
  6053  00344A  0100               	movlb	0	; () banked
  6054  00344C  1786               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6055                           
  6056                           ; BSR set to: 0
  6057  00344E  0E00               	movlw	0
  6058  003450  0100               	movlb	0	; () banked
  6059  003452  6F8B               	movwf	__tdiv_to_l_@quot& (0+255),b
  6060  003454  0E00               	movlw	0
  6061  003456  6F8C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6062  003458  0E00               	movlw	0
  6063  00345A  6F8D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6064  00345C  0E00               	movlw	0
  6065  00345E  6F8E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6066                           
  6067                           ; BSR set to: 0
  6068  003460  0E7F               	movlw	127
  6069  003462  0100               	movlb	0	; () banked
  6070  003464  5F90               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6071                           
  6072                           ; BSR set to: 0
  6073  003466  0100               	movlb	0	; () banked
  6074  003468  518F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6075  00346A  0F98               	addlw	152
  6076  00346C  0100               	movlb	0	; () banked
  6077  00346E  5F90               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6078                           
  6079                           ; BSR set to: 0
  6080  003470  0E18               	movlw	24
  6081  003472  0100               	movlb	0	; () banked
  6082  003474  6F8F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6083  003476                     l813:
  6084                           
  6085                           ; BSR set to: 0
  6086  003476  0100               	movlb	0	; () banked
  6087  003478  90D8               	bcf	status,0,c
  6088  00347A  378B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6089  00347C  378C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6090  00347E  378D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6091  003480  378E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6092                           
  6093                           ; BSR set to: 0
  6094  003482  0100               	movlb	0	; () banked
  6095  003484  5184               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6096  003486  0100               	movlb	0	; () banked
  6097  003488  5D80               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6098  00348A  0100               	movlb	0	; () banked
  6099  00348C  5185               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6100  00348E  0100               	movlb	0	; () banked
  6101  003490  5981               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6102  003492  0100               	movlb	0	; () banked
  6103  003494  5186               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6104  003496  0100               	movlb	0	; () banked
  6105  003498  5982               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6106  00349A  A0D8               	btfss	status,0,c
  6107  00349C  D00E               	goto	l814
  6108                           
  6109                           ; BSR set to: 0
  6110  00349E  0100               	movlb	0	; () banked
  6111  0034A0  5184               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6112  0034A2  0100               	movlb	0	; () banked
  6113  0034A4  5F80               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6114  0034A6  0100               	movlb	0	; () banked
  6115  0034A8  5185               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6116  0034AA  0100               	movlb	0	; () banked
  6117  0034AC  5B81               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6118  0034AE  0100               	movlb	0	; () banked
  6119  0034B0  5186               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6120  0034B2  0100               	movlb	0	; () banked
  6121  0034B4  5B82               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6122                           
  6123                           ; BSR set to: 0
  6124  0034B6  0100               	movlb	0	; () banked
  6125  0034B8  818B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6126  0034BA                     l814:
  6127                           
  6128                           ; BSR set to: 0
  6129  0034BA  0100               	movlb	0	; () banked
  6130  0034BC  90D8               	bcf	status,0,c
  6131  0034BE  3780               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6132  0034C0  3781               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6133  0034C2  3782               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6134                           
  6135                           ; BSR set to: 0
  6136  0034C4  0100               	movlb	0	; () banked
  6137  0034C6  2F8F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6138  0034C8  D7D6               	goto	l813
  6139                           
  6140                           ; BSR set to: 0
  6141                           
  6142                           ; BSR set to: 0
  6143  0034CA  0100               	movlb	0	; () banked
  6144  0034CC  AF90               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6145  0034CE  D01A               	goto	l5019
  6146                           
  6147                           ; BSR set to: 0
  6148  0034D0  0100               	movlb	0	; () banked
  6149  0034D2  5190               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6150  0034D4  0A80               	xorlw	128
  6151  0034D6  0F97               	addlw	151
  6152  0034D8  B0D8               	btfsc	status,0,c
  6153  0034DA  D00A               	goto	l5015
  6154                           
  6155                           ; BSR set to: 0
  6156  0034DC  0E00               	movlw	0
  6157  0034DE  0100               	movlb	0	; () banked
  6158  0034E0  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  6159  0034E2  0E00               	movlw	0
  6160  0034E4  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6161  0034E6  0E00               	movlw	0
  6162  0034E8  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6163  0034EA  0E00               	movlw	0
  6164  0034EC  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6165                           
  6166                           ; BSR set to: 0
  6167  0034EE  0012               	return	
  6168  0034F0                     l5015:
  6169                           
  6170                           ; BSR set to: 0
  6171  0034F0  0100               	movlb	0	; () banked
  6172  0034F2  90D8               	bcf	status,0,c
  6173  0034F4  338E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6174  0034F6  338D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6175  0034F8  338C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6176  0034FA  338B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6177                           
  6178                           ; BSR set to: 0
  6179  0034FC  0100               	movlb	0	; () banked
  6180  0034FE  3F90               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6181  003500  D7F7               	goto	l5015
  6182                           
  6183                           ; BSR set to: 0
  6184  003502  D01B               	goto	l820
  6185  003504                     l5019:
  6186                           
  6187                           ; BSR set to: 0
  6188  003504  0E17               	movlw	23
  6189  003506  0100               	movlb	0	; () banked
  6190  003508  6590               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6191  00350A  D012               	goto	l5027
  6192                           
  6193                           ; BSR set to: 0
  6194  00350C  0E00               	movlw	0
  6195  00350E  0100               	movlb	0	; () banked
  6196  003510  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  6197  003512  0E00               	movlw	0
  6198  003514  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6199  003516  0E00               	movlw	0
  6200  003518  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6201  00351A  0E00               	movlw	0
  6202  00351C  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6203                           
  6204                           ; BSR set to: 0
  6205  00351E  0012               	return	
  6206  003520                     l5025:
  6207                           
  6208                           ; BSR set to: 0
  6209  003520  0100               	movlb	0	; () banked
  6210  003522  90D8               	bcf	status,0,c
  6211  003524  378B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6212  003526  378C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6213  003528  378D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6214  00352A  378E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6215  00352C  0100               	movlb	0	; () banked
  6216  00352E  0790               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6217  003530                     l5027:
  6218                           
  6219                           ; BSR set to: 0
  6220  003530  0100               	movlb	0	; () banked
  6221  003532  5190               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6222  003534  0100               	movlb	0	; () banked
  6223  003536  A4D8               	btfss	status,2,c
  6224  003538  D7F3               	goto	l5025
  6225  00353A                     l820:
  6226                           
  6227                           ; BSR set to: 0
  6228  00353A  C08B  F080         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6229  00353E  C08C  F081         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6230  003542  C08D  F082         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6231  003546  C08E  F083         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6232                           
  6233                           ; BSR set to: 0
  6234  00354A  0012               	return		;funcret
  6235  00354C                     __end_of__tdiv_to_l_:
  6236                           	opt stack 0
  6237                           tblptru	equ	0xFF8
  6238                           tblptrh	equ	0xFF7
  6239                           tblptrl	equ	0xFF6
  6240                           tablat	equ	0xFF5
  6241                           prodh	equ	0xFF4
  6242                           prodl	equ	0xFF3
  6243                           postinc0	equ	0xFEE
  6244                           wreg	equ	0xFE8
  6245                           indf1	equ	0xFE7
  6246                           postdec1	equ	0xFE5
  6247                           fsr1h	equ	0xFE2
  6248                           fsr1l	equ	0xFE1
  6249                           indf2	equ	0xFDF
  6250                           postinc2	equ	0xFDE
  6251                           postdec2	equ	0xFDD
  6252                           fsr2h	equ	0xFDA
  6253                           fsr2l	equ	0xFD9
  6254                           status	equ	0xFD8
  6255                           
  6256 ;; *************** function __div_to_l_ *****************
  6257 ;; Defined at:
  6258 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;  f1              4    0[BANK0 ] unsigned long 
  6261 ;;  f2              4    4[BANK0 ] unsigned long 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  quot            4    8[BANK0 ] unsigned long 
  6264 ;;  exp1            1   13[BANK0 ] unsigned char 
  6265 ;;  cntr            1   12[BANK0 ] unsigned char 
  6266 ;; Return value:  Size  Location     Type
  6267 ;;                  4    0[BANK0 ] unsigned long 
  6268 ;; Registers used:
  6269 ;;		wreg, status,2, status,0
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6275 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6276 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6279 ;;Total ram usage:       14 bytes
  6280 ;; Hardware stack levels used:    1
  6281 ;; Hardware stack levels required when called:    4
  6282 ;; This function calls:
  6283 ;;		Nothing
  6284 ;; This function is called by:
  6285 ;;		_sprintf
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text8
  6290  0036DC                     __ptext8:
  6291                           	opt stack 0
  6292  0036DC                     __div_to_l_:
  6293                           	opt stack 25
  6294                           
  6295                           ; BSR set to: 0
  6296                           ;incstack = 0
  6297  0036DC  0100               	movlb	0	; () banked
  6298  0036DE  3582               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6299  0036E0  3583               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6300  0036E2  0100               	movlb	0	; () banked
  6301  0036E4  6F8D               	movwf	__div_to_l_@exp1& (0+255),b
  6302  0036E6  0100               	movlb	0	; () banked
  6303  0036E8  518D               	movf	__div_to_l_@exp1& (0+255),w,b
  6304  0036EA  A4D8               	btfss	status,2,c
  6305  0036EC  D00A               	goto	l5035
  6306                           
  6307                           ; BSR set to: 0
  6308  0036EE  0E00               	movlw	0
  6309  0036F0  0100               	movlb	0	; () banked
  6310  0036F2  6F80               	movwf	?__div_to_l_& (0+255),b
  6311  0036F4  0E00               	movlw	0
  6312  0036F6  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  6313  0036F8  0E00               	movlw	0
  6314  0036FA  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  6315  0036FC  0E00               	movlw	0
  6316  0036FE  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  6317                           
  6318                           ; BSR set to: 0
  6319  003700  0012               	return	
  6320  003702                     l5035:
  6321                           
  6322                           ; BSR set to: 0
  6323  003702  0100               	movlb	0	; () banked
  6324  003704  3586               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6325  003706  3587               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6326  003708  0100               	movlb	0	; () banked
  6327  00370A  6F8C               	movwf	__div_to_l_@cntr& (0+255),b
  6328  00370C  0100               	movlb	0	; () banked
  6329  00370E  518C               	movf	__div_to_l_@cntr& (0+255),w,b
  6330  003710  A4D8               	btfss	status,2,c
  6331  003712  D00A               	goto	l5041
  6332                           
  6333                           ; BSR set to: 0
  6334  003714  0E00               	movlw	0
  6335  003716  0100               	movlb	0	; () banked
  6336  003718  6F80               	movwf	?__div_to_l_& (0+255),b
  6337  00371A  0E00               	movlw	0
  6338  00371C  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  6339  00371E  0E00               	movlw	0
  6340  003720  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  6341  003722  0E00               	movlw	0
  6342  003724  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  6343                           
  6344                           ; BSR set to: 0
  6345  003726  0012               	return	
  6346  003728                     l5041:
  6347                           
  6348                           ; BSR set to: 0
  6349  003728  0100               	movlb	0	; () banked
  6350  00372A  8F82               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6351                           
  6352                           ; BSR set to: 0
  6353  00372C  0EFF               	movlw	255
  6354  00372E  0100               	movlb	0	; () banked
  6355  003730  1780               	andwf	__div_to_l_@f1& (0+255),f,b
  6356  003732  0EFF               	movlw	255
  6357  003734  1781               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6358  003736  0EFF               	movlw	255
  6359  003738  1782               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6360  00373A  0E00               	movlw	0
  6361  00373C  1783               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6362                           
  6363                           ; BSR set to: 0
  6364  00373E  0100               	movlb	0	; () banked
  6365  003740  8F86               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6366  003742  0EFF               	movlw	255
  6367  003744  0100               	movlb	0	; () banked
  6368  003746  1784               	andwf	__div_to_l_@f2& (0+255),f,b
  6369  003748  0EFF               	movlw	255
  6370  00374A  1785               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6371  00374C  0EFF               	movlw	255
  6372  00374E  1786               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6373  003750  0E00               	movlw	0
  6374  003752  1787               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6375                           
  6376                           ; BSR set to: 0
  6377  003754  0E00               	movlw	0
  6378  003756  0100               	movlb	0	; () banked
  6379  003758  6F88               	movwf	__div_to_l_@quot& (0+255),b
  6380  00375A  0E00               	movlw	0
  6381  00375C  6F89               	movwf	(__div_to_l_@quot+1)& (0+255),b
  6382  00375E  0E00               	movlw	0
  6383  003760  6F8A               	movwf	(__div_to_l_@quot+2)& (0+255),b
  6384  003762  0E00               	movlw	0
  6385  003764  6F8B               	movwf	(__div_to_l_@quot+3)& (0+255),b
  6386                           
  6387                           ; BSR set to: 0
  6388  003766  0E7F               	movlw	127
  6389  003768  0100               	movlb	0	; () banked
  6390  00376A  5F8D               	subwf	__div_to_l_@exp1& (0+255),f,b
  6391                           
  6392                           ; BSR set to: 0
  6393  00376C  0100               	movlb	0	; () banked
  6394  00376E  518C               	movf	__div_to_l_@cntr& (0+255),w,b
  6395  003770  0FA0               	addlw	160
  6396  003772  0100               	movlb	0	; () banked
  6397  003774  5F8D               	subwf	__div_to_l_@exp1& (0+255),f,b
  6398                           
  6399                           ; BSR set to: 0
  6400  003776  0E20               	movlw	32
  6401  003778  0100               	movlb	0	; () banked
  6402  00377A  6F8C               	movwf	__div_to_l_@cntr& (0+255),b
  6403  00377C                     l5055:
  6404                           
  6405                           ; BSR set to: 0
  6406  00377C  0100               	movlb	0	; () banked
  6407  00377E  90D8               	bcf	status,0,c
  6408  003780  3788               	rlcf	__div_to_l_@quot& (0+255),f,b
  6409  003782  3789               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6410  003784  378A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6411  003786  378B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6412                           
  6413                           ; BSR set to: 0
  6414  003788  0100               	movlb	0	; () banked
  6415  00378A  5184               	movf	__div_to_l_@f2& (0+255),w,b
  6416  00378C  0100               	movlb	0	; () banked
  6417  00378E  5D80               	subwf	__div_to_l_@f1& (0+255),w,b
  6418  003790  0100               	movlb	0	; () banked
  6419  003792  5185               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6420  003794  0100               	movlb	0	; () banked
  6421  003796  5981               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6422  003798  0100               	movlb	0	; () banked
  6423  00379A  5186               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6424  00379C  0100               	movlb	0	; () banked
  6425  00379E  5982               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  6426  0037A0  0100               	movlb	0	; () banked
  6427  0037A2  5187               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6428  0037A4  0100               	movlb	0	; () banked
  6429  0037A6  5983               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  6430  0037A8  A0D8               	btfss	status,0,c
  6431  0037AA  D012               	goto	l5063
  6432                           
  6433                           ; BSR set to: 0
  6434  0037AC  0100               	movlb	0	; () banked
  6435  0037AE  5184               	movf	__div_to_l_@f2& (0+255),w,b
  6436  0037B0  0100               	movlb	0	; () banked
  6437  0037B2  5F80               	subwf	__div_to_l_@f1& (0+255),f,b
  6438  0037B4  0100               	movlb	0	; () banked
  6439  0037B6  5185               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6440  0037B8  0100               	movlb	0	; () banked
  6441  0037BA  5B81               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6442  0037BC  0100               	movlb	0	; () banked
  6443  0037BE  5186               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6444  0037C0  0100               	movlb	0	; () banked
  6445  0037C2  5B82               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6446  0037C4  0100               	movlb	0	; () banked
  6447  0037C6  5187               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6448  0037C8  0100               	movlb	0	; () banked
  6449  0037CA  5B83               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6450                           
  6451                           ; BSR set to: 0
  6452  0037CC  0100               	movlb	0	; () banked
  6453  0037CE  8188               	bsf	__div_to_l_@quot& (0+255),0,b
  6454  0037D0                     l5063:
  6455                           
  6456                           ; BSR set to: 0
  6457  0037D0  0100               	movlb	0	; () banked
  6458  0037D2  90D8               	bcf	status,0,c
  6459  0037D4  3780               	rlcf	__div_to_l_@f1& (0+255),f,b
  6460  0037D6  3781               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  6461  0037D8  3782               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  6462  0037DA  3783               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  6463                           
  6464                           ; BSR set to: 0
  6465  0037DC  0100               	movlb	0	; () banked
  6466  0037DE  2F8C               	decfsz	__div_to_l_@cntr& (0+255),f,b
  6467  0037E0  D7CD               	goto	l5055
  6468                           
  6469                           ; BSR set to: 0
  6470                           
  6471                           ; BSR set to: 0
  6472  0037E2  0100               	movlb	0	; () banked
  6473  0037E4  AF8D               	btfss	__div_to_l_@exp1& (0+255),7,b
  6474  0037E6  D01A               	goto	l5079
  6475                           
  6476                           ; BSR set to: 0
  6477  0037E8  0100               	movlb	0	; () banked
  6478  0037EA  518D               	movf	__div_to_l_@exp1& (0+255),w,b
  6479  0037EC  0A80               	xorlw	128
  6480  0037EE  0F9F               	addlw	159
  6481  0037F0  B0D8               	btfsc	status,0,c
  6482  0037F2  D00A               	goto	l5075
  6483                           
  6484                           ; BSR set to: 0
  6485  0037F4  0E00               	movlw	0
  6486  0037F6  0100               	movlb	0	; () banked
  6487  0037F8  6F80               	movwf	?__div_to_l_& (0+255),b
  6488  0037FA  0E00               	movlw	0
  6489  0037FC  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  6490  0037FE  0E00               	movlw	0
  6491  003800  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  6492  003802  0E00               	movlw	0
  6493  003804  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  6494                           
  6495                           ; BSR set to: 0
  6496  003806  0012               	return	
  6497  003808                     l5075:
  6498                           
  6499                           ; BSR set to: 0
  6500  003808  0100               	movlb	0	; () banked
  6501  00380A  90D8               	bcf	status,0,c
  6502  00380C  338B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  6503  00380E  338A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  6504  003810  3389               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  6505  003812  3388               	rrcf	__div_to_l_@quot& (0+255),f,b
  6506                           
  6507                           ; BSR set to: 0
  6508  003814  0100               	movlb	0	; () banked
  6509  003816  3F8D               	incfsz	__div_to_l_@exp1& (0+255),f,b
  6510  003818  D7F7               	goto	l5075
  6511                           
  6512                           ; BSR set to: 0
  6513  00381A  D01B               	goto	l716
  6514  00381C                     l5079:
  6515                           
  6516                           ; BSR set to: 0
  6517  00381C  0E1F               	movlw	31
  6518  00381E  0100               	movlb	0	; () banked
  6519  003820  658D               	cpfsgt	__div_to_l_@exp1& (0+255),b
  6520  003822  D012               	goto	l5087
  6521                           
  6522                           ; BSR set to: 0
  6523  003824  0E00               	movlw	0
  6524  003826  0100               	movlb	0	; () banked
  6525  003828  6F80               	movwf	?__div_to_l_& (0+255),b
  6526  00382A  0E00               	movlw	0
  6527  00382C  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  6528  00382E  0E00               	movlw	0
  6529  003830  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  6530  003832  0E00               	movlw	0
  6531  003834  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  6532                           
  6533                           ; BSR set to: 0
  6534  003836  0012               	return	
  6535  003838                     l5085:
  6536                           
  6537                           ; BSR set to: 0
  6538  003838  0100               	movlb	0	; () banked
  6539  00383A  90D8               	bcf	status,0,c
  6540  00383C  3788               	rlcf	__div_to_l_@quot& (0+255),f,b
  6541  00383E  3789               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6542  003840  378A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6543  003842  378B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6544  003844  0100               	movlb	0	; () banked
  6545  003846  078D               	decf	__div_to_l_@exp1& (0+255),f,b
  6546  003848                     l5087:
  6547                           
  6548                           ; BSR set to: 0
  6549  003848  0100               	movlb	0	; () banked
  6550  00384A  518D               	movf	__div_to_l_@exp1& (0+255),w,b
  6551  00384C  0100               	movlb	0	; () banked
  6552  00384E  A4D8               	btfss	status,2,c
  6553  003850  D7F3               	goto	l5085
  6554  003852                     l716:
  6555                           
  6556                           ; BSR set to: 0
  6557  003852  C088  F080         	movff	__div_to_l_@quot,?__div_to_l_
  6558  003856  C089  F081         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6559  00385A  C08A  F082         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6560  00385E  C08B  F083         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6561                           
  6562                           ; BSR set to: 0
  6563  003862  0012               	return		;funcret
  6564  003864                     __end_of__div_to_l_:
  6565                           	opt stack 0
  6566                           tblptru	equ	0xFF8
  6567                           tblptrh	equ	0xFF7
  6568                           tblptrl	equ	0xFF6
  6569                           tablat	equ	0xFF5
  6570                           prodh	equ	0xFF4
  6571                           prodl	equ	0xFF3
  6572                           postinc0	equ	0xFEE
  6573                           wreg	equ	0xFE8
  6574                           indf1	equ	0xFE7
  6575                           postdec1	equ	0xFE5
  6576                           fsr1h	equ	0xFE2
  6577                           fsr1l	equ	0xFE1
  6578                           indf2	equ	0xFDF
  6579                           postinc2	equ	0xFDE
  6580                           postdec2	equ	0xFDD
  6581                           fsr2h	equ	0xFDA
  6582                           fsr2l	equ	0xFD9
  6583                           status	equ	0xFD8
  6584                           
  6585 ;; *************** function ___llmod *****************
  6586 ;; Defined at:
  6587 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;  dividend        4   13[BANK0 ] unsigned long 
  6590 ;;  divisor         4   17[BANK0 ] unsigned long 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;  counter         1   21[BANK0 ] unsigned char 
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  4   13[BANK0 ] unsigned long 
  6595 ;; Registers used:
  6596 ;;		wreg, status,2, status,0
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6602 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;Total ram usage:        9 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:    4
  6609 ;; This function calls:
  6610 ;;		Nothing
  6611 ;; This function is called by:
  6612 ;;		_sprintf
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text9
  6617  0045AA                     __ptext9:
  6618                           	opt stack 0
  6619  0045AA                     ___llmod:
  6620                           	opt stack 25
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;incstack = 0
  6624  0045AA  0100               	movlb	0	; () banked
  6625  0045AC  5191               	movf	___llmod@divisor& (0+255),w,b
  6626  0045AE  0100               	movlb	0	; () banked
  6627  0045B0  1192               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  6628  0045B2  0100               	movlb	0	; () banked
  6629  0045B4  1193               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  6630  0045B6  0100               	movlb	0	; () banked
  6631  0045B8  1194               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  6632  0045BA  B4D8               	btfsc	status,2,c
  6633  0045BC  D03A               	goto	l905
  6634                           
  6635                           ; BSR set to: 0
  6636  0045BE  0E01               	movlw	1
  6637  0045C0  0100               	movlb	0	; () banked
  6638  0045C2  6F95               	movwf	___llmod@counter& (0+255),b
  6639  0045C4  D008               	goto	l5159
  6640  0045C6                     l5157:
  6641                           
  6642                           ; BSR set to: 0
  6643  0045C6  0100               	movlb	0	; () banked
  6644  0045C8  90D8               	bcf	status,0,c
  6645  0045CA  3791               	rlcf	___llmod@divisor& (0+255),f,b
  6646  0045CC  3792               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  6647  0045CE  3793               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  6648  0045D0  3794               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  6649  0045D2  0100               	movlb	0	; () banked
  6650  0045D4  2B95               	incf	___llmod@counter& (0+255),f,b
  6651  0045D6                     l5159:
  6652                           
  6653                           ; BSR set to: 0
  6654  0045D6  0100               	movlb	0	; () banked
  6655  0045D8  AF94               	btfss	(___llmod@divisor+3)& (0+255),7,b
  6656  0045DA  D7F5               	goto	l5157
  6657  0045DC                     l5161:
  6658                           
  6659                           ; BSR set to: 0
  6660  0045DC  0100               	movlb	0	; () banked
  6661  0045DE  5191               	movf	___llmod@divisor& (0+255),w,b
  6662  0045E0  0100               	movlb	0	; () banked
  6663  0045E2  5D8D               	subwf	___llmod@dividend& (0+255),w,b
  6664  0045E4  0100               	movlb	0	; () banked
  6665  0045E6  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
  6666  0045E8  0100               	movlb	0	; () banked
  6667  0045EA  598E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  6668  0045EC  0100               	movlb	0	; () banked
  6669  0045EE  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
  6670  0045F0  0100               	movlb	0	; () banked
  6671  0045F2  598F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  6672  0045F4  0100               	movlb	0	; () banked
  6673  0045F6  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
  6674  0045F8  0100               	movlb	0	; () banked
  6675  0045FA  5990               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  6676  0045FC  A0D8               	btfss	status,0,c
  6677  0045FE  D010               	goto	l5165
  6678                           
  6679                           ; BSR set to: 0
  6680  004600  0100               	movlb	0	; () banked
  6681  004602  5191               	movf	___llmod@divisor& (0+255),w,b
  6682  004604  0100               	movlb	0	; () banked
  6683  004606  5F8D               	subwf	___llmod@dividend& (0+255),f,b
  6684  004608  0100               	movlb	0	; () banked
  6685  00460A  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
  6686  00460C  0100               	movlb	0	; () banked
  6687  00460E  5B8E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  6688  004610  0100               	movlb	0	; () banked
  6689  004612  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
  6690  004614  0100               	movlb	0	; () banked
  6691  004616  5B8F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  6692  004618  0100               	movlb	0	; () banked
  6693  00461A  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
  6694  00461C  0100               	movlb	0	; () banked
  6695  00461E  5B90               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  6696  004620                     l5165:
  6697                           
  6698                           ; BSR set to: 0
  6699  004620  0100               	movlb	0	; () banked
  6700  004622  90D8               	bcf	status,0,c
  6701  004624  3394               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  6702  004626  3393               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  6703  004628  3392               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  6704  00462A  3391               	rrcf	___llmod@divisor& (0+255),f,b
  6705                           
  6706                           ; BSR set to: 0
  6707  00462C  0100               	movlb	0	; () banked
  6708  00462E  2F95               	decfsz	___llmod@counter& (0+255),f,b
  6709  004630  D7D5               	goto	l5161
  6710  004632                     l905:
  6711                           
  6712                           ; BSR set to: 0
  6713  004632  C08D  F08D         	movff	___llmod@dividend,?___llmod
  6714  004636  C08E  F08E         	movff	___llmod@dividend+1,?___llmod+1
  6715  00463A  C08F  F08F         	movff	___llmod@dividend+2,?___llmod+2
  6716  00463E  C090  F090         	movff	___llmod@dividend+3,?___llmod+3
  6717                           
  6718                           ; BSR set to: 0
  6719  004642  0012               	return		;funcret
  6720  004644                     __end_of___llmod:
  6721                           	opt stack 0
  6722                           tblptru	equ	0xFF8
  6723                           tblptrh	equ	0xFF7
  6724                           tblptrl	equ	0xFF6
  6725                           tablat	equ	0xFF5
  6726                           prodh	equ	0xFF4
  6727                           prodl	equ	0xFF3
  6728                           postinc0	equ	0xFEE
  6729                           wreg	equ	0xFE8
  6730                           indf1	equ	0xFE7
  6731                           postdec1	equ	0xFE5
  6732                           fsr1h	equ	0xFE2
  6733                           fsr1l	equ	0xFE1
  6734                           indf2	equ	0xFDF
  6735                           postinc2	equ	0xFDE
  6736                           postdec2	equ	0xFDD
  6737                           fsr2h	equ	0xFDA
  6738                           fsr2l	equ	0xFD9
  6739                           status	equ	0xFD8
  6740                           
  6741 ;; *************** function ___lldiv *****************
  6742 ;; Defined at:
  6743 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;  dividend        4    0[BANK0 ] unsigned long 
  6746 ;;  divisor         4    4[BANK0 ] unsigned long 
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;  quotient        4    8[BANK0 ] unsigned long 
  6749 ;;  counter         1   12[BANK0 ] unsigned char 
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  4    0[BANK0 ] unsigned long 
  6752 ;; Registers used:
  6753 ;;		wreg, status,2, status,0
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6759 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6760 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6762 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6763 ;;Total ram usage:       13 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    4
  6766 ;; This function calls:
  6767 ;;		Nothing
  6768 ;; This function is called by:
  6769 ;;		_sprintf
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text10
  6774  0042E0                     __ptext10:
  6775                           	opt stack 0
  6776  0042E0                     ___lldiv:
  6777                           	opt stack 25
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;incstack = 0
  6781  0042E0  0E00               	movlw	0
  6782  0042E2  0100               	movlb	0	; () banked
  6783  0042E4  6F88               	movwf	___lldiv@quotient& (0+255),b
  6784  0042E6  0E00               	movlw	0
  6785  0042E8  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
  6786  0042EA  0E00               	movlw	0
  6787  0042EC  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
  6788  0042EE  0E00               	movlw	0
  6789  0042F0  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
  6790                           
  6791                           ; BSR set to: 0
  6792  0042F2  0100               	movlb	0	; () banked
  6793  0042F4  5184               	movf	___lldiv@divisor& (0+255),w,b
  6794  0042F6  0100               	movlb	0	; () banked
  6795  0042F8  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6796  0042FA  0100               	movlb	0	; () banked
  6797  0042FC  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6798  0042FE  0100               	movlb	0	; () banked
  6799  004300  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6800  004302  B4D8               	btfsc	status,2,c
  6801  004304  D042               	goto	l895
  6802                           
  6803                           ; BSR set to: 0
  6804  004306  0E01               	movlw	1
  6805  004308  0100               	movlb	0	; () banked
  6806  00430A  6F8C               	movwf	___lldiv@counter& (0+255),b
  6807  00430C  D008               	goto	l5139
  6808  00430E                     l5137:
  6809                           
  6810                           ; BSR set to: 0
  6811  00430E  0100               	movlb	0	; () banked
  6812  004310  90D8               	bcf	status,0,c
  6813  004312  3784               	rlcf	___lldiv@divisor& (0+255),f,b
  6814  004314  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6815  004316  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6816  004318  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6817  00431A  0100               	movlb	0	; () banked
  6818  00431C  2B8C               	incf	___lldiv@counter& (0+255),f,b
  6819  00431E                     l5139:
  6820                           
  6821                           ; BSR set to: 0
  6822  00431E  0100               	movlb	0	; () banked
  6823  004320  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6824  004322  D7F5               	goto	l5137
  6825  004324                     l5141:
  6826                           
  6827                           ; BSR set to: 0
  6828  004324  0100               	movlb	0	; () banked
  6829  004326  90D8               	bcf	status,0,c
  6830  004328  3788               	rlcf	___lldiv@quotient& (0+255),f,b
  6831  00432A  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6832  00432C  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6833  00432E  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6834                           
  6835                           ; BSR set to: 0
  6836  004330  0100               	movlb	0	; () banked
  6837  004332  5184               	movf	___lldiv@divisor& (0+255),w,b
  6838  004334  0100               	movlb	0	; () banked
  6839  004336  5D80               	subwf	___lldiv@dividend& (0+255),w,b
  6840  004338  0100               	movlb	0	; () banked
  6841  00433A  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6842  00433C  0100               	movlb	0	; () banked
  6843  00433E  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6844  004340  0100               	movlb	0	; () banked
  6845  004342  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6846  004344  0100               	movlb	0	; () banked
  6847  004346  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6848  004348  0100               	movlb	0	; () banked
  6849  00434A  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6850  00434C  0100               	movlb	0	; () banked
  6851  00434E  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6852  004350  A0D8               	btfss	status,0,c
  6853  004352  D012               	goto	l5149
  6854                           
  6855                           ; BSR set to: 0
  6856  004354  0100               	movlb	0	; () banked
  6857  004356  5184               	movf	___lldiv@divisor& (0+255),w,b
  6858  004358  0100               	movlb	0	; () banked
  6859  00435A  5F80               	subwf	___lldiv@dividend& (0+255),f,b
  6860  00435C  0100               	movlb	0	; () banked
  6861  00435E  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6862  004360  0100               	movlb	0	; () banked
  6863  004362  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6864  004364  0100               	movlb	0	; () banked
  6865  004366  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6866  004368  0100               	movlb	0	; () banked
  6867  00436A  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6868  00436C  0100               	movlb	0	; () banked
  6869  00436E  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6870  004370  0100               	movlb	0	; () banked
  6871  004372  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6872                           
  6873                           ; BSR set to: 0
  6874  004374  0100               	movlb	0	; () banked
  6875  004376  8188               	bsf	___lldiv@quotient& (0+255),0,b
  6876  004378                     l5149:
  6877                           
  6878                           ; BSR set to: 0
  6879  004378  0100               	movlb	0	; () banked
  6880  00437A  90D8               	bcf	status,0,c
  6881  00437C  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6882  00437E  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6883  004380  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6884  004382  3384               	rrcf	___lldiv@divisor& (0+255),f,b
  6885                           
  6886                           ; BSR set to: 0
  6887  004384  0100               	movlb	0	; () banked
  6888  004386  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
  6889  004388  D7CD               	goto	l5141
  6890  00438A                     l895:
  6891                           
  6892                           ; BSR set to: 0
  6893  00438A  C088  F080         	movff	___lldiv@quotient,?___lldiv
  6894  00438E  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
  6895  004392  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
  6896  004396  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
  6897                           
  6898                           ; BSR set to: 0
  6899  00439A  0012               	return		;funcret
  6900  00439C                     __end_of___lldiv:
  6901                           	opt stack 0
  6902                           tblptru	equ	0xFF8
  6903                           tblptrh	equ	0xFF7
  6904                           tblptrl	equ	0xFF6
  6905                           tablat	equ	0xFF5
  6906                           prodh	equ	0xFF4
  6907                           prodl	equ	0xFF3
  6908                           postinc0	equ	0xFEE
  6909                           wreg	equ	0xFE8
  6910                           indf1	equ	0xFE7
  6911                           postdec1	equ	0xFE5
  6912                           fsr1h	equ	0xFE2
  6913                           fsr1l	equ	0xFE1
  6914                           indf2	equ	0xFDF
  6915                           postinc2	equ	0xFDE
  6916                           postdec2	equ	0xFDD
  6917                           fsr2h	equ	0xFDA
  6918                           fsr2l	equ	0xFD9
  6919                           status	equ	0xFD8
  6920                           
  6921 ;; *************** function ___flsub *****************
  6922 ;; Defined at:
  6923 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  b               4   72[BANK0 ] unsigned long 
  6926 ;;  a               4   76[BANK0 ] unsigned long 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;		None
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  4   72[BANK0 ] unsigned long 
  6931 ;; Registers used:
  6932 ;;		wreg, status,2, status,0, cstack
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6938 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6941 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;Total ram usage:        8 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; Hardware stack levels required when called:    5
  6945 ;; This function calls:
  6946 ;;		___fladd
  6947 ;; This function is called by:
  6948 ;;		_sprintf
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text11
  6953  004C12                     __ptext11:
  6954                           	opt stack 0
  6955  004C12                     ___flsub:
  6956                           	opt stack 24
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;incstack = 0
  6960  004C12  0E00               	movlw	0
  6961  004C14  0100               	movlb	0	; () banked
  6962  004C16  1BCC               	xorwf	___flsub@a& (0+255),f,b
  6963  004C18  0E00               	movlw	0
  6964  004C1A  1BCD               	xorwf	(___flsub@a+1)& (0+255),f,b
  6965  004C1C  0E00               	movlw	0
  6966  004C1E  1BCE               	xorwf	(___flsub@a+2)& (0+255),f,b
  6967  004C20  0E80               	movlw	128
  6968  004C22  1BCF               	xorwf	(___flsub@a+3)& (0+255),f,b
  6969                           
  6970                           ; BSR set to: 0
  6971  004C24  C0C8  F0B4         	movff	___flsub@b,___fladd@b
  6972  004C28  C0C9  F0B5         	movff	___flsub@b+1,___fladd@b+1
  6973  004C2C  C0CA  F0B6         	movff	___flsub@b+2,___fladd@b+2
  6974  004C30  C0CB  F0B7         	movff	___flsub@b+3,___fladd@b+3
  6975  004C34  C0CC  F0B8         	movff	___flsub@a,___fladd@a
  6976  004C38  C0CD  F0B9         	movff	___flsub@a+1,___fladd@a+1
  6977  004C3C  C0CE  F0BA         	movff	___flsub@a+2,___fladd@a+2
  6978  004C40  C0CF  F0BB         	movff	___flsub@a+3,___fladd@a+3
  6979  004C44  EC4E  F00C         	call	___fladd	;wreg free
  6980  004C48  C0B4  F0C8         	movff	?___fladd,?___flsub
  6981  004C4C  C0B5  F0C9         	movff	?___fladd+1,?___flsub+1
  6982  004C50  C0B6  F0CA         	movff	?___fladd+2,?___flsub+2
  6983  004C54  C0B7  F0CB         	movff	?___fladd+3,?___flsub+3
  6984  004C58  0012               	return	
  6985  004C5A                     __end_of___flsub:
  6986                           	opt stack 0
  6987                           tblptru	equ	0xFF8
  6988                           tblptrh	equ	0xFF7
  6989                           tblptrl	equ	0xFF6
  6990                           tablat	equ	0xFF5
  6991                           prodh	equ	0xFF4
  6992                           prodl	equ	0xFF3
  6993                           postinc0	equ	0xFEE
  6994                           wreg	equ	0xFE8
  6995                           indf1	equ	0xFE7
  6996                           postdec1	equ	0xFE5
  6997                           fsr1h	equ	0xFE2
  6998                           fsr1l	equ	0xFE1
  6999                           indf2	equ	0xFDF
  7000                           postinc2	equ	0xFDE
  7001                           postdec2	equ	0xFDD
  7002                           fsr2h	equ	0xFDA
  7003                           fsr2l	equ	0xFD9
  7004                           status	equ	0xFD8
  7005                           
  7006 ;; *************** function _read_adc_voltage *****************
  7007 ;; Defined at:
  7008 ;;		line 125 in file "Main.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;  channel         1    wreg     unsigned char 
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;  channel         1   74[BANK0 ] unsigned char 
  7013 ;;  voltage         4   68[BANK0 ] float 
  7014 ;;  raw_value       2   72[BANK0 ] int 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  4   64[BANK0 ] float 
  7017 ;; Registers used:
  7018 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7024 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7028 ;;Total ram usage:       11 bytes
  7029 ;; Hardware stack levels used:    1
  7030 ;; Hardware stack levels required when called:    5
  7031 ;; This function calls:
  7032 ;;		___fldiv
  7033 ;;		___wmul
  7034 ;;		___xxtofl
  7035 ;;		_read_adc_raw_no_lib
  7036 ;; This function is called by:
  7037 ;;		_main
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text12
  7042  004644                     __ptext12:
  7043                           	opt stack 0
  7044  004644                     _read_adc_voltage:
  7045                           	opt stack 25
  7046                           
  7047                           ;incstack = 0
  7048                           ;read_adc_voltage@channel stored from wreg
  7049  004644  0100               	movlb	0	; () banked
  7050  004646  6FCA               	movwf	read_adc_voltage@channel& (0+255),b
  7051                           
  7052                           ;Main.c: 126: int raw_value;
  7053                           ;Main.c: 127: float voltage;
  7054                           ;Main.c: 128: raw_value = read_adc_raw_no_lib(channel);
  7055  004648  0100               	movlb	0	; () banked
  7056  00464A  51CA               	movf	read_adc_voltage@channel& (0+255),w,b
  7057  00464C  ECE3  F025         	call	_read_adc_raw_no_lib
  7058  004650  C080  F0C8         	movff	?_read_adc_raw_no_lib,read_adc_voltage@raw_value
  7059  004654  C081  F0C9         	movff	?_read_adc_raw_no_lib+1,read_adc_voltage@raw_value+1
  7060                           
  7061                           ;Main.c: 129: voltage = (raw_value * 5) / 1023.0;
  7062  004658  C0C8  F080         	movff	read_adc_voltage@raw_value,___wmul@multiplier
  7063  00465C  C0C9  F081         	movff	read_adc_voltage@raw_value+1,___wmul@multiplier+1
  7064  004660  0E00               	movlw	0
  7065  004662  0100               	movlb	0	; () banked
  7066  004664  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7067  004666  0E05               	movlw	5
  7068  004668  6F82               	movwf	___wmul@multiplicand& (0+255),b
  7069  00466A  EC88  F026         	call	___wmul	;wreg free
  7070  00466E  0100               	movlb	0	; () banked
  7071  004670  C080  F086         	movff	?___wmul,___xxtofl@val
  7072  004674  0100               	movlb	0	; () banked
  7073  004676  C081  F087         	movff	?___wmul+1,___xxtofl@val+1
  7074  00467A  0100               	movlb	0	; () banked
  7075  00467C  0E00               	movlw	0
  7076  00467E  BF87               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  7077  004680  0EFF               	movlw	-1
  7078  004682  6F88               	movwf	(___xxtofl@val+2)& (0+255),b
  7079  004684  6F89               	movwf	(___xxtofl@val+3)& (0+255),b
  7080  004686  0E01               	movlw	1
  7081  004688  ECF0  F018         	call	___xxtofl
  7082  00468C  C086  F0A7         	movff	?___xxtofl,___fldiv@b
  7083  004690  C087  F0A8         	movff	?___xxtofl+1,___fldiv@b+1
  7084  004694  C088  F0A9         	movff	?___xxtofl+2,___fldiv@b+2
  7085  004698  C089  F0AA         	movff	?___xxtofl+3,___fldiv@b+3
  7086  00469C  0E00               	movlw	0
  7087  00469E  0100               	movlb	0	; () banked
  7088  0046A0  6FAB               	movwf	___fldiv@a& (0+255),b
  7089  0046A2  0EC0               	movlw	192
  7090  0046A4  6FAC               	movwf	(___fldiv@a+1)& (0+255),b
  7091  0046A6  0E7F               	movlw	127
  7092  0046A8  6FAD               	movwf	(___fldiv@a+2)& (0+255),b
  7093  0046AA  0E44               	movlw	68
  7094  0046AC  6FAE               	movwf	(___fldiv@a+3)& (0+255),b
  7095  0046AE  ECF5  F010         	call	___fldiv	;wreg free
  7096  0046B2  C0A7  F0C4         	movff	?___fldiv,read_adc_voltage@voltage
  7097  0046B6  C0A8  F0C5         	movff	?___fldiv+1,read_adc_voltage@voltage+1
  7098  0046BA  C0A9  F0C6         	movff	?___fldiv+2,read_adc_voltage@voltage+2
  7099  0046BE  C0AA  F0C7         	movff	?___fldiv+3,read_adc_voltage@voltage+3
  7100                           
  7101                           ;Main.c: 130: return voltage;
  7102  0046C2  C0C4  F0C0         	movff	read_adc_voltage@voltage,?_read_adc_voltage
  7103  0046C6  C0C5  F0C1         	movff	read_adc_voltage@voltage+1,?_read_adc_voltage+1
  7104  0046CA  C0C6  F0C2         	movff	read_adc_voltage@voltage+2,?_read_adc_voltage+2
  7105  0046CE  C0C7  F0C3         	movff	read_adc_voltage@voltage+3,?_read_adc_voltage+3
  7106  0046D2  0012               	return	
  7107  0046D4                     __end_of_read_adc_voltage:
  7108                           	opt stack 0
  7109                           tblptru	equ	0xFF8
  7110                           tblptrh	equ	0xFF7
  7111                           tblptrl	equ	0xFF6
  7112                           tablat	equ	0xFF5
  7113                           prodh	equ	0xFF4
  7114                           prodl	equ	0xFF3
  7115                           postinc0	equ	0xFEE
  7116                           wreg	equ	0xFE8
  7117                           indf1	equ	0xFE7
  7118                           postdec1	equ	0xFE5
  7119                           fsr1h	equ	0xFE2
  7120                           fsr1l	equ	0xFE1
  7121                           indf2	equ	0xFDF
  7122                           postinc2	equ	0xFDE
  7123                           postdec2	equ	0xFDD
  7124                           fsr2h	equ	0xFDA
  7125                           fsr2l	equ	0xFD9
  7126                           status	equ	0xFD8
  7127                           
  7128 ;; *************** function _read_adc_raw_no_lib *****************
  7129 ;; Defined at:
  7130 ;;		line 116 in file "Main.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  channel         1    wreg     unsigned char 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;  channel         1    6[BANK0 ] unsigned char 
  7135 ;;  raw_value       2    4[BANK0 ] int 
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  2    0[BANK0 ] int 
  7138 ;; Registers used:
  7139 ;;		wreg, status,2, status,0
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7145 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7146 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7147 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7148 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7149 ;;Total ram usage:        7 bytes
  7150 ;; Hardware stack levels used:    1
  7151 ;; Hardware stack levels required when called:    4
  7152 ;; This function calls:
  7153 ;;		Nothing
  7154 ;; This function is called by:
  7155 ;;		_read_adc_voltage
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           	psect	text13
  7160  004BC6                     __ptext13:
  7161                           	opt stack 0
  7162  004BC6                     _read_adc_raw_no_lib:
  7163                           	opt stack 25
  7164                           
  7165                           ;incstack = 0
  7166                           ;read_adc_raw_no_lib@channel stored from wreg
  7167  004BC6  0100               	movlb	0	; () banked
  7168  004BC8  6F86               	movwf	read_adc_raw_no_lib@channel& (0+255),b
  7169                           
  7170                           ;Main.c: 117: int raw_value;
  7171                           ;Main.c: 118: ADCON0bits.CHS = channel;
  7172  004BCA  C086  F082         	movff	read_adc_raw_no_lib@channel,??_read_adc_raw_no_lib
  7173  004BCE  0100               	movlb	0	; () banked
  7174  004BD0  4782               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  7175  004BD2  4782               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  7176  004BD4  50C2               	movf	4034,w,c	;volatile
  7177  004BD6  0100               	movlb	0	; () banked
  7178  004BD8  1982               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  7179  004BDA  0BC3               	andlw	-61
  7180  004BDC  1982               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  7181  004BDE  6EC2               	movwf	4034,c	;volatile
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;Main.c: 119: ADCON0bits.GO = 1;
  7185  004BE0  82C2               	bsf	4034,1,c	;volatile
  7186  004BE2                     l113:
  7187  004BE2  B2C2               	btfsc	4034,1,c	;volatile
  7188  004BE4  D7FE               	goto	l113
  7189                           
  7190                           ;Main.c: 121: raw_value = ADRESH << 8 | ADRESL;
  7191  004BE6  50C3               	movf	4035,w,c	;volatile
  7192  004BE8  CFC4 F082          	movff	4036,??_read_adc_raw_no_lib	;volatile
  7193  004BEC  0100               	movlb	0	; () banked
  7194  004BEE  6B83               	clrf	(??_read_adc_raw_no_lib+1)& (0+255),b
  7195  004BF0  C082  F083         	movff	??_read_adc_raw_no_lib,??_read_adc_raw_no_lib+1
  7196  004BF4  0100               	movlb	0	; () banked
  7197  004BF6  6B82               	clrf	??_read_adc_raw_no_lib& (0+255),b
  7198  004BF8  0100               	movlb	0	; () banked
  7199  004BFA  1182               	iorwf	??_read_adc_raw_no_lib& (0+255),w,b
  7200  004BFC  0100               	movlb	0	; () banked
  7201  004BFE  6F84               	movwf	read_adc_raw_no_lib@raw_value& (0+255),b
  7202  004C00  0100               	movlb	0	; () banked
  7203  004C02  5183               	movf	(??_read_adc_raw_no_lib+1)& (0+255),w,b
  7204  004C04  0100               	movlb	0	; () banked
  7205  004C06  6F85               	movwf	(read_adc_raw_no_lib@raw_value+1)& (0+255),b
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;Main.c: 122: return raw_value;
  7209  004C08  C084  F080         	movff	read_adc_raw_no_lib@raw_value,?_read_adc_raw_no_lib
  7210  004C0C  C085  F081         	movff	read_adc_raw_no_lib@raw_value+1,?_read_adc_raw_no_lib+1
  7211  004C10  0012               	return	
  7212  004C12                     __end_of_read_adc_raw_no_lib:
  7213                           	opt stack 0
  7214                           tblptru	equ	0xFF8
  7215                           tblptrh	equ	0xFF7
  7216                           tblptrl	equ	0xFF6
  7217                           tablat	equ	0xFF5
  7218                           prodh	equ	0xFF4
  7219                           prodl	equ	0xFF3
  7220                           postinc0	equ	0xFEE
  7221                           wreg	equ	0xFE8
  7222                           indf1	equ	0xFE7
  7223                           postdec1	equ	0xFE5
  7224                           fsr1h	equ	0xFE2
  7225                           fsr1l	equ	0xFE1
  7226                           indf2	equ	0xFDF
  7227                           postinc2	equ	0xFDE
  7228                           postdec2	equ	0xFDD
  7229                           fsr2h	equ	0xFDA
  7230                           fsr2l	equ	0xFD9
  7231                           status	equ	0xFD8
  7232                           
  7233 ;; *************** function _lcd_puts *****************
  7234 ;; Defined at:
  7235 ;;		line 198 in file "Main.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;  s               2   14[BANK0 ] PTR unsigned char 
  7238 ;;		 -> main@Buffer(32), 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;		None
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1    wreg      void 
  7243 ;; Registers used:
  7244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7253 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7254 ;;Total ram usage:        2 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:    9
  7257 ;; This function calls:
  7258 ;;		_lcd_putc
  7259 ;; This function is called by:
  7260 ;;		_main
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text14
  7265  004DF6                     __ptext14:
  7266                           	opt stack 0
  7267  004DF6                     _lcd_puts:
  7268                           	opt stack 21
  7269                           
  7270                           ;Main.c: 199: while (*s) {
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;incstack = 0
  7274  004DF6  D00A               	goto	l5413
  7275  004DF8                     l5409:
  7276                           
  7277                           ;Main.c: 200: lcd_putc(*s);
  7278  004DF8  C08E  FFD9         	movff	lcd_puts@s,fsr2l
  7279  004DFC  C08F  FFDA         	movff	lcd_puts@s+1,fsr2h
  7280  004E00  50DF               	movf	indf2,w,c
  7281  004E02  EC0F  F025         	call	_lcd_putc
  7282                           
  7283                           ;Main.c: 201: s++;
  7284  004E06  0100               	movlb	0	; () banked
  7285  004E08  4B8E               	infsnz	lcd_puts@s& (0+255),f,b
  7286  004E0A  2B8F               	incf	(lcd_puts@s+1)& (0+255),f,b
  7287  004E0C                     l5413:
  7288  004E0C  C08E  FFD9         	movff	lcd_puts@s,fsr2l
  7289  004E10  C08F  FFDA         	movff	lcd_puts@s+1,fsr2h
  7290  004E14  50DF               	movf	indf2,w,c
  7291  004E16  B4D8               	btfsc	status,2,c
  7292  004E18  0012               	return	
  7293  004E1A  D7EE               	goto	l5409
  7294  004E1C                     __end_of_lcd_puts:
  7295                           	opt stack 0
  7296                           tblptru	equ	0xFF8
  7297                           tblptrh	equ	0xFF7
  7298                           tblptrl	equ	0xFF6
  7299                           tablat	equ	0xFF5
  7300                           prodh	equ	0xFF4
  7301                           prodl	equ	0xFF3
  7302                           postinc0	equ	0xFEE
  7303                           wreg	equ	0xFE8
  7304                           indf1	equ	0xFE7
  7305                           postdec1	equ	0xFE5
  7306                           fsr1h	equ	0xFE2
  7307                           fsr1l	equ	0xFE1
  7308                           indf2	equ	0xFDF
  7309                           postinc2	equ	0xFDE
  7310                           postdec2	equ	0xFDD
  7311                           fsr2h	equ	0xFDA
  7312                           fsr2l	equ	0xFD9
  7313                           status	equ	0xFD8
  7314                           
  7315 ;; *************** function _lcd_putc *****************
  7316 ;; Defined at:
  7317 ;;		line 184 in file "Main.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  c               1    wreg     unsigned char 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;  c               1   13[BANK0 ] unsigned char 
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  1    wreg      void 
  7324 ;; Registers used:
  7325 ;;		wreg, status,2, status,0, cstack
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;Total ram usage:        1 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:    8
  7338 ;; This function calls:
  7339 ;;		_delay_ms
  7340 ;;		_lcd_gotoxy
  7341 ;;		_lcd_send_byte
  7342 ;; This function is called by:
  7343 ;;		_lcd_puts
  7344 ;;		_main
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           	psect	text15
  7349  004A1E                     __ptext15:
  7350                           	opt stack 0
  7351  004A1E                     _lcd_putc:
  7352                           	opt stack 21
  7353                           
  7354                           ;incstack = 0
  7355                           ;lcd_putc@c stored from wreg
  7356  004A1E  0100               	movlb	0	; () banked
  7357  004A20  6F8D               	movwf	lcd_putc@c& (0+255),b
  7358                           
  7359                           ;Main.c: 185: switch (c) {
  7360  004A22  D022               	goto	l4889
  7361  004A24                     l4879:
  7362  004A24  0E01               	movlw	1
  7363  004A26  0100               	movlb	0	; () banked
  7364  004A28  6F88               	movwf	lcd_send_byte@n& (0+255),b
  7365  004A2A  0E00               	movlw	0
  7366  004A2C  EC40  F025         	call	_lcd_send_byte
  7367                           
  7368                           ;Main.c: 187: delay_ms(2);
  7369  004A30  0E00               	movlw	0
  7370  004A32  0100               	movlb	0	; () banked
  7371  004A34  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  7372  004A36  0E02               	movlw	2
  7373  004A38  6F80               	movwf	delay_ms@n& (0+255),b
  7374  004A3A  ECA3  F026         	call	_delay_ms	;wreg free
  7375                           
  7376                           ;Main.c: 188: break;
  7377  004A3E  0012               	return	
  7378  004A40                     l4881:
  7379  004A40  0E02               	movlw	2
  7380  004A42  0100               	movlb	0	; () banked
  7381  004A44  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  7382  004A46  0E01               	movlw	1
  7383  004A48  EC94  F025         	call	_lcd_gotoxy
  7384                           
  7385                           ;Main.c: 190: break;
  7386  004A4C  0012               	return	
  7387  004A4E                     l4883:
  7388  004A4E  0E10               	movlw	16
  7389  004A50  0100               	movlb	0	; () banked
  7390  004A52  6F88               	movwf	lcd_send_byte@n& (0+255),b
  7391  004A54  0E00               	movlw	0
  7392  004A56  EC40  F025         	call	_lcd_send_byte
  7393                           
  7394                           ;Main.c: 192: break;
  7395  004A5A  0012               	return	
  7396  004A5C                     l4885:
  7397  004A5C  C08D  F088         	movff	lcd_putc@c,lcd_send_byte@n
  7398  004A60  0E01               	movlw	1
  7399  004A62  EC40  F025         	call	_lcd_send_byte
  7400                           
  7401                           ;Main.c: 195: }
  7402                           
  7403                           ;Main.c: 194: break;
  7404  004A66  0012               	return	
  7405  004A68                     l4889:
  7406  004A68  0100               	movlb	0	; () banked
  7407  004A6A  518D               	movf	lcd_putc@c& (0+255),w,b
  7408                           
  7409                           ; Switch size 1, requested type "space"
  7410                           ; Number of cases is 3, Range of values is 8 to 12
  7411                           ; switch strategies available:
  7412                           ; Name         Instructions Cycles
  7413                           ; simple_byte           10     6 (average)
  7414                           ;	Chosen strategy is simple_byte
  7415  004A6C  0A08               	xorlw	8	; case 8
  7416  004A6E  B4D8               	btfsc	status,2,c
  7417  004A70  D7EE               	goto	l4883
  7418  004A72  0A02               	xorlw	2	; case 10
  7419  004A74  B4D8               	btfsc	status,2,c
  7420  004A76  D7E4               	goto	l4881
  7421  004A78  0A06               	xorlw	6	; case 12
  7422  004A7A  B4D8               	btfsc	status,2,c
  7423  004A7C  D7D3               	goto	l4879
  7424  004A7E  D7EE               	goto	l4885
  7425  004A80                     __end_of_lcd_putc:
  7426                           	opt stack 0
  7427                           tblptru	equ	0xFF8
  7428                           tblptrh	equ	0xFF7
  7429                           tblptrl	equ	0xFF6
  7430                           tablat	equ	0xFF5
  7431                           prodh	equ	0xFF4
  7432                           prodl	equ	0xFF3
  7433                           postinc0	equ	0xFEE
  7434                           wreg	equ	0xFE8
  7435                           indf1	equ	0xFE7
  7436                           postdec1	equ	0xFE5
  7437                           fsr1h	equ	0xFE2
  7438                           fsr1l	equ	0xFE1
  7439                           indf2	equ	0xFDF
  7440                           postinc2	equ	0xFDE
  7441                           postdec2	equ	0xFDD
  7442                           fsr2h	equ	0xFDA
  7443                           fsr2l	equ	0xFD9
  7444                           status	equ	0xFD8
  7445                           
  7446 ;; *************** function _lcd_gotoxy *****************
  7447 ;; Defined at:
  7448 ;;		line 167 in file "Main.c"
  7449 ;; Parameters:    Size  Location     Type
  7450 ;;  x               1    wreg     unsigned char 
  7451 ;;  y               1   10[BANK0 ] unsigned char 
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;  x               1   11[BANK0 ] unsigned char 
  7454 ;;  address         1   12[BANK0 ] unsigned char 
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  1    wreg      void 
  7457 ;; Registers used:
  7458 ;;		wreg, status,2, status,0, cstack
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7464 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7467 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7468 ;;Total ram usage:        3 bytes
  7469 ;; Hardware stack levels used:    1
  7470 ;; Hardware stack levels required when called:    7
  7471 ;; This function calls:
  7472 ;;		_lcd_send_byte
  7473 ;; This function is called by:
  7474 ;;		_lcd_putc
  7475 ;;		_main
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text16
  7480  004B28                     __ptext16:
  7481                           	opt stack 0
  7482  004B28                     _lcd_gotoxy:
  7483                           	opt stack 21
  7484                           
  7485                           ;incstack = 0
  7486                           ;lcd_gotoxy@x stored from wreg
  7487  004B28  0100               	movlb	0	; () banked
  7488  004B2A  6F8B               	movwf	lcd_gotoxy@x& (0+255),b
  7489                           
  7490                           ;Main.c: 168: unsigned char address;
  7491                           ;Main.c: 170: switch (y) {
  7492  004B2C  D00A               	goto	l3751
  7493  004B2E                     l3741:
  7494  004B2E  0E80               	movlw	128
  7495  004B30  D005               	goto	L11
  7496  004B32                     l3743:
  7497                           
  7498                           ; BSR set to: 0
  7499  004B32  0EC0               	movlw	192
  7500  004B34  D003               	goto	L11
  7501  004B36                     l3745:
  7502                           
  7503                           ; BSR set to: 0
  7504  004B36  0E90               	movlw	144
  7505  004B38  D001               	goto	L11
  7506  004B3A                     l3747:
  7507                           
  7508                           ; BSR set to: 0
  7509  004B3A  0ED0               	movlw	208
  7510  004B3C                     L11:
  7511  004B3C  0100               	movlb	0	; () banked
  7512  004B3E  6F8C               	movwf	lcd_gotoxy@address& (0+255),b
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;Main.c: 179: }
  7516                           
  7517                           ;Main.c: 178: break;
  7518  004B40  D00E               	goto	l3753
  7519  004B42                     l3751:
  7520  004B42  0100               	movlb	0	; () banked
  7521  004B44  518A               	movf	lcd_gotoxy@y& (0+255),w,b
  7522                           
  7523                           ; Switch size 1, requested type "space"
  7524                           ; Number of cases is 4, Range of values is 1 to 4
  7525                           ; switch strategies available:
  7526                           ; Name         Instructions Cycles
  7527                           ; simple_byte           13     7 (average)
  7528                           ;	Chosen strategy is simple_byte
  7529  004B46  0A01               	xorlw	1	; case 1
  7530  004B48  B4D8               	btfsc	status,2,c
  7531  004B4A  D7F1               	goto	l3741
  7532  004B4C  0A03               	xorlw	3	; case 2
  7533  004B4E  B4D8               	btfsc	status,2,c
  7534  004B50  D7F0               	goto	l3743
  7535  004B52  0A01               	xorlw	1	; case 3
  7536  004B54  B4D8               	btfsc	status,2,c
  7537  004B56  D7EF               	goto	l3745
  7538  004B58  0A07               	xorlw	7	; case 4
  7539  004B5A  B4D8               	btfsc	status,2,c
  7540  004B5C  D7EE               	goto	l3747
  7541  004B5E                     l3753:
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;Main.c: 180: address += x - 1;
  7545  004B5E  0100               	movlb	0	; () banked
  7546  004B60  058B               	decf	lcd_gotoxy@x& (0+255),w,b
  7547  004B62  0100               	movlb	0	; () banked
  7548  004B64  278C               	addwf	lcd_gotoxy@address& (0+255),f,b
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;Main.c: 181: lcd_send_byte(0, (unsigned char) (0x80 | address));
  7552  004B66  0100               	movlb	0	; () banked
  7553  004B68  518C               	movf	lcd_gotoxy@address& (0+255),w,b
  7554  004B6A  0980               	iorlw	128
  7555  004B6C  0100               	movlb	0	; () banked
  7556  004B6E  6F88               	movwf	lcd_send_byte@n& (0+255),b
  7557  004B70  0E00               	movlw	0
  7558  004B72  EC40  F025         	call	_lcd_send_byte
  7559  004B76  0012               	return		;funcret
  7560  004B78                     __end_of_lcd_gotoxy:
  7561                           	opt stack 0
  7562                           tblptru	equ	0xFF8
  7563                           tblptrh	equ	0xFF7
  7564                           tblptrl	equ	0xFF6
  7565                           tablat	equ	0xFF5
  7566                           prodh	equ	0xFF4
  7567                           prodl	equ	0xFF3
  7568                           postinc0	equ	0xFEE
  7569                           wreg	equ	0xFE8
  7570                           indf1	equ	0xFE7
  7571                           postdec1	equ	0xFE5
  7572                           fsr1h	equ	0xFE2
  7573                           fsr1l	equ	0xFE1
  7574                           indf2	equ	0xFDF
  7575                           postinc2	equ	0xFDE
  7576                           postdec2	equ	0xFDD
  7577                           fsr2h	equ	0xFDA
  7578                           fsr2l	equ	0xFD9
  7579                           status	equ	0xFD8
  7580                           
  7581 ;; *************** function _lcd_init *****************
  7582 ;; Defined at:
  7583 ;;		line 152 in file "Main.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;		None
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;  i               1   10[BANK0 ] unsigned char 
  7588 ;; Return value:  Size  Location     Type
  7589 ;;                  1    wreg      void 
  7590 ;; Registers used:
  7591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7592 ;; Tracked objects:
  7593 ;;		On entry : 0/0
  7594 ;;		On exit  : 0/0
  7595 ;;		Unchanged: 0/0
  7596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7600 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7601 ;;Total ram usage:        1 bytes
  7602 ;; Hardware stack levels used:    1
  7603 ;; Hardware stack levels required when called:    7
  7604 ;; This function calls:
  7605 ;;		_delay_ms
  7606 ;;		_lcd_send_byte
  7607 ;;		_lcd_send_nibble
  7608 ;; This function is called by:
  7609 ;;		_main
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text17
  7614  0048E0                     __ptext17:
  7615                           	opt stack 0
  7616  0048E0                     _lcd_init:
  7617                           	opt stack 23
  7618                           
  7619                           ;Main.c: 153: unsigned char i;
  7620                           ;Main.c: 154: PORTEbits.RE2 = 0;
  7621                           
  7622                           ;incstack = 0
  7623  0048E0  9484               	bcf	3972,2,c	;volatile
  7624                           
  7625                           ;Main.c: 155: PORTEbits.RE1 = 0;
  7626  0048E2  9284               	bcf	3972,1,c	;volatile
  7627                           
  7628                           ;Main.c: 157: delay_ms(25);
  7629  0048E4  0E00               	movlw	0
  7630  0048E6  0100               	movlb	0	; () banked
  7631  0048E8  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  7632  0048EA  0E19               	movlw	25
  7633  0048EC  6F80               	movwf	delay_ms@n& (0+255),b
  7634  0048EE  ECA3  F026         	call	_delay_ms	;wreg free
  7635                           
  7636                           ;Main.c: 158: for (i = 1; i <= 3; ++i) {
  7637  0048F2  0E01               	movlw	1
  7638  0048F4  0100               	movlb	0	; () banked
  7639  0048F6  6F8A               	movwf	lcd_init@i& (0+255),b
  7640  0048F8                     l5383:
  7641                           
  7642                           ; BSR set to: 0
  7643  0048F8  0E03               	movlw	3
  7644  0048FA  0100               	movlb	0	; () banked
  7645  0048FC  658A               	cpfsgt	lcd_init@i& (0+255),b
  7646  0048FE  D001               	goto	l5387
  7647  004900  D00D               	goto	l5393
  7648  004902                     l5387:
  7649                           
  7650                           ; BSR set to: 0
  7651                           ;Main.c: 159: lcd_send_nibble(3);
  7652  004902  0E03               	movlw	3
  7653  004904  ECE7  F026         	call	_lcd_send_nibble
  7654                           
  7655                           ;Main.c: 160: delay_ms(6);
  7656  004908  0E00               	movlw	0
  7657  00490A  0100               	movlb	0	; () banked
  7658  00490C  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  7659  00490E  0E06               	movlw	6
  7660  004910  6F80               	movwf	delay_ms@n& (0+255),b
  7661  004912  ECA3  F026         	call	_delay_ms	;wreg free
  7662  004916  0100               	movlb	0	; () banked
  7663  004918  2B8A               	incf	lcd_init@i& (0+255),f,b
  7664  00491A  D7EE               	goto	l5383
  7665  00491C                     l5393:
  7666                           
  7667                           ; BSR set to: 0
  7668                           ;Main.c: 161: }
  7669                           ;Main.c: 163: lcd_send_nibble(2);
  7670  00491C  0E02               	movlw	2
  7671  00491E  ECE7  F026         	call	_lcd_send_nibble
  7672                           
  7673                           ;Main.c: 164: for (i = 0; i <= 3; ++i) lcd_send_byte(0, LCD_INIT_STRING[i]);
  7674  004922  0E00               	movlw	0
  7675  004924  0100               	movlb	0	; () banked
  7676  004926  6F8A               	movwf	lcd_init@i& (0+255),b
  7677  004928                     l5397:
  7678                           
  7679                           ; BSR set to: 0
  7680  004928  0E03               	movlw	3
  7681  00492A  0100               	movlb	0	; () banked
  7682  00492C  658A               	cpfsgt	lcd_init@i& (0+255),b
  7683  00492E  D001               	goto	l5401
  7684  004930  0012               	return	
  7685  004932                     l5401:
  7686                           
  7687                           ; BSR set to: 0
  7688  004932  0100               	movlb	0	; () banked
  7689  004934  518A               	movf	lcd_init@i& (0+255),w,b
  7690  004936  0D01               	mullw	1
  7691  004938  0EF0               	movlw	low _LCD_INIT_STRING
  7692  00493A  24F3               	addwf	prodl,w,c
  7693  00493C  6ED9               	movwf	fsr2l,c
  7694  00493E  0E00               	movlw	high _LCD_INIT_STRING
  7695  004940  20F4               	addwfc	prodh,w,c
  7696  004942  6EDA               	movwf	fsr2h,c
  7697  004944  50DF               	movf	indf2,w,c
  7698  004946  0100               	movlb	0	; () banked
  7699  004948  6F88               	movwf	lcd_send_byte@n& (0+255),b
  7700  00494A  0E00               	movlw	0
  7701  00494C  EC40  F025         	call	_lcd_send_byte
  7702  004950  0100               	movlb	0	; () banked
  7703  004952  2B8A               	incf	lcd_init@i& (0+255),f,b
  7704  004954  D7E9               	goto	l5397
  7705  004956                     __end_of_lcd_init:
  7706                           	opt stack 0
  7707                           tblptru	equ	0xFF8
  7708                           tblptrh	equ	0xFF7
  7709                           tblptrl	equ	0xFF6
  7710                           tablat	equ	0xFF5
  7711                           prodh	equ	0xFF4
  7712                           prodl	equ	0xFF3
  7713                           postinc0	equ	0xFEE
  7714                           wreg	equ	0xFE8
  7715                           indf1	equ	0xFE7
  7716                           postdec1	equ	0xFE5
  7717                           fsr1h	equ	0xFE2
  7718                           fsr1l	equ	0xFE1
  7719                           indf2	equ	0xFDF
  7720                           postinc2	equ	0xFDE
  7721                           postdec2	equ	0xFDD
  7722                           fsr2h	equ	0xFDA
  7723                           fsr2l	equ	0xFD9
  7724                           status	equ	0xFD8
  7725                           
  7726 ;; *************** function _lcd_send_byte *****************
  7727 ;; Defined at:
  7728 ;;		line 141 in file "Main.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  cm_data         1    wreg     unsigned char 
  7731 ;;  n               1    8[BANK0 ] unsigned char 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  cm_data         1    9[BANK0 ] unsigned char 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1    wreg      void 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7743 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7747 ;;Total ram usage:        2 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:    6
  7750 ;; This function calls:
  7751 ;;		_delay_cycles
  7752 ;;		_delay_ms
  7753 ;;		_lcd_send_nibble
  7754 ;; This function is called by:
  7755 ;;		_lcd_init
  7756 ;;		_lcd_gotoxy
  7757 ;;		_lcd_putc
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           	psect	text18
  7762  004A80                     __ptext18:
  7763                           	opt stack 0
  7764  004A80                     _lcd_send_byte:
  7765                           	opt stack 22
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;incstack = 0
  7769                           ;lcd_send_byte@cm_data stored from wreg
  7770  004A80  0100               	movlb	0	; () banked
  7771  004A82  6F89               	movwf	lcd_send_byte@cm_data& (0+255),b
  7772                           
  7773                           ;Main.c: 142: PORTEbits.RE2 = cm_data;
  7774  004A84  0100               	movlb	0	; () banked
  7775  004A86  B189               	btfsc	lcd_send_byte@cm_data& (0+255),0,b
  7776  004A88  D002               	bra	u4015
  7777  004A8A  9484               	bcf	3972,2,c	;volatile
  7778  004A8C  D001               	bra	u4016
  7779  004A8E                     u4015:
  7780  004A8E  8484               	bsf	3972,2,c	;volatile
  7781  004A90                     u4016:
  7782                           
  7783                           ;Main.c: 143: delay_cycles(1);
  7784  004A90  0E01               	movlw	1
  7785  004A92  EC2D  F026         	call	_delay_cycles
  7786                           
  7787                           ;Main.c: 144: delay_cycles(1);
  7788  004A96  0E01               	movlw	1
  7789  004A98  EC2D  F026         	call	_delay_cycles
  7790                           
  7791                           ;Main.c: 145: PORTEbits.RE1 = 0;
  7792  004A9C  9284               	bcf	3972,1,c	;volatile
  7793                           
  7794                           ;Main.c: 146: lcd_send_nibble(n >> 4);
  7795  004A9E  0100               	movlb	0	; () banked
  7796  004AA0  3988               	swapf	lcd_send_byte@n& (0+255),w,b
  7797  004AA2  0B0F               	andlw	15
  7798  004AA4  ECE7  F026         	call	_lcd_send_nibble
  7799                           
  7800                           ;Main.c: 147: lcd_send_nibble(n & 0x0f);
  7801  004AA8  0100               	movlb	0	; () banked
  7802  004AAA  5188               	movf	lcd_send_byte@n& (0+255),w,b
  7803  004AAC  0B0F               	andlw	15
  7804  004AAE  ECE7  F026         	call	_lcd_send_nibble
  7805                           
  7806                           ;Main.c: 148: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
  7807  004AB2  0100               	movlb	0	; () banked
  7808  004AB4  5189               	movf	lcd_send_byte@cm_data& (0+255),w,b
  7809  004AB6  0100               	movlb	0	; () banked
  7810  004AB8  B4D8               	btfsc	status,2,c
  7811  004ABA  D005               	goto	l3737
  7812                           
  7813                           ; BSR set to: 0
  7814  004ABC  0E32               	movlw	50
  7815  004ABE                     u7977:
  7816  004ABE  0004               	clrwdt	
  7817  004AC0  2EE8               	decfsz	wreg,f,c
  7818  004AC2  D7FD               	goto	u7977
  7819  004AC4  0012               	return	
  7820  004AC6                     l3737:
  7821                           
  7822                           ;Main.c: 149: else delay_ms(2);
  7823  004AC6  0E00               	movlw	0
  7824  004AC8  0100               	movlb	0	; () banked
  7825  004ACA  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  7826  004ACC  0E02               	movlw	2
  7827  004ACE  6F80               	movwf	delay_ms@n& (0+255),b
  7828  004AD0  ECA3  F026         	call	_delay_ms	;wreg free
  7829  004AD4  0012               	return	
  7830  004AD6                     __end_of_lcd_send_byte:
  7831                           	opt stack 0
  7832                           tblptru	equ	0xFF8
  7833                           tblptrh	equ	0xFF7
  7834                           tblptrl	equ	0xFF6
  7835                           tablat	equ	0xFF5
  7836                           prodh	equ	0xFF4
  7837                           prodl	equ	0xFF3
  7838                           postinc0	equ	0xFEE
  7839                           wreg	equ	0xFE8
  7840                           indf1	equ	0xFE7
  7841                           postdec1	equ	0xFE5
  7842                           fsr1h	equ	0xFE2
  7843                           fsr1l	equ	0xFE1
  7844                           indf2	equ	0xFDF
  7845                           postinc2	equ	0xFDE
  7846                           postdec2	equ	0xFDD
  7847                           fsr2h	equ	0xFDA
  7848                           fsr2l	equ	0xFD9
  7849                           status	equ	0xFD8
  7850                           
  7851 ;; *************** function _lcd_send_nibble *****************
  7852 ;; Defined at:
  7853 ;;		line 133 in file "Main.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;  n               1    wreg     unsigned char 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;  n               1    7[BANK0 ] unsigned char 
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  1    wreg      void 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0, cstack
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7868 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7869 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7870 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7871 ;;Total ram usage:        2 bytes
  7872 ;; Hardware stack levels used:    1
  7873 ;; Hardware stack levels required when called:    5
  7874 ;; This function calls:
  7875 ;;		_delay_cycles
  7876 ;; This function is called by:
  7877 ;;		_lcd_send_byte
  7878 ;;		_lcd_init
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           	psect	text19
  7883  004DCE                     __ptext19:
  7884                           	opt stack 0
  7885  004DCE                     _lcd_send_nibble:
  7886                           	opt stack 22
  7887                           
  7888                           ;incstack = 0
  7889                           ;lcd_send_nibble@n stored from wreg
  7890  004DCE  0100               	movlb	0	; () banked
  7891  004DD0  6F87               	movwf	lcd_send_nibble@n& (0+255),b
  7892                           
  7893                           ;Main.c: 134: lcd.data = n;
  7894  004DD2  C087  F086         	movff	lcd_send_nibble@n,??_lcd_send_nibble
  7895  004DD6  0100               	movlb	0	; () banked
  7896  004DD8  3B86               	swapf	??_lcd_send_nibble& (0+255),f,b
  7897  004DDA  5083               	movf	3971,w,c
  7898  004DDC  0100               	movlb	0	; () banked
  7899  004DDE  1986               	xorwf	??_lcd_send_nibble& (0+255),w,b
  7900  004DE0  0B0F               	andlw	-241
  7901  004DE2  1986               	xorwf	??_lcd_send_nibble& (0+255),w,b
  7902  004DE4  6E83               	movwf	3971,c
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;Main.c: 135: delay_cycles(1);
  7906  004DE6  0E01               	movlw	1
  7907  004DE8  EC2D  F026         	call	_delay_cycles
  7908                           
  7909                           ;Main.c: 136: PORTEbits.RE1 = 1;
  7910  004DEC  8284               	bsf	3972,1,c	;volatile
  7911                           
  7912                           ;Main.c: 137: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
  7913  004DEE  0004               	clrwdt	
  7914  004DF0  F000               	nop		;2 cycle nop
  7915                           
  7916                           ;Main.c: 138: PORTEbits.RE1 = 0;
  7917  004DF2  9284               	bcf	3972,1,c	;volatile
  7918  004DF4  0012               	return		;funcret
  7919  004DF6                     __end_of_lcd_send_nibble:
  7920                           	opt stack 0
  7921                           tblptru	equ	0xFF8
  7922                           tblptrh	equ	0xFF7
  7923                           tblptrl	equ	0xFF6
  7924                           tablat	equ	0xFF5
  7925                           prodh	equ	0xFF4
  7926                           prodl	equ	0xFF3
  7927                           postinc0	equ	0xFEE
  7928                           wreg	equ	0xFE8
  7929                           indf1	equ	0xFE7
  7930                           postdec1	equ	0xFE5
  7931                           fsr1h	equ	0xFE2
  7932                           fsr1l	equ	0xFE1
  7933                           indf2	equ	0xFDF
  7934                           postinc2	equ	0xFDE
  7935                           postdec2	equ	0xFDD
  7936                           fsr2h	equ	0xFDA
  7937                           fsr2l	equ	0xFD9
  7938                           status	equ	0xFD8
  7939                           
  7940 ;; *************** function _delay_cycles *****************
  7941 ;; Defined at:
  7942 ;;		line 98 in file "Main.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  n               1    wreg     unsigned char 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  n               1    3[BANK0 ] unsigned char 
  7947 ;;  x               2    4[BANK0 ] int 
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  1    wreg      void 
  7950 ;; Registers used:
  7951 ;;		wreg, status,2, status,0
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7958 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7959 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7960 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7961 ;;Total ram usage:        6 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; Hardware stack levels required when called:    4
  7964 ;; This function calls:
  7965 ;;		Nothing
  7966 ;; This function is called by:
  7967 ;;		_lcd_send_nibble
  7968 ;;		_lcd_send_byte
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           	psect	text20
  7973  004C5A                     __ptext20:
  7974                           	opt stack 0
  7975  004C5A                     _delay_cycles:
  7976                           	opt stack 22
  7977                           
  7978                           ;incstack = 0
  7979                           ;delay_cycles@n stored from wreg
  7980  004C5A  0100               	movlb	0	; () banked
  7981  004C5C  6F83               	movwf	delay_cycles@n& (0+255),b
  7982                           
  7983                           ;Main.c: 99: int x;
  7984                           ;Main.c: 100: for (x = 0; x <= n; x++) asm(" clrwdt");
  7985  004C5E  0E00               	movlw	0
  7986  004C60  0100               	movlb	0	; () banked
  7987  004C62  6F85               	movwf	(delay_cycles@x+1)& (0+255),b
  7988  004C64  0E00               	movlw	0
  7989  004C66  6F84               	movwf	delay_cycles@x& (0+255),b
  7990  004C68  D004               	goto	l3703
  7991  004C6A                     l102:
  7992                           
  7993                           ; BSR set to: 0
  7994  004C6A  0004               	clrwdt		;# 
  7995  004C6C  0100               	movlb	0	; () banked
  7996  004C6E  4B84               	infsnz	delay_cycles@x& (0+255),f,b
  7997  004C70  2B85               	incf	(delay_cycles@x+1)& (0+255),f,b
  7998  004C72                     l3703:
  7999                           
  8000                           ; BSR set to: 0
  8001  004C72  0100               	movlb	0	; () banked
  8002  004C74  5183               	movf	delay_cycles@n& (0+255),w,b
  8003  004C76  0100               	movlb	0	; () banked
  8004  004C78  6F80               	movwf	??_delay_cycles& (0+255),b
  8005  004C7A  6B81               	clrf	(??_delay_cycles+1)& (0+255),b
  8006  004C7C  0100               	movlb	0	; () banked
  8007  004C7E  5184               	movf	delay_cycles@x& (0+255),w,b
  8008  004C80  0100               	movlb	0	; () banked
  8009  004C82  5D80               	subwf	??_delay_cycles& (0+255),w,b
  8010  004C84  0100               	movlb	0	; () banked
  8011  004C86  5181               	movf	(??_delay_cycles+1)& (0+255),w,b
  8012  004C88  0A80               	xorlw	128
  8013  004C8A  0100               	movlb	0	; () banked
  8014  004C8C  6F82               	movwf	(??_delay_cycles+2)& (0+255),b
  8015  004C8E  0100               	movlb	0	; () banked
  8016  004C90  5185               	movf	(delay_cycles@x+1)& (0+255),w,b
  8017  004C92  0A80               	xorlw	128
  8018  004C94  0100               	movlb	0	; () banked
  8019  004C96  5982               	subwfb	(??_delay_cycles+2)& (0+255),w,b
  8020  004C98  A0D8               	btfss	status,0,c
  8021  004C9A  0012               	return	
  8022  004C9C  D7E6               	goto	l102
  8023  004C9E                     __end_of_delay_cycles:
  8024                           	opt stack 0
  8025                           tblptru	equ	0xFF8
  8026                           tblptrh	equ	0xFF7
  8027                           tblptrl	equ	0xFF6
  8028                           tablat	equ	0xFF5
  8029                           prodh	equ	0xFF4
  8030                           prodl	equ	0xFF3
  8031                           postinc0	equ	0xFEE
  8032                           wreg	equ	0xFE8
  8033                           indf1	equ	0xFE7
  8034                           postdec1	equ	0xFE5
  8035                           fsr1h	equ	0xFE2
  8036                           fsr1l	equ	0xFE1
  8037                           indf2	equ	0xFDF
  8038                           postinc2	equ	0xFDE
  8039                           postdec2	equ	0xFDD
  8040                           fsr2h	equ	0xFDA
  8041                           fsr2l	equ	0xFD9
  8042                           status	equ	0xFD8
  8043                           
  8044 ;; *************** function _init_adc_no_lib *****************
  8045 ;; Defined at:
  8046 ;;		line 110 in file "Main.c"
  8047 ;; Parameters:    Size  Location     Type
  8048 ;;		None
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;		None
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  1    wreg      void 
  8053 ;; Registers used:
  8054 ;;		wreg, status,2
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;Total ram usage:        0 bytes
  8065 ;; Hardware stack levels used:    1
  8066 ;; Hardware stack levels required when called:    4
  8067 ;; This function calls:
  8068 ;;		Nothing
  8069 ;; This function is called by:
  8070 ;;		_main
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074                           	psect	text21
  8075  004E66                     __ptext21:
  8076                           	opt stack 0
  8077  004E66                     _init_adc_no_lib:
  8078                           	opt stack 26
  8079                           
  8080                           ;Main.c: 111: ADCON0 = 0;
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;incstack = 0
  8084  004E66  0E00               	movlw	0
  8085  004E68  6EC2               	movwf	4034,c	;volatile
  8086                           
  8087                           ;Main.c: 112: ADCON0bits.ADON = 1;
  8088  004E6A  80C2               	bsf	4034,0,c	;volatile
  8089                           
  8090                           ;Main.c: 113: ADCON2 = 0b10001001;
  8091  004E6C  0E89               	movlw	137
  8092  004E6E  6EC0               	movwf	4032,c	;volatile
  8093  004E70  0012               	return		;funcret
  8094  004E72                     __end_of_init_adc_no_lib:
  8095                           	opt stack 0
  8096                           tblptru	equ	0xFF8
  8097                           tblptrh	equ	0xFF7
  8098                           tblptrl	equ	0xFF6
  8099                           tablat	equ	0xFF5
  8100                           prodh	equ	0xFF4
  8101                           prodl	equ	0xFF3
  8102                           postinc0	equ	0xFEE
  8103                           wreg	equ	0xFE8
  8104                           indf1	equ	0xFE7
  8105                           postdec1	equ	0xFE5
  8106                           fsr1h	equ	0xFE2
  8107                           fsr1l	equ	0xFE1
  8108                           indf2	equ	0xFDF
  8109                           postinc2	equ	0xFDE
  8110                           postdec2	equ	0xFDD
  8111                           fsr2h	equ	0xFDA
  8112                           fsr2l	equ	0xFD9
  8113                           status	equ	0xFD8
  8114                           
  8115 ;; *************** function _init *****************
  8116 ;; Defined at:
  8117 ;;		line 205 in file "Main.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;		None
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;		None
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  1    wreg      void 
  8124 ;; Registers used:
  8125 ;;		wreg, status,2, cstack
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;Total ram usage:        0 bytes
  8136 ;; Hardware stack levels used:    1
  8137 ;; Hardware stack levels required when called:    5
  8138 ;; This function calls:
  8139 ;;		_reloadTimer0
  8140 ;; This function is called by:
  8141 ;;		_main
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           	psect	text22
  8146  0049BA                     __ptext22:
  8147                           	opt stack 0
  8148  0049BA                     _init:
  8149                           	opt stack 25
  8150                           
  8151                           ;Main.c: 208: ADCON0 = 0x00;
  8152                           
  8153                           ;incstack = 0
  8154  0049BA  0E00               	movlw	0
  8155  0049BC  6EC2               	movwf	4034,c	;volatile
  8156                           
  8157                           ;Main.c: 209: ADCON1 = 0x0C;
  8158  0049BE  0E0C               	movlw	12
  8159  0049C0  6EC1               	movwf	4033,c	;volatile
  8160                           
  8161                           ;Main.c: 210: TRISA = 0xFF;
  8162  0049C2  6892               	setf	3986,c	;volatile
  8163                           
  8164                           ;Main.c: 211: TRISB = 0xFF;
  8165  0049C4  6893               	setf	3987,c	;volatile
  8166                           
  8167                           ;Main.c: 212: TRISC = 0x80;
  8168  0049C6  0E80               	movlw	128
  8169  0049C8  6E94               	movwf	3988,c	;volatile
  8170                           
  8171                           ;Main.c: 213: TRISD = 0x00;
  8172  0049CA  0E00               	movlw	0
  8173  0049CC  6E95               	movwf	3989,c	;volatile
  8174                           
  8175                           ;Main.c: 214: TRISE = 0x00;
  8176  0049CE  0E00               	movlw	0
  8177  0049D0  6E96               	movwf	3990,c	;volatile
  8178                           
  8179                           ;Main.c: 215: PORTD = 0 ;
  8180  0049D2  0E00               	movlw	0
  8181  0049D4  6E83               	movwf	3971,c	;volatile
  8182                           
  8183                           ;Main.c: 216: PIE1 = 0 ;
  8184  0049D6  0E00               	movlw	0
  8185  0049D8  6E9D               	movwf	3997,c	;volatile
  8186                           
  8187                           ;Main.c: 218: T3CON = 0x31;
  8188  0049DA  0E31               	movlw	49
  8189  0049DC  6EB1               	movwf	4017,c	;volatile
  8190                           
  8191                           ;Main.c: 219: TMR3 = 0;
  8192  0049DE  0E00               	movlw	0
  8193  0049E0  6EB3               	movwf	4019,c	;volatile
  8194  0049E2  0E00               	movlw	0
  8195  0049E4  6EB2               	movwf	4018,c	;volatile
  8196                           
  8197                           ;Main.c: 220: TMR3IF = 0;
  8198  0049E6  92A1               	bcf	4001,1,c	;volatile
  8199                           
  8200                           ;Main.c: 221: TMR3IE = 1;
  8201  0049E8  82A0               	bsf	4000,1,c	;volatile
  8202                           
  8203                           ;Main.c: 223: INTCONbits.GIEH = 1;
  8204  0049EA  8EF2               	bsf	intcon,7,c	;volatile
  8205                           
  8206                           ;Main.c: 224: INTCONbits.GIEL = 1;
  8207  0049EC  8CF2               	bsf	intcon,6,c	;volatile
  8208                           
  8209                           ;Main.c: 225: INTCON2 = 0;
  8210  0049EE  0E00               	movlw	0
  8211  0049F0  6EF1               	movwf	intcon2,c	;volatile
  8212                           
  8213                           ;Main.c: 226: INTCON3 = 0;
  8214  0049F2  0E00               	movlw	0
  8215  0049F4  6EF0               	movwf	intcon3,c	;volatile
  8216                           
  8217                           ;Main.c: 227: INTCON2bits.INTEDG0 = 1;
  8218  0049F6  8CF1               	bsf	intcon2,6,c	;volatile
  8219                           
  8220                           ;Main.c: 228: INTCON2bits.INTEDG1 = 1;
  8221  0049F8  8AF1               	bsf	intcon2,5,c	;volatile
  8222                           
  8223                           ;Main.c: 229: INTCON2bits.INTEDG2 = 1;
  8224  0049FA  88F1               	bsf	intcon2,4,c	;volatile
  8225                           
  8226                           ;Main.c: 230: INTCON3bits.INT1IE = 1;
  8227  0049FC  86F0               	bsf	intcon3,3,c	;volatile
  8228                           
  8229                           ;Main.c: 231: INTCON3bits.INT2IE = 1;
  8230  0049FE  88F0               	bsf	intcon3,4,c	;volatile
  8231                           
  8232                           ;Main.c: 232: RCONbits.IPEN = 0;
  8233  004A00  9ED0               	bcf	4048,7,c	;volatile
  8234                           
  8235                           ;Main.c: 233: INTCONbits.INT0IE = 1;
  8236  004A02  88F2               	bsf	intcon,4,c	;volatile
  8237                           
  8238                           ;Main.c: 234: PORTCbits.RC5 = 0;
  8239  004A04  9A82               	bcf	3970,5,c	;volatile
  8240                           
  8241                           ;Main.c: 235: T3CONbits.TMR3ON = 1;
  8242  004A06  80B1               	bsf	4017,0,c	;volatile
  8243                           
  8244                           ;Main.c: 240: T0CON = 0;
  8245  004A08  0E00               	movlw	0
  8246  004A0A  6ED5               	movwf	4053,c	;volatile
  8247                           
  8248                           ;Main.c: 241: T0CONbits.T0PS0 = 1;
  8249  004A0C  80D5               	bsf	4053,0,c	;volatile
  8250                           
  8251                           ;Main.c: 242: T0CONbits.T0PS1 = 1;
  8252  004A0E  82D5               	bsf	4053,1,c	;volatile
  8253                           
  8254                           ;Main.c: 243: T0CONbits.T0PS2 = 0;
  8255  004A10  94D5               	bcf	4053,2,c	;volatile
  8256                           
  8257                           ;Main.c: 244: T0CONbits.TMR0ON = 1;
  8258  004A12  8ED5               	bsf	4053,7,c	;volatile
  8259                           
  8260                           ;Main.c: 245: INTCONbits.TMR0IE = 1;
  8261  004A14  8AF2               	bsf	intcon,5,c	;volatile
  8262                           
  8263                           ;Main.c: 246: T0CONbits.TMR0ON = 1;
  8264  004A16  8ED5               	bsf	4053,7,c	;volatile
  8265                           
  8266                           ;Main.c: 247: reloadTimer0();
  8267  004A18  EC39  F027         	call	_reloadTimer0	;wreg free
  8268  004A1C  0012               	return		;funcret
  8269  004A1E                     __end_of_init:
  8270                           	opt stack 0
  8271                           tblptru	equ	0xFF8
  8272                           tblptrh	equ	0xFF7
  8273                           tblptrl	equ	0xFF6
  8274                           tablat	equ	0xFF5
  8275                           prodh	equ	0xFF4
  8276                           prodl	equ	0xFF3
  8277                           intcon	equ	0xFF2
  8278                           intcon2	equ	0xFF1
  8279                           intcon3	equ	0xFF0
  8280                           postinc0	equ	0xFEE
  8281                           wreg	equ	0xFE8
  8282                           indf1	equ	0xFE7
  8283                           postdec1	equ	0xFE5
  8284                           fsr1h	equ	0xFE2
  8285                           fsr1l	equ	0xFE1
  8286                           indf2	equ	0xFDF
  8287                           postinc2	equ	0xFDE
  8288                           postdec2	equ	0xFDD
  8289                           fsr2h	equ	0xFDA
  8290                           fsr2l	equ	0xFD9
  8291                           status	equ	0xFD8
  8292                           
  8293 ;; *************** function _reloadTimer0 *****************
  8294 ;; Defined at:
  8295 ;;		line 103 in file "Main.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;		None
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;		None
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  1    wreg      void 
  8302 ;; Registers used:
  8303 ;;		wreg, status,2
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8313 ;;Total ram usage:        0 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; Hardware stack levels required when called:    4
  8316 ;; This function calls:
  8317 ;;		Nothing
  8318 ;; This function is called by:
  8319 ;;		_init
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           	psect	text23
  8324  004E72                     __ptext23:
  8325                           	opt stack 0
  8326  004E72                     _reloadTimer0:
  8327                           	opt stack 25
  8328                           
  8329                           ;Main.c: 104: TMR0H = (unsigned char)((3036 >> 8) & 0x00FF);
  8330                           
  8331                           ;incstack = 0
  8332  004E72  0E0B               	movlw	11
  8333  004E74  6ED7               	movwf	4055,c	;volatile
  8334                           
  8335                           ;Main.c: 105: TMR0L = (unsigned char)(3036 & 0x00FF );
  8336  004E76  0EDC               	movlw	220
  8337  004E78  6ED6               	movwf	4054,c	;volatile
  8338  004E7A  0012               	return		;funcret
  8339  004E7C                     __end_of_reloadTimer0:
  8340                           	opt stack 0
  8341                           tblptru	equ	0xFF8
  8342                           tblptrh	equ	0xFF7
  8343                           tblptrl	equ	0xFF6
  8344                           tablat	equ	0xFF5
  8345                           prodh	equ	0xFF4
  8346                           prodl	equ	0xFF3
  8347                           intcon	equ	0xFF2
  8348                           intcon2	equ	0xFF1
  8349                           intcon3	equ	0xFF0
  8350                           postinc0	equ	0xFEE
  8351                           wreg	equ	0xFE8
  8352                           indf1	equ	0xFE7
  8353                           postdec1	equ	0xFE5
  8354                           fsr1h	equ	0xFE2
  8355                           fsr1l	equ	0xFE1
  8356                           indf2	equ	0xFDF
  8357                           postinc2	equ	0xFDE
  8358                           postdec2	equ	0xFDD
  8359                           fsr2h	equ	0xFDA
  8360                           fsr2l	equ	0xFD9
  8361                           status	equ	0xFD8
  8362                           
  8363 ;; *************** function _incrementTime *****************
  8364 ;; Defined at:
  8365 ;;		line 368 in file "Main.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8381 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8382 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8383 ;;Total ram usage:        2 bytes
  8384 ;; Hardware stack levels used:    1
  8385 ;; Hardware stack levels required when called:    5
  8386 ;; This function calls:
  8387 ;;		___awdiv
  8388 ;;		___lwdiv
  8389 ;;		___wmul
  8390 ;; This function is called by:
  8391 ;;		_main
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text24
  8396  003B0C                     __ptext24:
  8397                           	opt stack 0
  8398  003B0C                     _incrementTime:
  8399                           	opt stack 25
  8400                           
  8401                           ;Main.c: 370: if(modeschange == 0){
  8402                           
  8403                           ;incstack = 0
  8404  003B0C  0100               	movlb	0	; () banked
  8405  003B0E  51EE               	movf	_modeschange& (0+255),w,b
  8406  003B10  0100               	movlb	0	; () banked
  8407  003B12  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  8408  003B14  A4D8               	btfss	status,2,c
  8409  003B16  D003               	goto	l5557
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;Main.c: 371: cookingTime++;
  8413  003B18  4A52               	infsnz	_cookingTime,f,c
  8414  003B1A  2A53               	incf	_cookingTime+1,f,c
  8415                           
  8416                           ;Main.c: 372: }else if(modeschange == 1){
  8417  003B1C  D029               	goto	l5575
  8418  003B1E                     l5557:
  8419                           
  8420                           ; BSR set to: 0
  8421  003B1E  0100               	movlb	0	; () banked
  8422  003B20  05EE               	decf	_modeschange& (0+255),w,b
  8423  003B22  0100               	movlb	0	; () banked
  8424  003B24  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  8425  003B26  A4D8               	btfss	status,2,c
  8426  003B28  D002               	goto	l5561
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;Main.c: 373: cookingTime +=10;
  8430  003B2A  0E0A               	movlw	10
  8431  003B2C  D008               	goto	L12
  8432  003B2E                     l5561:
  8433                           
  8434                           ; BSR set to: 0
  8435  003B2E  0E02               	movlw	2
  8436  003B30  0100               	movlb	0	; () banked
  8437  003B32  19EE               	xorwf	_modeschange& (0+255),w,b
  8438  003B34  0100               	movlb	0	; () banked
  8439  003B36  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  8440  003B38  A4D8               	btfss	status,2,c
  8441  003B3A  D004               	goto	l5565
  8442                           
  8443                           ; BSR set to: 0
  8444                           ;Main.c: 375: cookingTime +=60;
  8445  003B3C  0E3C               	movlw	60
  8446  003B3E                     L12:
  8447  003B3E  2652               	addwf	_cookingTime,f,c
  8448  003B40  0E00               	movlw	0
  8449  003B42  D015               	goto	L14
  8450  003B44                     l5565:
  8451                           
  8452                           ; BSR set to: 0
  8453  003B44  0E03               	movlw	3
  8454  003B46  0100               	movlb	0	; () banked
  8455  003B48  19EE               	xorwf	_modeschange& (0+255),w,b
  8456  003B4A  0100               	movlb	0	; () banked
  8457  003B4C  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  8458  003B4E  A4D8               	btfss	status,2,c
  8459  003B50  D004               	goto	l5569
  8460                           
  8461                           ; BSR set to: 0
  8462                           ;Main.c: 377: cookingTime +=600;
  8463  003B52  0E58               	movlw	88
  8464  003B54  2652               	addwf	_cookingTime,f,c
  8465  003B56  0E02               	movlw	2
  8466  003B58  D00A               	goto	L14
  8467  003B5A                     l5569:
  8468                           
  8469                           ; BSR set to: 0
  8470  003B5A  0E04               	movlw	4
  8471  003B5C  0100               	movlb	0	; () banked
  8472  003B5E  19EE               	xorwf	_modeschange& (0+255),w,b
  8473  003B60  0100               	movlb	0	; () banked
  8474  003B62  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  8475  003B64  A4D8               	btfss	status,2,c
  8476  003B66  D004               	goto	l5575
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;Main.c: 379: cookingTime +=3600;
  8480  003B68  0E10               	movlw	16
  8481  003B6A  2652               	addwf	_cookingTime,f,c
  8482  003B6C  0E0E               	movlw	14
  8483  003B6E                     L14:
  8484  003B6E  2253               	addwfc	_cookingTime+1,f,c
  8485  003B70                     l5575:
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;Main.c: 384: }
  8489                           ;Main.c: 385: if(hours>4){
  8490  003B70  5055               	movf	_hours+1,w,c
  8491  003B72  E104               	bnz	u6900
  8492  003B74  0E05               	movlw	5
  8493  003B76  5C54               	subwf	_hours,w,c
  8494  003B78  A0D8               	btfss	status,0,c
  8495  003B7A  D004               	goto	l5579
  8496  003B7C                     u6900:
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;Main.c: 387: cookingTime=0;
  8500  003B7C  0E00               	movlw	0
  8501  003B7E  6E53               	movwf	_cookingTime+1,c
  8502  003B80  0E00               	movlw	0
  8503  003B82  6E52               	movwf	_cookingTime,c
  8504  003B84                     l5579:
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;Main.c: 388: }
  8508                           ;Main.c: 389: hours = cookingTime / 3600;
  8509  003B84  C052  F086         	movff	_cookingTime,___awdiv@dividend
  8510  003B88  C053  F087         	movff	_cookingTime+1,___awdiv@dividend+1
  8511  003B8C  0E0E               	movlw	14
  8512  003B8E  0100               	movlb	0	; () banked
  8513  003B90  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  8514  003B92  0E10               	movlw	16
  8515  003B94  6F88               	movwf	___awdiv@divisor& (0+255),b
  8516  003B96  EC11  F021         	call	___awdiv	;wreg free
  8517  003B9A  C086  F054         	movff	?___awdiv,_hours
  8518  003B9E  C087  F055         	movff	?___awdiv+1,_hours+1
  8519                           
  8520                           ;Main.c: 390: minutes = (cookingTime - hours*3600)/60;
  8521  003BA2  C054  F080         	movff	_hours,___wmul@multiplier
  8522  003BA6  C055  F081         	movff	_hours+1,___wmul@multiplier+1
  8523  003BAA  0E0E               	movlw	14
  8524  003BAC  0100               	movlb	0	; () banked
  8525  003BAE  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8526  003BB0  0E10               	movlw	16
  8527  003BB2  6F82               	movwf	___wmul@multiplicand& (0+255),b
  8528  003BB4  EC88  F026         	call	___wmul	;wreg free
  8529  003BB8  0100               	movlb	0	; () banked
  8530  003BBA  1F80               	comf	?___wmul& (0+255),f,b
  8531  003BBC  0100               	movlb	0	; () banked
  8532  003BBE  1F81               	comf	(?___wmul+1)& (0+255),f,b
  8533  003BC0  0100               	movlb	0	; () banked
  8534  003BC2  4B80               	infsnz	?___wmul& (0+255),f,b
  8535  003BC4  2B81               	incf	(?___wmul+1)& (0+255),f,b
  8536  003BC6  5052               	movf	_cookingTime,w,c
  8537  003BC8  0100               	movlb	0	; () banked
  8538  003BCA  2580               	addwf	?___wmul& (0+255),w,b
  8539  003BCC  0100               	movlb	0	; () banked
  8540  003BCE  6F86               	movwf	___lwdiv@dividend& (0+255),b
  8541  003BD0  5053               	movf	_cookingTime+1,w,c
  8542  003BD2  0100               	movlb	0	; () banked
  8543  003BD4  2181               	addwfc	(?___wmul+1)& (0+255),w,b
  8544  003BD6  0100               	movlb	0	; () banked
  8545  003BD8  6F87               	movwf	(___lwdiv@dividend+1)& (0+255),b
  8546  003BDA  0E00               	movlw	0
  8547  003BDC  0100               	movlb	0	; () banked
  8548  003BDE  6F89               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8549  003BE0  0E3C               	movlw	60
  8550  003BE2  6F88               	movwf	___lwdiv@divisor& (0+255),b
  8551  003BE4  EC34  F024         	call	___lwdiv	;wreg free
  8552  003BE8  C086  F056         	movff	?___lwdiv,_minutes
  8553  003BEC  C087  F057         	movff	?___lwdiv+1,_minutes+1
  8554                           
  8555                           ;Main.c: 391: seconds = cookingTime - hours*3600 - minutes*60;
  8556  003BF0  C054  F080         	movff	_hours,___wmul@multiplier
  8557  003BF4  C055  F081         	movff	_hours+1,___wmul@multiplier+1
  8558  003BF8  0E0E               	movlw	14
  8559  003BFA  0100               	movlb	0	; () banked
  8560  003BFC  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8561  003BFE  0E10               	movlw	16
  8562  003C00  6F82               	movwf	___wmul@multiplicand& (0+255),b
  8563  003C02  EC88  F026         	call	___wmul	;wreg free
  8564  003C06  C080  F08E         	movff	?___wmul,??_incrementTime
  8565  003C0A  C081  F08F         	movff	?___wmul+1,??_incrementTime+1
  8566  003C0E  C056  F080         	movff	_minutes,___wmul@multiplier
  8567  003C12  C057  F081         	movff	_minutes+1,___wmul@multiplier+1
  8568  003C16  0E00               	movlw	0
  8569  003C18  0100               	movlb	0	; () banked
  8570  003C1A  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8571  003C1C  0E3C               	movlw	60
  8572  003C1E  6F82               	movwf	___wmul@multiplicand& (0+255),b
  8573  003C20  EC88  F026         	call	___wmul	;wreg free
  8574  003C24  0100               	movlb	0	; () banked
  8575  003C26  5180               	movf	?___wmul& (0+255),w,b
  8576  003C28  0100               	movlb	0	; () banked
  8577  003C2A  278E               	addwf	??_incrementTime& (0+255),f,b
  8578  003C2C  0100               	movlb	0	; () banked
  8579  003C2E  5181               	movf	(?___wmul+1)& (0+255),w,b
  8580  003C30  0100               	movlb	0	; () banked
  8581  003C32  238F               	addwfc	(??_incrementTime+1)& (0+255),f,b
  8582  003C34  0100               	movlb	0	; () banked
  8583  003C36  1F8E               	comf	??_incrementTime& (0+255),f,b
  8584  003C38  1F8F               	comf	(??_incrementTime+1)& (0+255),f,b
  8585  003C3A  4B8E               	infsnz	??_incrementTime& (0+255),f,b
  8586  003C3C  2B8F               	incf	(??_incrementTime+1)& (0+255),f,b
  8587  003C3E  5052               	movf	_cookingTime,w,c
  8588  003C40  0100               	movlb	0	; () banked
  8589  003C42  258E               	addwf	??_incrementTime& (0+255),w,b
  8590  003C44  6E58               	movwf	_seconds,c
  8591  003C46  5053               	movf	_cookingTime+1,w,c
  8592  003C48  0100               	movlb	0	; () banked
  8593  003C4A  218F               	addwfc	(??_incrementTime+1)& (0+255),w,b
  8594  003C4C  6E59               	movwf	_seconds+1,c
  8595                           
  8596                           ; BSR set to: 0
  8597  003C4E  0012               	return		;funcret
  8598  003C50                     __end_of_incrementTime:
  8599                           	opt stack 0
  8600                           tblptru	equ	0xFF8
  8601                           tblptrh	equ	0xFF7
  8602                           tblptrl	equ	0xFF6
  8603                           tablat	equ	0xFF5
  8604                           prodh	equ	0xFF4
  8605                           prodl	equ	0xFF3
  8606                           intcon	equ	0xFF2
  8607                           intcon2	equ	0xFF1
  8608                           intcon3	equ	0xFF0
  8609                           postinc0	equ	0xFEE
  8610                           wreg	equ	0xFE8
  8611                           indf1	equ	0xFE7
  8612                           postdec1	equ	0xFE5
  8613                           fsr1h	equ	0xFE2
  8614                           fsr1l	equ	0xFE1
  8615                           indf2	equ	0xFDF
  8616                           postinc2	equ	0xFDE
  8617                           postdec2	equ	0xFDD
  8618                           fsr2h	equ	0xFDA
  8619                           fsr2l	equ	0xFD9
  8620                           status	equ	0xFD8
  8621                           
  8622 ;; *************** function _decrementTime *****************
  8623 ;; Defined at:
  8624 ;;		line 396 in file "Main.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;		None
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;		None
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      void 
  8631 ;; Registers used:
  8632 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8640 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8641 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8642 ;;Total ram usage:        2 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; Hardware stack levels required when called:    5
  8645 ;; This function calls:
  8646 ;;		___awdiv
  8647 ;;		___lwdiv
  8648 ;;		___wmul
  8649 ;; This function is called by:
  8650 ;;		_main
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           	psect	text25
  8655  003C50                     __ptext25:
  8656                           	opt stack 0
  8657  003C50                     _decrementTime:
  8658                           	opt stack 25
  8659                           
  8660                           ;Main.c: 397: if(modeschange == 0){
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;incstack = 0
  8664  003C50  0100               	movlb	0	; () banked
  8665  003C52  51EE               	movf	_modeschange& (0+255),w,b
  8666  003C54  0100               	movlb	0	; () banked
  8667  003C56  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  8668  003C58  A4D8               	btfss	status,2,c
  8669  003C5A  D004               	goto	l5589
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;Main.c: 398: cookingTime--;
  8673  003C5C  0652               	decf	_cookingTime,f,c
  8674  003C5E  A0D8               	btfss	status,0,c
  8675  003C60  0653               	decf	_cookingTime+1,f,c
  8676                           
  8677                           ;Main.c: 399: }else if(modeschange == 1){
  8678  003C62  D029               	goto	l259
  8679  003C64                     l5589:
  8680                           
  8681                           ; BSR set to: 0
  8682  003C64  0100               	movlb	0	; () banked
  8683  003C66  05EE               	decf	_modeschange& (0+255),w,b
  8684  003C68  0100               	movlb	0	; () banked
  8685  003C6A  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  8686  003C6C  A4D8               	btfss	status,2,c
  8687  003C6E  D002               	goto	l5593
  8688                           
  8689                           ; BSR set to: 0
  8690                           ;Main.c: 400: cookingTime -=10;
  8691  003C70  0EF6               	movlw	246
  8692  003C72  D008               	goto	L15
  8693  003C74                     l5593:
  8694                           
  8695                           ; BSR set to: 0
  8696  003C74  0E02               	movlw	2
  8697  003C76  0100               	movlb	0	; () banked
  8698  003C78  19EE               	xorwf	_modeschange& (0+255),w,b
  8699  003C7A  0100               	movlb	0	; () banked
  8700  003C7C  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  8701  003C7E  A4D8               	btfss	status,2,c
  8702  003C80  D004               	goto	l5597
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;Main.c: 402: cookingTime -=60;
  8706  003C82  0EC4               	movlw	196
  8707  003C84                     L15:
  8708  003C84  2652               	addwf	_cookingTime,f,c
  8709  003C86  0EFF               	movlw	255
  8710  003C88  D015               	goto	L17
  8711  003C8A                     l5597:
  8712                           
  8713                           ; BSR set to: 0
  8714  003C8A  0E03               	movlw	3
  8715  003C8C  0100               	movlb	0	; () banked
  8716  003C8E  19EE               	xorwf	_modeschange& (0+255),w,b
  8717  003C90  0100               	movlb	0	; () banked
  8718  003C92  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  8719  003C94  A4D8               	btfss	status,2,c
  8720  003C96  D004               	goto	l5601
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;Main.c: 404: cookingTime -=600;
  8724  003C98  0EA8               	movlw	168
  8725  003C9A  2652               	addwf	_cookingTime,f,c
  8726  003C9C  0EFD               	movlw	253
  8727  003C9E  D00A               	goto	L17
  8728  003CA0                     l5601:
  8729                           
  8730                           ; BSR set to: 0
  8731  003CA0  0E04               	movlw	4
  8732  003CA2  0100               	movlb	0	; () banked
  8733  003CA4  19EE               	xorwf	_modeschange& (0+255),w,b
  8734  003CA6  0100               	movlb	0	; () banked
  8735  003CA8  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
  8736  003CAA  A4D8               	btfss	status,2,c
  8737  003CAC  D004               	goto	l259
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;Main.c: 406: cookingTime -=3600;
  8741  003CAE  0EF0               	movlw	240
  8742  003CB0  2652               	addwf	_cookingTime,f,c
  8743  003CB2  0EF1               	movlw	241
  8744  003CB4                     L17:
  8745  003CB4  2253               	addwfc	_cookingTime+1,f,c
  8746  003CB6                     l259:
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;Main.c: 407: }
  8750                           ;Main.c: 409: if(cookingTime < 0){
  8751  003CB6  AE53               	btfss	_cookingTime+1,7,c
  8752  003CB8  D004               	goto	l5607
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;Main.c: 410: cookingTime = 0;
  8756  003CBA  0E00               	movlw	0
  8757  003CBC  6E53               	movwf	_cookingTime+1,c
  8758  003CBE  0E00               	movlw	0
  8759  003CC0  6E52               	movwf	_cookingTime,c
  8760  003CC2                     l5607:
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;Main.c: 411: }
  8764                           ;Main.c: 412: hours = cookingTime / 3600;
  8765  003CC2  C052  F086         	movff	_cookingTime,___awdiv@dividend
  8766  003CC6  C053  F087         	movff	_cookingTime+1,___awdiv@dividend+1
  8767  003CCA  0E0E               	movlw	14
  8768  003CCC  0100               	movlb	0	; () banked
  8769  003CCE  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  8770  003CD0  0E10               	movlw	16
  8771  003CD2  6F88               	movwf	___awdiv@divisor& (0+255),b
  8772  003CD4  EC11  F021         	call	___awdiv	;wreg free
  8773  003CD8  C086  F054         	movff	?___awdiv,_hours
  8774  003CDC  C087  F055         	movff	?___awdiv+1,_hours+1
  8775                           
  8776                           ;Main.c: 413: minutes = (cookingTime - hours*3600)/60;
  8777  003CE0  C054  F080         	movff	_hours,___wmul@multiplier
  8778  003CE4  C055  F081         	movff	_hours+1,___wmul@multiplier+1
  8779  003CE8  0E0E               	movlw	14
  8780  003CEA  0100               	movlb	0	; () banked
  8781  003CEC  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8782  003CEE  0E10               	movlw	16
  8783  003CF0  6F82               	movwf	___wmul@multiplicand& (0+255),b
  8784  003CF2  EC88  F026         	call	___wmul	;wreg free
  8785  003CF6  0100               	movlb	0	; () banked
  8786  003CF8  1F80               	comf	?___wmul& (0+255),f,b
  8787  003CFA  0100               	movlb	0	; () banked
  8788  003CFC  1F81               	comf	(?___wmul+1)& (0+255),f,b
  8789  003CFE  0100               	movlb	0	; () banked
  8790  003D00  4B80               	infsnz	?___wmul& (0+255),f,b
  8791  003D02  2B81               	incf	(?___wmul+1)& (0+255),f,b
  8792  003D04  5052               	movf	_cookingTime,w,c
  8793  003D06  0100               	movlb	0	; () banked
  8794  003D08  2580               	addwf	?___wmul& (0+255),w,b
  8795  003D0A  0100               	movlb	0	; () banked
  8796  003D0C  6F86               	movwf	___lwdiv@dividend& (0+255),b
  8797  003D0E  5053               	movf	_cookingTime+1,w,c
  8798  003D10  0100               	movlb	0	; () banked
  8799  003D12  2181               	addwfc	(?___wmul+1)& (0+255),w,b
  8800  003D14  0100               	movlb	0	; () banked
  8801  003D16  6F87               	movwf	(___lwdiv@dividend+1)& (0+255),b
  8802  003D18  0E00               	movlw	0
  8803  003D1A  0100               	movlb	0	; () banked
  8804  003D1C  6F89               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8805  003D1E  0E3C               	movlw	60
  8806  003D20  6F88               	movwf	___lwdiv@divisor& (0+255),b
  8807  003D22  EC34  F024         	call	___lwdiv	;wreg free
  8808  003D26  C086  F056         	movff	?___lwdiv,_minutes
  8809  003D2A  C087  F057         	movff	?___lwdiv+1,_minutes+1
  8810                           
  8811                           ;Main.c: 414: seconds = cookingTime - hours*3600 - minutes*60;
  8812  003D2E  C054  F080         	movff	_hours,___wmul@multiplier
  8813  003D32  C055  F081         	movff	_hours+1,___wmul@multiplier+1
  8814  003D36  0E0E               	movlw	14
  8815  003D38  0100               	movlb	0	; () banked
  8816  003D3A  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8817  003D3C  0E10               	movlw	16
  8818  003D3E  6F82               	movwf	___wmul@multiplicand& (0+255),b
  8819  003D40  EC88  F026         	call	___wmul	;wreg free
  8820  003D44  C080  F08E         	movff	?___wmul,??_decrementTime
  8821  003D48  C081  F08F         	movff	?___wmul+1,??_decrementTime+1
  8822  003D4C  C056  F080         	movff	_minutes,___wmul@multiplier
  8823  003D50  C057  F081         	movff	_minutes+1,___wmul@multiplier+1
  8824  003D54  0E00               	movlw	0
  8825  003D56  0100               	movlb	0	; () banked
  8826  003D58  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8827  003D5A  0E3C               	movlw	60
  8828  003D5C  6F82               	movwf	___wmul@multiplicand& (0+255),b
  8829  003D5E  EC88  F026         	call	___wmul	;wreg free
  8830  003D62  0100               	movlb	0	; () banked
  8831  003D64  5180               	movf	?___wmul& (0+255),w,b
  8832  003D66  0100               	movlb	0	; () banked
  8833  003D68  278E               	addwf	??_decrementTime& (0+255),f,b
  8834  003D6A  0100               	movlb	0	; () banked
  8835  003D6C  5181               	movf	(?___wmul+1)& (0+255),w,b
  8836  003D6E  0100               	movlb	0	; () banked
  8837  003D70  238F               	addwfc	(??_decrementTime+1)& (0+255),f,b
  8838  003D72  0100               	movlb	0	; () banked
  8839  003D74  1F8E               	comf	??_decrementTime& (0+255),f,b
  8840  003D76  1F8F               	comf	(??_decrementTime+1)& (0+255),f,b
  8841  003D78  4B8E               	infsnz	??_decrementTime& (0+255),f,b
  8842  003D7A  2B8F               	incf	(??_decrementTime+1)& (0+255),f,b
  8843  003D7C  5052               	movf	_cookingTime,w,c
  8844  003D7E  0100               	movlb	0	; () banked
  8845  003D80  258E               	addwf	??_decrementTime& (0+255),w,b
  8846  003D82  6E58               	movwf	_seconds,c
  8847  003D84  5053               	movf	_cookingTime+1,w,c
  8848  003D86  0100               	movlb	0	; () banked
  8849  003D88  218F               	addwfc	(??_decrementTime+1)& (0+255),w,b
  8850  003D8A  6E59               	movwf	_seconds+1,c
  8851                           
  8852                           ; BSR set to: 0
  8853  003D8C  0012               	return		;funcret
  8854  003D8E                     __end_of_decrementTime:
  8855                           	opt stack 0
  8856                           tblptru	equ	0xFF8
  8857                           tblptrh	equ	0xFF7
  8858                           tblptrl	equ	0xFF6
  8859                           tablat	equ	0xFF5
  8860                           prodh	equ	0xFF4
  8861                           prodl	equ	0xFF3
  8862                           intcon	equ	0xFF2
  8863                           intcon2	equ	0xFF1
  8864                           intcon3	equ	0xFF0
  8865                           postinc0	equ	0xFEE
  8866                           wreg	equ	0xFE8
  8867                           indf1	equ	0xFE7
  8868                           postdec1	equ	0xFE5
  8869                           fsr1h	equ	0xFE2
  8870                           fsr1l	equ	0xFE1
  8871                           indf2	equ	0xFDF
  8872                           postinc2	equ	0xFDE
  8873                           postdec2	equ	0xFDD
  8874                           fsr2h	equ	0xFDA
  8875                           fsr2l	equ	0xFD9
  8876                           status	equ	0xFD8
  8877                           
  8878 ;; *************** function ___wmul *****************
  8879 ;; Defined at:
  8880 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8883 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;  product         2    4[BANK0 ] unsigned int 
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  2    0[BANK0 ] unsigned int 
  8888 ;; Registers used:
  8889 ;;		wreg, status,2, status,0, prodl, prodh
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8895 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8896 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8898 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;Total ram usage:        6 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    4
  8902 ;; This function calls:
  8903 ;;		Nothing
  8904 ;; This function is called by:
  8905 ;;		_read_adc_voltage
  8906 ;;		_incrementTime
  8907 ;;		_decrementTime
  8908 ;;		_sprintf
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           	psect	text26
  8913  004D10                     __ptext26:
  8914                           	opt stack 0
  8915  004D10                     ___wmul:
  8916                           	opt stack 25
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;incstack = 0
  8920  004D10  0100               	movlb	0	; () banked
  8921  004D12  5180               	movf	___wmul@multiplier& (0+255),w,b
  8922  004D14  0100               	movlb	0	; () banked
  8923  004D16  0382               	mulwf	___wmul@multiplicand& (0+255),b
  8924  004D18  CFF3 F084          	movff	prodl,___wmul@product
  8925  004D1C  CFF4 F085          	movff	prodh,___wmul@product+1
  8926  004D20  0100               	movlb	0	; () banked
  8927  004D22  5180               	movf	___wmul@multiplier& (0+255),w,b
  8928  004D24  0100               	movlb	0	; () banked
  8929  004D26  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8930  004D28  50F3               	movf	prodl,w,c
  8931  004D2A  0100               	movlb	0	; () banked
  8932  004D2C  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  8933  004D2E  0100               	movlb	0	; () banked
  8934  004D30  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8935  004D32  0100               	movlb	0	; () banked
  8936  004D34  0382               	mulwf	___wmul@multiplicand& (0+255),b
  8937  004D36  50F3               	movf	prodl,w,c
  8938  004D38  0100               	movlb	0	; () banked
  8939  004D3A  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  8940                           
  8941                           ; BSR set to: 0
  8942  004D3C  C084  F080         	movff	___wmul@product,?___wmul
  8943  004D40  C085  F081         	movff	___wmul@product+1,?___wmul+1
  8944  004D44  0012               	return	
  8945  004D46                     __end_of___wmul:
  8946                           	opt stack 0
  8947                           tblptru	equ	0xFF8
  8948                           tblptrh	equ	0xFF7
  8949                           tblptrl	equ	0xFF6
  8950                           tablat	equ	0xFF5
  8951                           prodh	equ	0xFF4
  8952                           prodl	equ	0xFF3
  8953                           intcon	equ	0xFF2
  8954                           intcon2	equ	0xFF1
  8955                           intcon3	equ	0xFF0
  8956                           postinc0	equ	0xFEE
  8957                           wreg	equ	0xFE8
  8958                           indf1	equ	0xFE7
  8959                           postdec1	equ	0xFE5
  8960                           fsr1h	equ	0xFE2
  8961                           fsr1l	equ	0xFE1
  8962                           indf2	equ	0xFDF
  8963                           postinc2	equ	0xFDE
  8964                           postdec2	equ	0xFDD
  8965                           fsr2h	equ	0xFDA
  8966                           fsr2l	equ	0xFD9
  8967                           status	equ	0xFD8
  8968                           
  8969 ;; *************** function ___lwdiv *****************
  8970 ;; Defined at:
  8971 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;  dividend        2    6[BANK0 ] unsigned int 
  8974 ;;  divisor         2    8[BANK0 ] unsigned int 
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;  quotient        2   10[BANK0 ] unsigned int 
  8977 ;;  counter         1   12[BANK0 ] unsigned char 
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  2    6[BANK0 ] unsigned int 
  8980 ;; Registers used:
  8981 ;;		wreg, status,2, status,0
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8987 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8988 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8990 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8991 ;;Total ram usage:        7 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; Hardware stack levels required when called:    4
  8994 ;; This function calls:
  8995 ;;		Nothing
  8996 ;; This function is called by:
  8997 ;;		_incrementTime
  8998 ;;		_decrementTime
  8999 ;; This function uses a non-reentrant model
  9000 ;;
  9001                           
  9002                           	psect	text27
  9003  004868                     __ptext27:
  9004                           	opt stack 0
  9005  004868                     ___lwdiv:
  9006                           	opt stack 25
  9007                           
  9008                           ; BSR set to: 0
  9009                           ;incstack = 0
  9010  004868  0E00               	movlw	0
  9011  00486A  0100               	movlb	0	; () banked
  9012  00486C  6F8B               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9013  00486E  0E00               	movlw	0
  9014  004870  6F8A               	movwf	___lwdiv@quotient& (0+255),b
  9015                           
  9016                           ; BSR set to: 0
  9017  004872  0100               	movlb	0	; () banked
  9018  004874  5188               	movf	___lwdiv@divisor& (0+255),w,b
  9019  004876  0100               	movlb	0	; () banked
  9020  004878  1189               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  9021  00487A  B4D8               	btfsc	status,2,c
  9022  00487C  D02C               	goto	l948
  9023                           
  9024                           ; BSR set to: 0
  9025  00487E  0E01               	movlw	1
  9026  004880  0100               	movlb	0	; () banked
  9027  004882  6F8C               	movwf	___lwdiv@counter& (0+255),b
  9028  004884  D006               	goto	l5177
  9029  004886                     l5175:
  9030                           
  9031                           ; BSR set to: 0
  9032  004886  0100               	movlb	0	; () banked
  9033  004888  90D8               	bcf	status,0,c
  9034  00488A  3788               	rlcf	___lwdiv@divisor& (0+255),f,b
  9035  00488C  3789               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9036  00488E  0100               	movlb	0	; () banked
  9037  004890  2B8C               	incf	___lwdiv@counter& (0+255),f,b
  9038  004892                     l5177:
  9039                           
  9040                           ; BSR set to: 0
  9041  004892  0100               	movlb	0	; () banked
  9042  004894  AF89               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  9043  004896  D7F7               	goto	l5175
  9044  004898                     l5179:
  9045                           
  9046                           ; BSR set to: 0
  9047  004898  0100               	movlb	0	; () banked
  9048  00489A  90D8               	bcf	status,0,c
  9049  00489C  378A               	rlcf	___lwdiv@quotient& (0+255),f,b
  9050  00489E  378B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9051                           
  9052                           ; BSR set to: 0
  9053  0048A0  0100               	movlb	0	; () banked
  9054  0048A2  5188               	movf	___lwdiv@divisor& (0+255),w,b
  9055  0048A4  0100               	movlb	0	; () banked
  9056  0048A6  5D86               	subwf	___lwdiv@dividend& (0+255),w,b
  9057  0048A8  0100               	movlb	0	; () banked
  9058  0048AA  5189               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9059  0048AC  0100               	movlb	0	; () banked
  9060  0048AE  5987               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9061  0048B0  A0D8               	btfss	status,0,c
  9062  0048B2  D00A               	goto	l5187
  9063                           
  9064                           ; BSR set to: 0
  9065  0048B4  0100               	movlb	0	; () banked
  9066  0048B6  5188               	movf	___lwdiv@divisor& (0+255),w,b
  9067  0048B8  0100               	movlb	0	; () banked
  9068  0048BA  5F86               	subwf	___lwdiv@dividend& (0+255),f,b
  9069  0048BC  0100               	movlb	0	; () banked
  9070  0048BE  5189               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9071  0048C0  0100               	movlb	0	; () banked
  9072  0048C2  5B87               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9073                           
  9074                           ; BSR set to: 0
  9075  0048C4  0100               	movlb	0	; () banked
  9076  0048C6  818A               	bsf	___lwdiv@quotient& (0+255),0,b
  9077  0048C8                     l5187:
  9078                           
  9079                           ; BSR set to: 0
  9080  0048C8  0100               	movlb	0	; () banked
  9081  0048CA  90D8               	bcf	status,0,c
  9082  0048CC  3389               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9083  0048CE  3388               	rrcf	___lwdiv@divisor& (0+255),f,b
  9084                           
  9085                           ; BSR set to: 0
  9086  0048D0  0100               	movlb	0	; () banked
  9087  0048D2  2F8C               	decfsz	___lwdiv@counter& (0+255),f,b
  9088  0048D4  D7E1               	goto	l5179
  9089  0048D6                     l948:
  9090                           
  9091                           ; BSR set to: 0
  9092  0048D6  C08A  F086         	movff	___lwdiv@quotient,?___lwdiv
  9093  0048DA  C08B  F087         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9094                           
  9095                           ; BSR set to: 0
  9096  0048DE  0012               	return		;funcret
  9097  0048E0                     __end_of___lwdiv:
  9098                           	opt stack 0
  9099                           tblptru	equ	0xFF8
  9100                           tblptrh	equ	0xFF7
  9101                           tblptrl	equ	0xFF6
  9102                           tablat	equ	0xFF5
  9103                           prodh	equ	0xFF4
  9104                           prodl	equ	0xFF3
  9105                           intcon	equ	0xFF2
  9106                           intcon2	equ	0xFF1
  9107                           intcon3	equ	0xFF0
  9108                           postinc0	equ	0xFEE
  9109                           wreg	equ	0xFE8
  9110                           indf1	equ	0xFE7
  9111                           postdec1	equ	0xFE5
  9112                           fsr1h	equ	0xFE2
  9113                           fsr1l	equ	0xFE1
  9114                           indf2	equ	0xFDF
  9115                           postinc2	equ	0xFDE
  9116                           postdec2	equ	0xFDD
  9117                           fsr2h	equ	0xFDA
  9118                           fsr2l	equ	0xFD9
  9119                           status	equ	0xFD8
  9120                           
  9121 ;; *************** function ___awdiv *****************
  9122 ;; Defined at:
  9123 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  dividend        2    6[BANK0 ] int 
  9126 ;;  divisor         2    8[BANK0 ] int 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;  quotient        2   12[BANK0 ] int 
  9129 ;;  sign            1   11[BANK0 ] unsigned char 
  9130 ;;  counter         1   10[BANK0 ] unsigned char 
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  2    6[BANK0 ] int 
  9133 ;; Registers used:
  9134 ;;		wreg, status,2, status,0
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9140 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9141 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9143 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9144 ;;Total ram usage:        8 bytes
  9145 ;; Hardware stack levels used:    1
  9146 ;; Hardware stack levels required when called:    4
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		_incrementTime
  9151 ;;		_decrementTime
  9152 ;;		_fround
  9153 ;;		_scale
  9154 ;;		_sprintf
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text28
  9159  004222                     __ptext28:
  9160                           	opt stack 0
  9161  004222                     ___awdiv:
  9162                           	opt stack 24
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;incstack = 0
  9166  004222  0E00               	movlw	0
  9167  004224  0100               	movlb	0	; () banked
  9168  004226  6F8B               	movwf	___awdiv@sign& (0+255),b
  9169                           
  9170                           ; BSR set to: 0
  9171  004228  0100               	movlb	0	; () banked
  9172  00422A  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9173  00422C  D008               	goto	l4235
  9174                           
  9175                           ; BSR set to: 0
  9176  00422E  0100               	movlb	0	; () banked
  9177  004230  6D88               	negf	___awdiv@divisor& (0+255),b
  9178  004232  1F89               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9179  004234  B0D8               	btfsc	status,0,c
  9180  004236  2B89               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9181                           
  9182                           ; BSR set to: 0
  9183  004238  0E01               	movlw	1
  9184  00423A  0100               	movlb	0	; () banked
  9185  00423C  6F8B               	movwf	___awdiv@sign& (0+255),b
  9186  00423E                     l4235:
  9187                           
  9188                           ; BSR set to: 0
  9189  00423E  0100               	movlb	0	; () banked
  9190  004240  AF87               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9191  004242  D008               	goto	l4241
  9192                           
  9193                           ; BSR set to: 0
  9194  004244  0100               	movlb	0	; () banked
  9195  004246  6D86               	negf	___awdiv@dividend& (0+255),b
  9196  004248  1F87               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9197  00424A  B0D8               	btfsc	status,0,c
  9198  00424C  2B87               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9199                           
  9200                           ; BSR set to: 0
  9201  00424E  0E01               	movlw	1
  9202  004250  0100               	movlb	0	; () banked
  9203  004252  1B8B               	xorwf	___awdiv@sign& (0+255),f,b
  9204  004254                     l4241:
  9205                           
  9206                           ; BSR set to: 0
  9207  004254  0E00               	movlw	0
  9208  004256  0100               	movlb	0	; () banked
  9209  004258  6F8D               	movwf	(___awdiv@quotient+1)& (0+255),b
  9210  00425A  0E00               	movlw	0
  9211  00425C  6F8C               	movwf	___awdiv@quotient& (0+255),b
  9212                           
  9213                           ; BSR set to: 0
  9214  00425E  0100               	movlb	0	; () banked
  9215  004260  5188               	movf	___awdiv@divisor& (0+255),w,b
  9216  004262  0100               	movlb	0	; () banked
  9217  004264  1189               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9218  004266  B4D8               	btfsc	status,2,c
  9219  004268  D02C               	goto	l4263
  9220                           
  9221                           ; BSR set to: 0
  9222  00426A  0E01               	movlw	1
  9223  00426C  0100               	movlb	0	; () banked
  9224  00426E  6F8A               	movwf	___awdiv@counter& (0+255),b
  9225  004270  D006               	goto	l4249
  9226  004272                     l4247:
  9227                           
  9228                           ; BSR set to: 0
  9229  004272  0100               	movlb	0	; () banked
  9230  004274  90D8               	bcf	status,0,c
  9231  004276  3788               	rlcf	___awdiv@divisor& (0+255),f,b
  9232  004278  3789               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9233  00427A  0100               	movlb	0	; () banked
  9234  00427C  2B8A               	incf	___awdiv@counter& (0+255),f,b
  9235  00427E                     l4249:
  9236                           
  9237                           ; BSR set to: 0
  9238  00427E  0100               	movlb	0	; () banked
  9239  004280  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9240  004282  D7F7               	goto	l4247
  9241  004284                     l4251:
  9242                           
  9243                           ; BSR set to: 0
  9244  004284  0100               	movlb	0	; () banked
  9245  004286  90D8               	bcf	status,0,c
  9246  004288  378C               	rlcf	___awdiv@quotient& (0+255),f,b
  9247  00428A  378D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9248                           
  9249                           ; BSR set to: 0
  9250  00428C  0100               	movlb	0	; () banked
  9251  00428E  5188               	movf	___awdiv@divisor& (0+255),w,b
  9252  004290  0100               	movlb	0	; () banked
  9253  004292  5D86               	subwf	___awdiv@dividend& (0+255),w,b
  9254  004294  0100               	movlb	0	; () banked
  9255  004296  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9256  004298  0100               	movlb	0	; () banked
  9257  00429A  5987               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9258  00429C  A0D8               	btfss	status,0,c
  9259  00429E  D00A               	goto	l4259
  9260                           
  9261                           ; BSR set to: 0
  9262  0042A0  0100               	movlb	0	; () banked
  9263  0042A2  5188               	movf	___awdiv@divisor& (0+255),w,b
  9264  0042A4  0100               	movlb	0	; () banked
  9265  0042A6  5F86               	subwf	___awdiv@dividend& (0+255),f,b
  9266  0042A8  0100               	movlb	0	; () banked
  9267  0042AA  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9268  0042AC  0100               	movlb	0	; () banked
  9269  0042AE  5B87               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9270                           
  9271                           ; BSR set to: 0
  9272  0042B0  0100               	movlb	0	; () banked
  9273  0042B2  818C               	bsf	___awdiv@quotient& (0+255),0,b
  9274  0042B4                     l4259:
  9275                           
  9276                           ; BSR set to: 0
  9277  0042B4  0100               	movlb	0	; () banked
  9278  0042B6  90D8               	bcf	status,0,c
  9279  0042B8  3389               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9280  0042BA  3388               	rrcf	___awdiv@divisor& (0+255),f,b
  9281                           
  9282                           ; BSR set to: 0
  9283  0042BC  0100               	movlb	0	; () banked
  9284  0042BE  2F8A               	decfsz	___awdiv@counter& (0+255),f,b
  9285  0042C0  D7E1               	goto	l4251
  9286  0042C2                     l4263:
  9287                           
  9288                           ; BSR set to: 0
  9289  0042C2  0100               	movlb	0	; () banked
  9290  0042C4  518B               	movf	___awdiv@sign& (0+255),w,b
  9291  0042C6  0100               	movlb	0	; () banked
  9292  0042C8  B4D8               	btfsc	status,2,c
  9293  0042CA  D005               	goto	l4267
  9294                           
  9295                           ; BSR set to: 0
  9296  0042CC  0100               	movlb	0	; () banked
  9297  0042CE  6D8C               	negf	___awdiv@quotient& (0+255),b
  9298  0042D0  1F8D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9299  0042D2  B0D8               	btfsc	status,0,c
  9300  0042D4  2B8D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9301  0042D6                     l4267:
  9302                           
  9303                           ; BSR set to: 0
  9304  0042D6  C08C  F086         	movff	___awdiv@quotient,?___awdiv
  9305  0042DA  C08D  F087         	movff	___awdiv@quotient+1,?___awdiv+1
  9306  0042DE  0012               	return	
  9307  0042E0                     __end_of___awdiv:
  9308                           	opt stack 0
  9309                           tblptru	equ	0xFF8
  9310                           tblptrh	equ	0xFF7
  9311                           tblptrl	equ	0xFF6
  9312                           tablat	equ	0xFF5
  9313                           prodh	equ	0xFF4
  9314                           prodl	equ	0xFF3
  9315                           intcon	equ	0xFF2
  9316                           intcon2	equ	0xFF1
  9317                           intcon3	equ	0xFF0
  9318                           postinc0	equ	0xFEE
  9319                           wreg	equ	0xFE8
  9320                           indf1	equ	0xFE7
  9321                           postdec1	equ	0xFE5
  9322                           fsr1h	equ	0xFE2
  9323                           fsr1l	equ	0xFE1
  9324                           indf2	equ	0xFDF
  9325                           postinc2	equ	0xFDE
  9326                           postdec2	equ	0xFDD
  9327                           fsr2h	equ	0xFDA
  9328                           fsr2l	equ	0xFD9
  9329                           status	equ	0xFD8
  9330                           
  9331 ;; *************** function _buzzerA *****************
  9332 ;; Defined at:
  9333 ;;		line 311 in file "Main.c"
  9334 ;; Parameters:    Size  Location     Type
  9335 ;;		None
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;		None
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  1    wreg      void 
  9340 ;; Registers used:
  9341 ;;		wreg, status,2, status,0, cstack
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9351 ;;Total ram usage:        0 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:    5
  9354 ;; This function calls:
  9355 ;;		_delay_ms
  9356 ;; This function is called by:
  9357 ;;		_main
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           	psect	text29
  9362  0047E6                     __ptext29:
  9363                           	opt stack 0
  9364  0047E6                     _buzzerA:
  9365                           	opt stack 25
  9366                           
  9367                           ;Main.c: 312: PORTCbits.RC1 = 1;
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;incstack = 0
  9371  0047E6  8282               	bsf	3970,1,c	;volatile
  9372                           
  9373                           ;Main.c: 313: delay_ms(2000);
  9374  0047E8  0E07               	movlw	7
  9375  0047EA  0100               	movlb	0	; () banked
  9376  0047EC  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  9377  0047EE  0ED0               	movlw	208
  9378  0047F0  6F80               	movwf	delay_ms@n& (0+255),b
  9379  0047F2  ECA3  F026         	call	_delay_ms	;wreg free
  9380                           
  9381                           ;Main.c: 314: PORTCbits.RC1 = 0;
  9382  0047F6  9282               	bcf	3970,1,c	;volatile
  9383                           
  9384                           ;Main.c: 315: delay_ms(2000);
  9385  0047F8  0E07               	movlw	7
  9386  0047FA  0100               	movlb	0	; () banked
  9387  0047FC  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  9388  0047FE  0ED0               	movlw	208
  9389  004800  6F80               	movwf	delay_ms@n& (0+255),b
  9390  004802  ECA3  F026         	call	_delay_ms	;wreg free
  9391                           
  9392                           ;Main.c: 316: PORTCbits.RC1 = 1;
  9393  004806  8282               	bsf	3970,1,c	;volatile
  9394                           
  9395                           ;Main.c: 317: delay_ms(2000);
  9396  004808  0E07               	movlw	7
  9397  00480A  0100               	movlb	0	; () banked
  9398  00480C  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  9399  00480E  0ED0               	movlw	208
  9400  004810  6F80               	movwf	delay_ms@n& (0+255),b
  9401  004812  ECA3  F026         	call	_delay_ms	;wreg free
  9402                           
  9403                           ;Main.c: 318: PORTCbits.RC1 = 0;
  9404  004816  9282               	bcf	3970,1,c	;volatile
  9405                           
  9406                           ;Main.c: 319: delay_ms(2000);
  9407  004818  0E07               	movlw	7
  9408  00481A  0100               	movlb	0	; () banked
  9409  00481C  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  9410  00481E  0ED0               	movlw	208
  9411  004820  6F80               	movwf	delay_ms@n& (0+255),b
  9412  004822  ECA3  F026         	call	_delay_ms	;wreg free
  9413                           
  9414                           ;Main.c: 320: PORTCbits.RC1 = 1;
  9415  004826  8282               	bsf	3970,1,c	;volatile
  9416                           
  9417                           ;Main.c: 321: delay_ms(2000);
  9418  004828  0E07               	movlw	7
  9419  00482A  0100               	movlb	0	; () banked
  9420  00482C  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  9421  00482E  0ED0               	movlw	208
  9422  004830  6F80               	movwf	delay_ms@n& (0+255),b
  9423  004832  ECA3  F026         	call	_delay_ms	;wreg free
  9424                           
  9425                           ;Main.c: 322: PORTCbits.RC1 = 0;
  9426  004836  9282               	bcf	3970,1,c	;volatile
  9427                           
  9428                           ;Main.c: 323: delay_ms(2000);
  9429  004838  0E07               	movlw	7
  9430  00483A  0100               	movlb	0	; () banked
  9431  00483C  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  9432  00483E  0ED0               	movlw	208
  9433  004840  6F80               	movwf	delay_ms@n& (0+255),b
  9434  004842  ECA3  F026         	call	_delay_ms	;wreg free
  9435                           
  9436                           ;Main.c: 324: PORTCbits.RC1 = 1;
  9437  004846  8282               	bsf	3970,1,c	;volatile
  9438                           
  9439                           ;Main.c: 325: delay_ms(2000);
  9440  004848  0E07               	movlw	7
  9441  00484A  0100               	movlb	0	; () banked
  9442  00484C  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  9443  00484E  0ED0               	movlw	208
  9444  004850  6F80               	movwf	delay_ms@n& (0+255),b
  9445  004852  ECA3  F026         	call	_delay_ms	;wreg free
  9446                           
  9447                           ;Main.c: 326: PORTCbits.RC1 = 0;
  9448  004856  9282               	bcf	3970,1,c	;volatile
  9449                           
  9450                           ;Main.c: 327: delay_ms(2000);
  9451  004858  0E07               	movlw	7
  9452  00485A  0100               	movlb	0	; () banked
  9453  00485C  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  9454  00485E  0ED0               	movlw	208
  9455  004860  6F80               	movwf	delay_ms@n& (0+255),b
  9456  004862  ECA3  F026         	call	_delay_ms	;wreg free
  9457  004866  0012               	return		;funcret
  9458  004868                     __end_of_buzzerA:
  9459                           	opt stack 0
  9460                           tblptru	equ	0xFF8
  9461                           tblptrh	equ	0xFF7
  9462                           tblptrl	equ	0xFF6
  9463                           tablat	equ	0xFF5
  9464                           prodh	equ	0xFF4
  9465                           prodl	equ	0xFF3
  9466                           intcon	equ	0xFF2
  9467                           intcon2	equ	0xFF1
  9468                           intcon3	equ	0xFF0
  9469                           postinc0	equ	0xFEE
  9470                           wreg	equ	0xFE8
  9471                           indf1	equ	0xFE7
  9472                           postdec1	equ	0xFE5
  9473                           fsr1h	equ	0xFE2
  9474                           fsr1l	equ	0xFE1
  9475                           indf2	equ	0xFDF
  9476                           postinc2	equ	0xFDE
  9477                           postdec2	equ	0xFDD
  9478                           fsr2h	equ	0xFDA
  9479                           fsr2l	equ	0xFD9
  9480                           status	equ	0xFD8
  9481                           
  9482 ;; *************** function _delay_ms *****************
  9483 ;; Defined at:
  9484 ;;		line 93 in file "Main.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;  n               2    0[BANK0 ] unsigned int 
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;  i               2    2[BANK0 ] int 
  9489 ;; Return value:  Size  Location     Type
  9490 ;;                  1    wreg      void 
  9491 ;; Registers used:
  9492 ;;		wreg, status,2, status,0
  9493 ;; Tracked objects:
  9494 ;;		On entry : 0/0
  9495 ;;		On exit  : 0/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9498 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9499 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9501 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9502 ;;Total ram usage:        4 bytes
  9503 ;; Hardware stack levels used:    1
  9504 ;; Hardware stack levels required when called:    4
  9505 ;; This function calls:
  9506 ;;		Nothing
  9507 ;; This function is called by:
  9508 ;;		_lcd_send_byte
  9509 ;;		_lcd_init
  9510 ;;		_lcd_putc
  9511 ;;		_buzzerA
  9512 ;;		_main
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           	psect	text30
  9517  004D46                     __ptext30:
  9518                           	opt stack 0
  9519  004D46                     _delay_ms:
  9520                           	opt stack 23
  9521                           
  9522                           ;Main.c: 94: int i;
  9523                           ;Main.c: 95: for (i=0; i < n; i++) _delaywdt((unsigned long)((1)*(4000000UL/4000.0))) ;
  9524                           
  9525                           ;incstack = 0
  9526  004D46  0E00               	movlw	0
  9527  004D48  0100               	movlb	0	; () banked
  9528  004D4A  6F83               	movwf	(delay_ms@i+1)& (0+255),b
  9529  004D4C  0E00               	movlw	0
  9530  004D4E  6F82               	movwf	delay_ms@i& (0+255),b
  9531  004D50  D007               	goto	l95
  9532  004D52                     l3707:
  9533                           
  9534                           ; BSR set to: 0
  9535  004D52  0EFA               	movlw	250
  9536  004D54                     u7987:
  9537  004D54  0004               	clrwdt	
  9538  004D56  2EE8               	decfsz	wreg,f,c
  9539  004D58  D7FD               	goto	u7987
  9540  004D5A  0100               	movlb	0	; () banked
  9541  004D5C  4B82               	infsnz	delay_ms@i& (0+255),f,b
  9542  004D5E  2B83               	incf	(delay_ms@i+1)& (0+255),f,b
  9543  004D60                     l95:
  9544                           
  9545                           ; BSR set to: 0
  9546  004D60  0100               	movlb	0	; () banked
  9547  004D62  5180               	movf	delay_ms@n& (0+255),w,b
  9548  004D64  0100               	movlb	0	; () banked
  9549  004D66  5D82               	subwf	delay_ms@i& (0+255),w,b
  9550  004D68  0100               	movlb	0	; () banked
  9551  004D6A  5181               	movf	(delay_ms@n+1)& (0+255),w,b
  9552  004D6C  0100               	movlb	0	; () banked
  9553  004D6E  5983               	subwfb	(delay_ms@i+1)& (0+255),w,b
  9554  004D70  B0D8               	btfsc	status,0,c
  9555  004D72  0012               	return	
  9556  004D74  D7EE               	goto	l3707
  9557  004D76                     __end_of_delay_ms:
  9558                           	opt stack 0
  9559                           tblptru	equ	0xFF8
  9560                           tblptrh	equ	0xFF7
  9561                           tblptrl	equ	0xFF6
  9562                           tablat	equ	0xFF5
  9563                           prodh	equ	0xFF4
  9564                           prodl	equ	0xFF3
  9565                           intcon	equ	0xFF2
  9566                           intcon2	equ	0xFF1
  9567                           intcon3	equ	0xFF0
  9568                           postinc0	equ	0xFEE
  9569                           wreg	equ	0xFE8
  9570                           indf1	equ	0xFE7
  9571                           postdec1	equ	0xFE5
  9572                           fsr1h	equ	0xFE2
  9573                           fsr1l	equ	0xFE1
  9574                           indf2	equ	0xFDF
  9575                           postinc2	equ	0xFDE
  9576                           postdec2	equ	0xFDD
  9577                           fsr2h	equ	0xFDA
  9578                           fsr2l	equ	0xFD9
  9579                           status	equ	0xFD8
  9580                           
  9581 ;; *************** function _Auto_Heat *****************
  9582 ;; Defined at:
  9583 ;;		line 446 in file "Main.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;		None
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;		None
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  1    wreg      void 
  9590 ;; Registers used:
  9591 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9601 ;;Total ram usage:        0 bytes
  9602 ;; Hardware stack levels used:    1
  9603 ;; Hardware stack levels required when called:    6
  9604 ;; This function calls:
  9605 ;;		___fladd
  9606 ;;		___flge
  9607 ;;		___flneg
  9608 ;;		___fltol
  9609 ;;		___xxtofl
  9610 ;;		_set_pwm1_percent
  9611 ;; This function is called by:
  9612 ;;		_main
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           
  9616                           	psect	text31
  9617  003864                     __ptext31:
  9618                           	opt stack 0
  9619  003864                     _Auto_Heat:
  9620                           	opt stack 24
  9621                           
  9622                           ;Main.c: 449: if (t > (sp + hys))
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;incstack = 0
  9626  003864  C0E2  F0B8         	movff	_sp,___fladd@a
  9627  003868  C0E3  F0B9         	movff	_sp+1,___fladd@a+1
  9628  00386C  C0E4  F0BA         	movff	_sp+2,___fladd@a+2
  9629  003870  C0E5  F0BB         	movff	_sp+3,___fladd@a+3
  9630  003874  C0EC  F086         	movff	_hys,___xxtofl@val
  9631  003878  C0ED  F087         	movff	_hys+1,___xxtofl@val+1
  9632  00387C  0100               	movlb	0	; () banked
  9633  00387E  0E00               	movlw	0
  9634  003880  BF87               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  9635  003882  0EFF               	movlw	-1
  9636  003884  6F88               	movwf	(___xxtofl@val+2)& (0+255),b
  9637  003886  6F89               	movwf	(___xxtofl@val+3)& (0+255),b
  9638  003888  0E01               	movlw	1
  9639  00388A  ECF0  F018         	call	___xxtofl
  9640  00388E  C086  F0B4         	movff	?___xxtofl,___fladd@b
  9641  003892  C087  F0B5         	movff	?___xxtofl+1,___fladd@b+1
  9642  003896  C088  F0B6         	movff	?___xxtofl+2,___fladd@b+2
  9643  00389A  C089  F0B7         	movff	?___xxtofl+3,___fladd@b+3
  9644  00389E  EC4E  F00C         	call	___fladd	;wreg free
  9645  0038A2  C0B4  F0C8         	movff	?___fladd,___flge@ff1
  9646  0038A6  C0B5  F0C9         	movff	?___fladd+1,___flge@ff1+1
  9647  0038AA  C0B6  F0CA         	movff	?___fladd+2,___flge@ff1+2
  9648  0038AE  C0B7  F0CB         	movff	?___fladd+3,___flge@ff1+3
  9649  0038B2  C0E6  F0CC         	movff	_t,___flge@ff2
  9650  0038B6  C0E7  F0CD         	movff	_t+1,___flge@ff2+1
  9651  0038BA  C0E8  F0CE         	movff	_t+2,___flge@ff2+2
  9652  0038BE  C0E9  F0CF         	movff	_t+3,___flge@ff2+3
  9653  0038C2  ECA6  F01A         	call	___flge	;wreg free
  9654  0038C6  0100               	movlb	0	; () banked
  9655  0038C8  B0D8               	btfsc	status,0,c
  9656  0038CA  D002               	goto	l5639
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;Main.c: 450: PORTCbits.RC5=0;
  9660  0038CC  9A82               	bcf	3970,5,c	;volatile
  9661  0038CE  0012               	return	
  9662  0038D0                     l5639:
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;Main.c: 451: else {
  9666                           ;Main.c: 452: error = sp-t;
  9667  0038D0  C0E2  F0B8         	movff	_sp,___fladd@a
  9668  0038D4  C0E3  F0B9         	movff	_sp+1,___fladd@a+1
  9669  0038D8  C0E4  F0BA         	movff	_sp+2,___fladd@a+2
  9670  0038DC  C0E5  F0BB         	movff	_sp+3,___fladd@a+3
  9671  0038E0  C0E6  F080         	movff	_t,___flneg@f1
  9672  0038E4  C0E7  F081         	movff	_t+1,___flneg@f1+1
  9673  0038E8  C0E8  F082         	movff	_t+2,___flneg@f1+2
  9674  0038EC  C0E9  F083         	movff	_t+3,___flneg@f1+3
  9675  0038F0  EC6C  F026         	call	___flneg	;wreg free
  9676  0038F4  C080  F0B4         	movff	?___flneg,___fladd@b
  9677  0038F8  C081  F0B5         	movff	?___flneg+1,___fladd@b+1
  9678  0038FC  C082  F0B6         	movff	?___flneg+2,___fladd@b+2
  9679  003900  C083  F0B7         	movff	?___flneg+3,___fladd@b+3
  9680  003904  EC4E  F00C         	call	___fladd	;wreg free
  9681  003908  C0B4  F0C8         	movff	?___fladd,___fltol@f1
  9682  00390C  C0B5  F0C9         	movff	?___fladd+1,___fltol@f1+1
  9683  003910  C0B6  F0CA         	movff	?___fladd+2,___fltol@f1+2
  9684  003914  C0B7  F0CB         	movff	?___fladd+3,___fltol@f1+3
  9685  003918  EC5A  F01F         	call	___fltol	;wreg free
  9686  00391C  C0C8  F0EA         	movff	?___fltol,_error
  9687  003920  C0C9  F0EB         	movff	?___fltol+1,_error+1
  9688                           
  9689                           ;Main.c: 453: if( error > 10) error = 10;
  9690  003924  0100               	movlb	0	; () banked
  9691  003926  BFEB               	btfsc	(_error+1)& (0+255),7,b
  9692  003928  D008               	goto	l5645
  9693  00392A  0100               	movlb	0	; () banked
  9694  00392C  51EB               	movf	(_error+1)& (0+255),w,b
  9695  00392E  E12B               	bnz	l5651
  9696  003930  0E0B               	movlw	11
  9697  003932  0100               	movlb	0	; () banked
  9698  003934  5DEA               	subwf	_error& (0+255),w,b
  9699  003936  B0D8               	btfsc	status,0,c
  9700  003938  D026               	goto	l5651
  9701  00393A                     l5645:
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;Main.c: 454: else if( error < 5) error= 5;
  9705  00393A  0100               	movlb	0	; () banked
  9706  00393C  BFEB               	btfsc	(_error+1)& (0+255),7,b
  9707  00393E  D008               	goto	l5647
  9708  003940  0100               	movlb	0	; () banked
  9709  003942  51EB               	movf	(_error+1)& (0+255),w,b
  9710  003944  E10A               	bnz	l5649
  9711  003946  0E05               	movlw	5
  9712  003948  0100               	movlb	0	; () banked
  9713  00394A  5DEA               	subwf	_error& (0+255),w,b
  9714  00394C  B0D8               	btfsc	status,0,c
  9715  00394E  D005               	goto	l5649
  9716  003950                     l5647:
  9717                           
  9718                           ; BSR set to: 0
  9719  003950  0E00               	movlw	0
  9720  003952  0100               	movlb	0	; () banked
  9721  003954  6FEB               	movwf	(_error+1)& (0+255),b
  9722  003956  0E05               	movlw	5
  9723  003958  D01A               	goto	L19
  9724  00395A                     l5649:
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;Main.c: 455: else if( sp > 155) error = 10;
  9728  00395A  0E00               	movlw	0
  9729  00395C  0100               	movlb	0	; () banked
  9730  00395E  6FC8               	movwf	___flge@ff1& (0+255),b
  9731  003960  0E00               	movlw	0
  9732  003962  6FC9               	movwf	(___flge@ff1+1)& (0+255),b
  9733  003964  0E1B               	movlw	27
  9734  003966  6FCA               	movwf	(___flge@ff1+2)& (0+255),b
  9735  003968  0E43               	movlw	67
  9736  00396A  6FCB               	movwf	(___flge@ff1+3)& (0+255),b
  9737  00396C  C0E2  F0CC         	movff	_sp,___flge@ff2
  9738  003970  C0E3  F0CD         	movff	_sp+1,___flge@ff2+1
  9739  003974  C0E4  F0CE         	movff	_sp+2,___flge@ff2+2
  9740  003978  C0E5  F0CF         	movff	_sp+3,___flge@ff2+3
  9741  00397C  ECA6  F01A         	call	___flge	;wreg free
  9742  003980  0100               	movlb	0	; () banked
  9743  003982  B0D8               	btfsc	status,0,c
  9744  003984  D005               	goto	l5653
  9745  003986                     l5651:
  9746                           
  9747                           ; BSR set to: 0
  9748  003986  0E00               	movlw	0
  9749  003988  0100               	movlb	0	; () banked
  9750  00398A  6FEB               	movwf	(_error+1)& (0+255),b
  9751  00398C  0E0A               	movlw	10
  9752  00398E                     L19:
  9753  00398E  6FEA               	movwf	_error& (0+255),b
  9754  003990                     l5653:
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;Main.c: 457: Percent_Heat_Counter = error;
  9758  003990  C0EA  F05E         	movff	_error,_Percent_Heat_Counter
  9759                           
  9760                           ; BSR set to: 0
  9761                           ;Main.c: 459: set_pwm1_percent(Percent_Heat_Counter);
  9762  003994  505E               	movf	_Percent_Heat_Counter,w,c
  9763  003996  0100               	movlb	0	; () banked
  9764  003998  6F86               	movwf	___xxtofl@val& (0+255),b
  9765  00399A  6B87               	clrf	(___xxtofl@val+1)& (0+255),b
  9766  00399C  6B88               	clrf	(___xxtofl@val+2)& (0+255),b
  9767  00399E  6B89               	clrf	(___xxtofl@val+3)& (0+255),b
  9768  0039A0  0E00               	movlw	0
  9769  0039A2  ECF0  F018         	call	___xxtofl
  9770  0039A6  C086  F0D2         	movff	?___xxtofl,set_pwm1_percent@value
  9771  0039AA  C087  F0D3         	movff	?___xxtofl+1,set_pwm1_percent@value+1
  9772  0039AE  C088  F0D4         	movff	?___xxtofl+2,set_pwm1_percent@value+2
  9773  0039B2  C089  F0D5         	movff	?___xxtofl+3,set_pwm1_percent@value+3
  9774  0039B6  EC4E  F020         	call	_set_pwm1_percent	;wreg free
  9775  0039BA  0012               	return	
  9776  0039BC                     __end_of_Auto_Heat:
  9777                           	opt stack 0
  9778                           tblptru	equ	0xFF8
  9779                           tblptrh	equ	0xFF7
  9780                           tblptrl	equ	0xFF6
  9781                           tablat	equ	0xFF5
  9782                           prodh	equ	0xFF4
  9783                           prodl	equ	0xFF3
  9784                           intcon	equ	0xFF2
  9785                           intcon2	equ	0xFF1
  9786                           intcon3	equ	0xFF0
  9787                           postinc0	equ	0xFEE
  9788                           wreg	equ	0xFE8
  9789                           indf1	equ	0xFE7
  9790                           postdec1	equ	0xFE5
  9791                           fsr1h	equ	0xFE2
  9792                           fsr1l	equ	0xFE1
  9793                           indf2	equ	0xFDF
  9794                           postinc2	equ	0xFDE
  9795                           postdec2	equ	0xFDD
  9796                           fsr2h	equ	0xFDA
  9797                           fsr2l	equ	0xFD9
  9798                           status	equ	0xFD8
  9799                           
  9800 ;; *************** function _set_pwm1_percent *****************
  9801 ;; Defined at:
  9802 ;;		line 273 in file "Main.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  value           4   82[BANK0 ] float 
  9805 ;; Auto vars:     Size  Location     Type
  9806 ;;  tmp             4   86[BANK0 ] float 
  9807 ;;  raw_val         2   90[BANK0 ] int 
  9808 ;; Return value:  Size  Location     Type
  9809 ;;                  1    wreg      void 
  9810 ;; Registers used:
  9811 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9812 ;; Tracked objects:
  9813 ;;		On entry : 0/0
  9814 ;;		On exit  : 0/0
  9815 ;;		Unchanged: 0/0
  9816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9817 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9818 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;Total ram usage:       10 bytes
  9822 ;; Hardware stack levels used:    1
  9823 ;; Hardware stack levels required when called:    5
  9824 ;; This function calls:
  9825 ;;		___fladd
  9826 ;;		___fldiv
  9827 ;;		___flmul
  9828 ;;		___fltol
  9829 ;;		_set_pwm1_raw
  9830 ;; This function is called by:
  9831 ;;		_Auto_Heat
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text32
  9836  00409C                     __ptext32:
  9837                           	opt stack 0
  9838  00409C                     _set_pwm1_percent:
  9839                           	opt stack 24
  9840                           
  9841                           ;Main.c: 275: float tmp = value*1023.0/100.0;
  9842                           
  9843                           ;incstack = 0
  9844  00409C  0E00               	movlw	0
  9845  00409E  0100               	movlb	0	; () banked
  9846  0040A0  6F92               	movwf	___flmul@a& (0+255),b
  9847  0040A2  0EC0               	movlw	192
  9848  0040A4  6F93               	movwf	(___flmul@a+1)& (0+255),b
  9849  0040A6  0E7F               	movlw	127
  9850  0040A8  6F94               	movwf	(___flmul@a+2)& (0+255),b
  9851  0040AA  0E44               	movlw	68
  9852  0040AC  6F95               	movwf	(___flmul@a+3)& (0+255),b
  9853  0040AE  C0D2  F08E         	movff	set_pwm1_percent@value,___flmul@b
  9854  0040B2  C0D3  F08F         	movff	set_pwm1_percent@value+1,___flmul@b+1
  9855  0040B6  C0D4  F090         	movff	set_pwm1_percent@value+2,___flmul@b+2
  9856  0040BA  C0D5  F091         	movff	set_pwm1_percent@value+3,___flmul@b+3
  9857  0040BE  ECA2  F00E         	call	___flmul	;wreg free
  9858  0040C2  C08E  F0A7         	movff	?___flmul,___fldiv@b
  9859  0040C6  C08F  F0A8         	movff	?___flmul+1,___fldiv@b+1
  9860  0040CA  C090  F0A9         	movff	?___flmul+2,___fldiv@b+2
  9861  0040CE  C091  F0AA         	movff	?___flmul+3,___fldiv@b+3
  9862  0040D2  0E00               	movlw	0
  9863  0040D4  0100               	movlb	0	; () banked
  9864  0040D6  6FAB               	movwf	___fldiv@a& (0+255),b
  9865  0040D8  0E00               	movlw	0
  9866  0040DA  6FAC               	movwf	(___fldiv@a+1)& (0+255),b
  9867  0040DC  0EC8               	movlw	200
  9868  0040DE  6FAD               	movwf	(___fldiv@a+2)& (0+255),b
  9869  0040E0  0E42               	movlw	66
  9870  0040E2  6FAE               	movwf	(___fldiv@a+3)& (0+255),b
  9871  0040E4  ECF5  F010         	call	___fldiv	;wreg free
  9872  0040E8  C0A7  F0D6         	movff	?___fldiv,set_pwm1_percent@tmp
  9873  0040EC  C0A8  F0D7         	movff	?___fldiv+1,set_pwm1_percent@tmp+1
  9874  0040F0  C0A9  F0D8         	movff	?___fldiv+2,set_pwm1_percent@tmp+2
  9875  0040F4  C0AA  F0D9         	movff	?___fldiv+3,set_pwm1_percent@tmp+3
  9876                           
  9877                           ;Main.c: 276: int raw_val = (int)(tmp +0.5);
  9878  0040F8  0E00               	movlw	0
  9879  0040FA  0100               	movlb	0	; () banked
  9880  0040FC  6FB8               	movwf	___fladd@a& (0+255),b
  9881  0040FE  0E00               	movlw	0
  9882  004100  6FB9               	movwf	(___fladd@a+1)& (0+255),b
  9883  004102  0E00               	movlw	0
  9884  004104  6FBA               	movwf	(___fladd@a+2)& (0+255),b
  9885  004106  0E3F               	movlw	63
  9886  004108  6FBB               	movwf	(___fladd@a+3)& (0+255),b
  9887  00410A  C0D6  F0B4         	movff	set_pwm1_percent@tmp,___fladd@b
  9888  00410E  C0D7  F0B5         	movff	set_pwm1_percent@tmp+1,___fladd@b+1
  9889  004112  C0D8  F0B6         	movff	set_pwm1_percent@tmp+2,___fladd@b+2
  9890  004116  C0D9  F0B7         	movff	set_pwm1_percent@tmp+3,___fladd@b+3
  9891  00411A  EC4E  F00C         	call	___fladd	;wreg free
  9892  00411E  C0B4  F0C8         	movff	?___fladd,___fltol@f1
  9893  004122  C0B5  F0C9         	movff	?___fladd+1,___fltol@f1+1
  9894  004126  C0B6  F0CA         	movff	?___fladd+2,___fltol@f1+2
  9895  00412A  C0B7  F0CB         	movff	?___fladd+3,___fltol@f1+3
  9896  00412E  EC5A  F01F         	call	___fltol	;wreg free
  9897  004132  C0C8  F0DA         	movff	?___fltol,set_pwm1_percent@raw_val
  9898  004136  C0C9  F0DB         	movff	?___fltol+1,set_pwm1_percent@raw_val+1
  9899                           
  9900                           ;Main.c: 277: if ( raw_val> 1023) raw_val = 1023;
  9901  00413A  0100               	movlb	0	; () banked
  9902  00413C  BFDB               	btfsc	(set_pwm1_percent@raw_val+1)& (0+255),7,b
  9903  00413E  D009               	goto	l4899
  9904  004140  0E04               	movlw	4
  9905  004142  0100               	movlb	0	; () banked
  9906  004144  5DDB               	subwf	(set_pwm1_percent@raw_val+1)& (0+255),w,b
  9907  004146  A0D8               	btfss	status,0,c
  9908  004148  D004               	goto	l4899
  9909                           
  9910                           ; BSR set to: 0
  9911  00414A  0E03               	movlw	3
  9912  00414C  0100               	movlb	0	; () banked
  9913  00414E  6FDB               	movwf	(set_pwm1_percent@raw_val+1)& (0+255),b
  9914  004150  69DA               	setf	set_pwm1_percent@raw_val& (0+255),b
  9915  004152                     l4899:
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;Main.c: 278: set_pwm1_raw(raw_val);
  9919  004152  C0DA  F080         	movff	set_pwm1_percent@raw_val,set_pwm1_raw@raw_value
  9920  004156  C0DB  F081         	movff	set_pwm1_percent@raw_val+1,set_pwm1_raw@raw_value+1
  9921  00415A  EC4F  F026         	call	_set_pwm1_raw	;wreg free
  9922  00415E  0012               	return		;funcret
  9923  004160                     __end_of_set_pwm1_percent:
  9924                           	opt stack 0
  9925                           tblptru	equ	0xFF8
  9926                           tblptrh	equ	0xFF7
  9927                           tblptrl	equ	0xFF6
  9928                           tablat	equ	0xFF5
  9929                           prodh	equ	0xFF4
  9930                           prodl	equ	0xFF3
  9931                           intcon	equ	0xFF2
  9932                           intcon2	equ	0xFF1
  9933                           intcon3	equ	0xFF0
  9934                           postinc0	equ	0xFEE
  9935                           wreg	equ	0xFE8
  9936                           indf1	equ	0xFE7
  9937                           postdec1	equ	0xFE5
  9938                           fsr1h	equ	0xFE2
  9939                           fsr1l	equ	0xFE1
  9940                           indf2	equ	0xFDF
  9941                           postinc2	equ	0xFDE
  9942                           postdec2	equ	0xFDD
  9943                           fsr2h	equ	0xFDA
  9944                           fsr2l	equ	0xFD9
  9945                           status	equ	0xFD8
  9946                           
  9947 ;; *************** function _set_pwm1_raw *****************
  9948 ;; Defined at:
  9949 ;;		line 267 in file "Main.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;  raw_value       2    0[BANK0 ] unsigned int 
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;		None
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  1    wreg      void 
  9956 ;; Registers used:
  9957 ;;		wreg, status,2, status,0
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9963 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9965 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9966 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9967 ;;Total ram usage:        4 bytes
  9968 ;; Hardware stack levels used:    1
  9969 ;; Hardware stack levels required when called:    4
  9970 ;; This function calls:
  9971 ;;		Nothing
  9972 ;; This function is called by:
  9973 ;;		_set_pwm1_percent
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977                           	psect	text33
  9978  004C9E                     __ptext33:
  9979                           	opt stack 0
  9980  004C9E                     _set_pwm1_raw:
  9981                           	opt stack 24
  9982                           
  9983                           ;Main.c: 269: CCPR1L = (raw_value >> 2) & 0x00FF;
  9984                           
  9985                           ;incstack = 0
  9986  004C9E  C080  F082         	movff	set_pwm1_raw@raw_value,??_set_pwm1_raw
  9987  004CA2  C081  F083         	movff	set_pwm1_raw@raw_value+1,??_set_pwm1_raw+1
  9988  004CA6  0100               	movlb	0	; () banked
  9989  004CA8  90D8               	bcf	status,0,c
  9990  004CAA  3383               	rrcf	(??_set_pwm1_raw+1)& (0+255),f,b
  9991  004CAC  3382               	rrcf	??_set_pwm1_raw& (0+255),f,b
  9992  004CAE  0100               	movlb	0	; () banked
  9993  004CB0  90D8               	bcf	status,0,c
  9994  004CB2  3383               	rrcf	(??_set_pwm1_raw+1)& (0+255),f,b
  9995  004CB4  3382               	rrcf	??_set_pwm1_raw& (0+255),f,b
  9996  004CB6  0100               	movlb	0	; () banked
  9997  004CB8  5182               	movf	??_set_pwm1_raw& (0+255),w,b
  9998  004CBA  6EBE               	movwf	4030,c	;volatile
  9999                           
 10000                           ;Main.c: 270: CCP1CONbits.DC1B = raw_value & 0x0003;
 10001  004CBC  C080  F082         	movff	set_pwm1_raw@raw_value,??_set_pwm1_raw
 10002  004CC0  0E03               	movlw	3
 10003  004CC2  0100               	movlb	0	; () banked
 10004  004CC4  1782               	andwf	??_set_pwm1_raw& (0+255),f,b
 10005  004CC6  0100               	movlb	0	; () banked
 10006  004CC8  3B82               	swapf	??_set_pwm1_raw& (0+255),f,b
 10007  004CCA  50BD               	movf	4029,w,c	;volatile
 10008  004CCC  0100               	movlb	0	; () banked
 10009  004CCE  1982               	xorwf	??_set_pwm1_raw& (0+255),w,b
 10010  004CD0  0BCF               	andlw	-49
 10011  004CD2  1982               	xorwf	??_set_pwm1_raw& (0+255),w,b
 10012  004CD4  6EBD               	movwf	4029,c	;volatile
 10013                           
 10014                           ; BSR set to: 0
 10015  004CD6  0012               	return		;funcret
 10016  004CD8                     __end_of_set_pwm1_raw:
 10017                           	opt stack 0
 10018                           tblptru	equ	0xFF8
 10019                           tblptrh	equ	0xFF7
 10020                           tblptrl	equ	0xFF6
 10021                           tablat	equ	0xFF5
 10022                           prodh	equ	0xFF4
 10023                           prodl	equ	0xFF3
 10024                           intcon	equ	0xFF2
 10025                           intcon2	equ	0xFF1
 10026                           intcon3	equ	0xFF0
 10027                           postinc0	equ	0xFEE
 10028                           wreg	equ	0xFE8
 10029                           indf1	equ	0xFE7
 10030                           postdec1	equ	0xFE5
 10031                           fsr1h	equ	0xFE2
 10032                           fsr1l	equ	0xFE1
 10033                           indf2	equ	0xFDF
 10034                           postinc2	equ	0xFDE
 10035                           postdec2	equ	0xFDD
 10036                           fsr2h	equ	0xFDA
 10037                           fsr2l	equ	0xFD9
 10038                           status	equ	0xFD8
 10039                           
 10040 ;; *************** function ___fltol *****************
 10041 ;; Defined at:
 10042 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;  f1              4   72[BANK0 ] void 
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;  exp1            1   81[BANK0 ] unsigned char 
 10047 ;;  sign1           1   80[BANK0 ] unsigned char 
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  4   72[BANK0 ] long 
 10050 ;; Registers used:
 10051 ;;		wreg, status,2, status,0
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10057 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10058 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10059 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10060 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10061 ;;Total ram usage:       10 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:    4
 10064 ;; This function calls:
 10065 ;;		Nothing
 10066 ;; This function is called by:
 10067 ;;		_set_pwm1_percent
 10068 ;;		_Auto_Heat
 10069 ;;		_sprintf
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073                           	psect	text34
 10074  003EB4                     __ptext34:
 10075                           	opt stack 0
 10076  003EB4                     ___fltol:
 10077                           	opt stack 25
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;incstack = 0
 10081  003EB4  0100               	movlb	0	; () banked
 10082  003EB6  35CA               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10083  003EB8  35CB               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10084  003EBA  0100               	movlb	0	; () banked
 10085  003EBC  6FD1               	movwf	___fltol@exp1& (0+255),b
 10086  003EBE  0100               	movlb	0	; () banked
 10087  003EC0  51D1               	movf	___fltol@exp1& (0+255),w,b
 10088  003EC2  A4D8               	btfss	status,2,c
 10089  003EC4  D00A               	goto	l4313
 10090                           
 10091                           ; BSR set to: 0
 10092  003EC6  0E00               	movlw	0
 10093  003EC8  0100               	movlb	0	; () banked
 10094  003ECA  6FC8               	movwf	?___fltol& (0+255),b
 10095  003ECC  0E00               	movlw	0
 10096  003ECE  6FC9               	movwf	(?___fltol+1)& (0+255),b
 10097  003ED0  0E00               	movlw	0
 10098  003ED2  6FCA               	movwf	(?___fltol+2)& (0+255),b
 10099  003ED4  0E00               	movlw	0
 10100  003ED6  6FCB               	movwf	(?___fltol+3)& (0+255),b
 10101                           
 10102                           ; BSR set to: 0
 10103  003ED8  0012               	return	
 10104  003EDA                     l4313:
 10105                           
 10106                           ; BSR set to: 0
 10107  003EDA  C0C8  F0CC         	movff	___fltol@f1,??___fltol
 10108  003EDE  C0C9  F0CD         	movff	___fltol@f1+1,??___fltol+1
 10109  003EE2  C0CA  F0CE         	movff	___fltol@f1+2,??___fltol+2
 10110  003EE6  C0CB  F0CF         	movff	___fltol@f1+3,??___fltol+3
 10111  003EEA  0E20               	movlw	32
 10112  003EEC  D006               	goto	u4970
 10113  003EEE                     u4975:
 10114  003EEE  0100               	movlb	0	; () banked
 10115  003EF0  90D8               	bcf	status,0,c
 10116  003EF2  33CF               	rrcf	(??___fltol+3)& (0+255),f,b
 10117  003EF4  33CE               	rrcf	(??___fltol+2)& (0+255),f,b
 10118  003EF6  33CD               	rrcf	(??___fltol+1)& (0+255),f,b
 10119  003EF8  33CC               	rrcf	??___fltol& (0+255),f,b
 10120  003EFA                     u4970:
 10121  003EFA  2EE8               	decfsz	wreg,f,c
 10122  003EFC  D7F8               	goto	u4975
 10123  003EFE  0100               	movlb	0	; () banked
 10124  003F00  51CC               	movf	??___fltol& (0+255),w,b
 10125  003F02  0100               	movlb	0	; () banked
 10126  003F04  6FD0               	movwf	___fltol@sign1& (0+255),b
 10127                           
 10128                           ; BSR set to: 0
 10129  003F06  0100               	movlb	0	; () banked
 10130  003F08  8FCA               	bsf	(___fltol@f1+2)& (0+255),7,b
 10131                           
 10132                           ; BSR set to: 0
 10133  003F0A  0EFF               	movlw	255
 10134  003F0C  0100               	movlb	0	; () banked
 10135  003F0E  17C8               	andwf	___fltol@f1& (0+255),f,b
 10136  003F10  0EFF               	movlw	255
 10137  003F12  17C9               	andwf	(___fltol@f1+1)& (0+255),f,b
 10138  003F14  0EFF               	movlw	255
 10139  003F16  17CA               	andwf	(___fltol@f1+2)& (0+255),f,b
 10140  003F18  0E00               	movlw	0
 10141  003F1A  17CB               	andwf	(___fltol@f1+3)& (0+255),f,b
 10142                           
 10143                           ; BSR set to: 0
 10144  003F1C  0E96               	movlw	150
 10145  003F1E  0100               	movlb	0	; () banked
 10146  003F20  5FD1               	subwf	___fltol@exp1& (0+255),f,b
 10147                           
 10148                           ; BSR set to: 0
 10149  003F22  0100               	movlb	0	; () banked
 10150  003F24  AFD1               	btfss	___fltol@exp1& (0+255),7,b
 10151  003F26  D01A               	goto	l4333
 10152                           
 10153                           ; BSR set to: 0
 10154  003F28  0100               	movlb	0	; () banked
 10155  003F2A  51D1               	movf	___fltol@exp1& (0+255),w,b
 10156  003F2C  0A80               	xorlw	128
 10157  003F2E  0F97               	addlw	151
 10158  003F30  B0D8               	btfsc	status,0,c
 10159  003F32  D00A               	goto	l4329
 10160                           
 10161                           ; BSR set to: 0
 10162  003F34  0E00               	movlw	0
 10163  003F36  0100               	movlb	0	; () banked
 10164  003F38  6FC8               	movwf	?___fltol& (0+255),b
 10165  003F3A  0E00               	movlw	0
 10166  003F3C  6FC9               	movwf	(?___fltol+1)& (0+255),b
 10167  003F3E  0E00               	movlw	0
 10168  003F40  6FCA               	movwf	(?___fltol+2)& (0+255),b
 10169  003F42  0E00               	movlw	0
 10170  003F44  6FCB               	movwf	(?___fltol+3)& (0+255),b
 10171                           
 10172                           ; BSR set to: 0
 10173  003F46  0012               	return	
 10174  003F48                     l4329:
 10175                           
 10176                           ; BSR set to: 0
 10177  003F48  0100               	movlb	0	; () banked
 10178  003F4A  90D8               	bcf	status,0,c
 10179  003F4C  33CB               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10180  003F4E  33CA               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10181  003F50  33C9               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10182  003F52  33C8               	rrcf	___fltol@f1& (0+255),f,b
 10183                           
 10184                           ; BSR set to: 0
 10185  003F54  0100               	movlb	0	; () banked
 10186  003F56  3FD1               	incfsz	___fltol@exp1& (0+255),f,b
 10187  003F58  D7F7               	goto	l4329
 10188                           
 10189                           ; BSR set to: 0
 10190  003F5A  D01B               	goto	l4343
 10191  003F5C                     l4333:
 10192                           
 10193                           ; BSR set to: 0
 10194  003F5C  0E1F               	movlw	31
 10195  003F5E  0100               	movlb	0	; () banked
 10196  003F60  65D1               	cpfsgt	___fltol@exp1& (0+255),b
 10197  003F62  D012               	goto	l4341
 10198                           
 10199                           ; BSR set to: 0
 10200  003F64  0E00               	movlw	0
 10201  003F66  0100               	movlb	0	; () banked
 10202  003F68  6FC8               	movwf	?___fltol& (0+255),b
 10203  003F6A  0E00               	movlw	0
 10204  003F6C  6FC9               	movwf	(?___fltol+1)& (0+255),b
 10205  003F6E  0E00               	movlw	0
 10206  003F70  6FCA               	movwf	(?___fltol+2)& (0+255),b
 10207  003F72  0E00               	movlw	0
 10208  003F74  6FCB               	movwf	(?___fltol+3)& (0+255),b
 10209                           
 10210                           ; BSR set to: 0
 10211  003F76  0012               	return	
 10212  003F78                     l4339:
 10213                           
 10214                           ; BSR set to: 0
 10215  003F78  0100               	movlb	0	; () banked
 10216  003F7A  90D8               	bcf	status,0,c
 10217  003F7C  37C8               	rlcf	___fltol@f1& (0+255),f,b
 10218  003F7E  37C9               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10219  003F80  37CA               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10220  003F82  37CB               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10221  003F84  0100               	movlb	0	; () banked
 10222  003F86  07D1               	decf	___fltol@exp1& (0+255),f,b
 10223  003F88                     l4341:
 10224                           
 10225                           ; BSR set to: 0
 10226  003F88  0100               	movlb	0	; () banked
 10227  003F8A  51D1               	movf	___fltol@exp1& (0+255),w,b
 10228  003F8C  0100               	movlb	0	; () banked
 10229  003F8E  A4D8               	btfss	status,2,c
 10230  003F90  D7F3               	goto	l4339
 10231  003F92                     l4343:
 10232                           
 10233                           ; BSR set to: 0
 10234  003F92  0100               	movlb	0	; () banked
 10235  003F94  51D0               	movf	___fltol@sign1& (0+255),w,b
 10236  003F96  0100               	movlb	0	; () banked
 10237  003F98  B4D8               	btfsc	status,2,c
 10238  003F9A  D009               	goto	l4347
 10239                           
 10240                           ; BSR set to: 0
 10241  003F9C  0100               	movlb	0	; () banked
 10242  003F9E  1FCB               	comf	(___fltol@f1+3)& (0+255),f,b
 10243  003FA0  1FCA               	comf	(___fltol@f1+2)& (0+255),f,b
 10244  003FA2  1FC9               	comf	(___fltol@f1+1)& (0+255),f,b
 10245  003FA4  6DC8               	negf	___fltol@f1& (0+255),b
 10246  003FA6  0E00               	movlw	0
 10247  003FA8  23C9               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10248  003FAA  23CA               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10249  003FAC  23CB               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10250  003FAE                     l4347:
 10251                           
 10252                           ; BSR set to: 0
 10253  003FAE  C0C8  F0C8         	movff	___fltol@f1,?___fltol
 10254  003FB2  C0C9  F0C9         	movff	___fltol@f1+1,?___fltol+1
 10255  003FB6  C0CA  F0CA         	movff	___fltol@f1+2,?___fltol+2
 10256  003FBA  C0CB  F0CB         	movff	___fltol@f1+3,?___fltol+3
 10257  003FBE  0012               	return	
 10258  003FC0                     __end_of___fltol:
 10259                           	opt stack 0
 10260                           tblptru	equ	0xFF8
 10261                           tblptrh	equ	0xFF7
 10262                           tblptrl	equ	0xFF6
 10263                           tablat	equ	0xFF5
 10264                           prodh	equ	0xFF4
 10265                           prodl	equ	0xFF3
 10266                           intcon	equ	0xFF2
 10267                           intcon2	equ	0xFF1
 10268                           intcon3	equ	0xFF0
 10269                           postinc0	equ	0xFEE
 10270                           wreg	equ	0xFE8
 10271                           indf1	equ	0xFE7
 10272                           postdec1	equ	0xFE5
 10273                           fsr1h	equ	0xFE2
 10274                           fsr1l	equ	0xFE1
 10275                           indf2	equ	0xFDF
 10276                           postinc2	equ	0xFDE
 10277                           postdec2	equ	0xFDD
 10278                           fsr2h	equ	0xFDA
 10279                           fsr2l	equ	0xFD9
 10280                           status	equ	0xFD8
 10281                           
 10282 ;; *************** function ___flmul *****************
 10283 ;; Defined at:
 10284 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;  b               4   14[BANK0 ] long 
 10287 ;;  a               4   18[BANK0 ] long 
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;  prod            4   33[BANK0 ] struct .
 10290 ;;  grs             4   27[BANK0 ] unsigned long 
 10291 ;;  temp            2   37[BANK0 ] struct .
 10292 ;;  bexp            1   32[BANK0 ] unsigned char 
 10293 ;;  aexp            1   31[BANK0 ] unsigned char 
 10294 ;;  sign            1   26[BANK0 ] unsigned char 
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  4   14[BANK0 ] unsigned char 
 10297 ;; Registers used:
 10298 ;;		wreg, status,2, status,0, prodl, prodh
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10304 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10305 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10306 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10307 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10308 ;;Total ram usage:       25 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; Hardware stack levels required when called:    4
 10311 ;; This function calls:
 10312 ;;		Nothing
 10313 ;; This function is called by:
 10314 ;;		_set_pwm1_percent
 10315 ;;		_main
 10316 ;;		_fround
 10317 ;;		_scale
 10318 ;;		_sprintf
 10319 ;; This function uses a non-reentrant model
 10320 ;;
 10321                           
 10322                           	psect	text35
 10323  001D44                     __ptext35:
 10324                           	opt stack 0
 10325  001D44                     ___flmul:
 10326                           	opt stack 24
 10327                           
 10328                           ; BSR set to: 0
 10329                           ;incstack = 0
 10330  001D44  0100               	movlb	0	; () banked
 10331  001D46  5191               	movf	(___flmul@b+3)& (0+255),w,b
 10332  001D48  0B80               	andlw	128
 10333  001D4A  0100               	movlb	0	; () banked
 10334  001D4C  6F9A               	movwf	___flmul@sign& (0+255),b
 10335  001D4E  0100               	movlb	0	; () banked
 10336  001D50  5191               	movf	(___flmul@b+3)& (0+255),w,b
 10337  001D52  2591               	addwf	(___flmul@b+3)& (0+255),w,b
 10338  001D54  0100               	movlb	0	; () banked
 10339  001D56  6FA0               	movwf	___flmul@bexp& (0+255),b
 10340                           
 10341                           ; BSR set to: 0
 10342  001D58  0100               	movlb	0	; () banked
 10343  001D5A  AF90               	btfss	(___flmul@b+2)& (0+255),7,b
 10344  001D5C  D002               	goto	l4103
 10345                           
 10346                           ; BSR set to: 0
 10347  001D5E  0100               	movlb	0	; () banked
 10348  001D60  81A0               	bsf	___flmul@bexp& (0+255),0,b
 10349  001D62                     l4103:
 10350                           
 10351                           ; BSR set to: 0
 10352  001D62  0100               	movlb	0	; () banked
 10353  001D64  51A0               	movf	___flmul@bexp& (0+255),w,b
 10354  001D66  0100               	movlb	0	; () banked
 10355  001D68  B4D8               	btfsc	status,2,c
 10356  001D6A  D010               	goto	l4111
 10357                           
 10358                           ; BSR set to: 0
 10359  001D6C  0100               	movlb	0	; () banked
 10360  001D6E  29A0               	incf	___flmul@bexp& (0+255),w,b
 10361  001D70  A4D8               	btfss	status,2,c
 10362  001D72  D009               	goto	l4109
 10363                           
 10364                           ; BSR set to: 0
 10365  001D74  0E00               	movlw	0
 10366  001D76  0100               	movlb	0	; () banked
 10367  001D78  6F8E               	movwf	___flmul@b& (0+255),b
 10368  001D7A  0E00               	movlw	0
 10369  001D7C  6F8F               	movwf	(___flmul@b+1)& (0+255),b
 10370  001D7E  0E00               	movlw	0
 10371  001D80  6F90               	movwf	(___flmul@b+2)& (0+255),b
 10372  001D82  0E00               	movlw	0
 10373  001D84  6F91               	movwf	(___flmul@b+3)& (0+255),b
 10374  001D86                     l4109:
 10375                           
 10376                           ; BSR set to: 0
 10377  001D86  0100               	movlb	0	; () banked
 10378  001D88  8F90               	bsf	(___flmul@b+2)& (0+255),7,b
 10379  001D8A  D009               	goto	l4113
 10380  001D8C                     l4111:
 10381                           
 10382                           ; BSR set to: 0
 10383  001D8C  0E00               	movlw	0
 10384  001D8E  0100               	movlb	0	; () banked
 10385  001D90  6F8E               	movwf	___flmul@b& (0+255),b
 10386  001D92  0E00               	movlw	0
 10387  001D94  6F8F               	movwf	(___flmul@b+1)& (0+255),b
 10388  001D96  0E00               	movlw	0
 10389  001D98  6F90               	movwf	(___flmul@b+2)& (0+255),b
 10390  001D9A  0E00               	movlw	0
 10391  001D9C  6F91               	movwf	(___flmul@b+3)& (0+255),b
 10392  001D9E                     l4113:
 10393                           
 10394                           ; BSR set to: 0
 10395  001D9E  0100               	movlb	0	; () banked
 10396  001DA0  5195               	movf	(___flmul@a+3)& (0+255),w,b
 10397  001DA2  0B80               	andlw	128
 10398  001DA4  0100               	movlb	0	; () banked
 10399  001DA6  1B9A               	xorwf	___flmul@sign& (0+255),f,b
 10400                           
 10401                           ; BSR set to: 0
 10402  001DA8  0100               	movlb	0	; () banked
 10403  001DAA  5195               	movf	(___flmul@a+3)& (0+255),w,b
 10404  001DAC  2595               	addwf	(___flmul@a+3)& (0+255),w,b
 10405  001DAE  0100               	movlb	0	; () banked
 10406  001DB0  6F9F               	movwf	___flmul@aexp& (0+255),b
 10407                           
 10408                           ; BSR set to: 0
 10409  001DB2  0100               	movlb	0	; () banked
 10410  001DB4  AF94               	btfss	(___flmul@a+2)& (0+255),7,b
 10411  001DB6  D002               	goto	l4121
 10412                           
 10413                           ; BSR set to: 0
 10414  001DB8  0100               	movlb	0	; () banked
 10415  001DBA  819F               	bsf	___flmul@aexp& (0+255),0,b
 10416  001DBC                     l4121:
 10417                           
 10418                           ; BSR set to: 0
 10419  001DBC  0100               	movlb	0	; () banked
 10420  001DBE  519F               	movf	___flmul@aexp& (0+255),w,b
 10421  001DC0  0100               	movlb	0	; () banked
 10422  001DC2  B4D8               	btfsc	status,2,c
 10423  001DC4  D010               	goto	l4129
 10424                           
 10425                           ; BSR set to: 0
 10426  001DC6  0100               	movlb	0	; () banked
 10427  001DC8  299F               	incf	___flmul@aexp& (0+255),w,b
 10428  001DCA  A4D8               	btfss	status,2,c
 10429  001DCC  D009               	goto	l4127
 10430                           
 10431                           ; BSR set to: 0
 10432  001DCE  0E00               	movlw	0
 10433  001DD0  0100               	movlb	0	; () banked
 10434  001DD2  6F92               	movwf	___flmul@a& (0+255),b
 10435  001DD4  0E00               	movlw	0
 10436  001DD6  6F93               	movwf	(___flmul@a+1)& (0+255),b
 10437  001DD8  0E00               	movlw	0
 10438  001DDA  6F94               	movwf	(___flmul@a+2)& (0+255),b
 10439  001DDC  0E00               	movlw	0
 10440  001DDE  6F95               	movwf	(___flmul@a+3)& (0+255),b
 10441  001DE0                     l4127:
 10442                           
 10443                           ; BSR set to: 0
 10444  001DE0  0100               	movlb	0	; () banked
 10445  001DE2  8F94               	bsf	(___flmul@a+2)& (0+255),7,b
 10446  001DE4  D009               	goto	l1075
 10447  001DE6                     l4129:
 10448                           
 10449                           ; BSR set to: 0
 10450  001DE6  0E00               	movlw	0
 10451  001DE8  0100               	movlb	0	; () banked
 10452  001DEA  6F92               	movwf	___flmul@a& (0+255),b
 10453  001DEC  0E00               	movlw	0
 10454  001DEE  6F93               	movwf	(___flmul@a+1)& (0+255),b
 10455  001DF0  0E00               	movlw	0
 10456  001DF2  6F94               	movwf	(___flmul@a+2)& (0+255),b
 10457  001DF4  0E00               	movlw	0
 10458  001DF6  6F95               	movwf	(___flmul@a+3)& (0+255),b
 10459  001DF8                     l1075:
 10460                           
 10461                           ; BSR set to: 0
 10462  001DF8  0100               	movlb	0	; () banked
 10463  001DFA  519F               	movf	___flmul@aexp& (0+255),w,b
 10464  001DFC  0100               	movlb	0	; () banked
 10465  001DFE  B4D8               	btfsc	status,2,c
 10466  001E00  D005               	goto	l4133
 10467                           
 10468                           ; BSR set to: 0
 10469  001E02  0100               	movlb	0	; () banked
 10470  001E04  51A0               	movf	___flmul@bexp& (0+255),w,b
 10471  001E06  0100               	movlb	0	; () banked
 10472  001E08  A4D8               	btfss	status,2,c
 10473  001E0A  D00A               	goto	l4137
 10474  001E0C                     l4133:
 10475                           
 10476                           ; BSR set to: 0
 10477  001E0C  0E00               	movlw	0
 10478  001E0E  0100               	movlb	0	; () banked
 10479  001E10  6F8E               	movwf	?___flmul& (0+255),b
 10480  001E12  0E00               	movlw	0
 10481  001E14  6F8F               	movwf	(?___flmul+1)& (0+255),b
 10482  001E16  0E00               	movlw	0
 10483  001E18  6F90               	movwf	(?___flmul+2)& (0+255),b
 10484  001E1A  0E00               	movlw	0
 10485  001E1C  6F91               	movwf	(?___flmul+3)& (0+255),b
 10486                           
 10487                           ; BSR set to: 0
 10488  001E1E  0012               	return	
 10489  001E20                     l4137:
 10490                           
 10491                           ; BSR set to: 0
 10492  001E20  0100               	movlb	0	; () banked
 10493  001E22  5194               	movf	(___flmul@a+2)& (0+255),w,b
 10494  001E24  0100               	movlb	0	; () banked
 10495  001E26  038E               	mulwf	___flmul@b& (0+255),b
 10496  001E28  CFF3 F0A5          	movff	prodl,___flmul@temp
 10497  001E2C  CFF4 F0A6          	movff	prodh,___flmul@temp+1
 10498                           
 10499                           ; BSR set to: 0
 10500  001E30  0100               	movlb	0	; () banked
 10501  001E32  51A5               	movf	___flmul@temp& (0+255),w,b
 10502  001E34  0100               	movlb	0	; () banked
 10503  001E36  6F9B               	movwf	___flmul@grs& (0+255),b
 10504  001E38  6B9C               	clrf	(___flmul@grs+1)& (0+255),b
 10505  001E3A  6B9D               	clrf	(___flmul@grs+2)& (0+255),b
 10506  001E3C  6B9E               	clrf	(___flmul@grs+3)& (0+255),b
 10507                           
 10508                           ; BSR set to: 0
 10509  001E3E  0100               	movlb	0	; () banked
 10510  001E40  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
 10511  001E42  0100               	movlb	0	; () banked
 10512  001E44  6FA1               	movwf	___flmul@prod& (0+255),b
 10513  001E46  6BA2               	clrf	(___flmul@prod+1)& (0+255),b
 10514  001E48  6BA3               	clrf	(___flmul@prod+2)& (0+255),b
 10515  001E4A  6BA4               	clrf	(___flmul@prod+3)& (0+255),b
 10516  001E4C  0100               	movlb	0	; () banked
 10517  001E4E  5193               	movf	(___flmul@a+1)& (0+255),w,b
 10518  001E50  0100               	movlb	0	; () banked
 10519  001E52  038F               	mulwf	(___flmul@b+1)& (0+255),b
 10520  001E54  CFF3 F0A5          	movff	prodl,___flmul@temp
 10521  001E58  CFF4 F0A6          	movff	prodh,___flmul@temp+1
 10522                           
 10523                           ; BSR set to: 0
 10524  001E5C  0100               	movlb	0	; () banked
 10525  001E5E  51A5               	movf	___flmul@temp& (0+255),w,b
 10526  001E60  0100               	movlb	0	; () banked
 10527  001E62  279B               	addwf	___flmul@grs& (0+255),f,b
 10528  001E64  0E00               	movlw	0
 10529  001E66  239C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10530  001E68  239D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10531  001E6A  239E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10532                           
 10533                           ; BSR set to: 0
 10534  001E6C  0100               	movlb	0	; () banked
 10535  001E6E  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
 10536  001E70  0100               	movlb	0	; () banked
 10537  001E72  27A1               	addwf	___flmul@prod& (0+255),f,b
 10538  001E74  0E00               	movlw	0
 10539  001E76  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10540  001E78  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10541  001E7A  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10542  001E7C  0100               	movlb	0	; () banked
 10543  001E7E  5192               	movf	___flmul@a& (0+255),w,b
 10544  001E80  0100               	movlb	0	; () banked
 10545  001E82  0390               	mulwf	(___flmul@b+2)& (0+255),b
 10546  001E84  CFF3 F0A5          	movff	prodl,___flmul@temp
 10547  001E88  CFF4 F0A6          	movff	prodh,___flmul@temp+1
 10548                           
 10549                           ; BSR set to: 0
 10550  001E8C  0100               	movlb	0	; () banked
 10551  001E8E  51A5               	movf	___flmul@temp& (0+255),w,b
 10552  001E90  0100               	movlb	0	; () banked
 10553  001E92  279B               	addwf	___flmul@grs& (0+255),f,b
 10554  001E94  0E00               	movlw	0
 10555  001E96  239C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10556  001E98  239D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10557  001E9A  239E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10558                           
 10559                           ; BSR set to: 0
 10560  001E9C  0100               	movlb	0	; () banked
 10561  001E9E  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
 10562  001EA0  0100               	movlb	0	; () banked
 10563  001EA2  27A1               	addwf	___flmul@prod& (0+255),f,b
 10564  001EA4  0E00               	movlw	0
 10565  001EA6  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10566  001EA8  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10567  001EAA  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10568                           
 10569                           ; BSR set to: 0
 10570  001EAC  C09D  F09E         	movff	___flmul@grs+2,___flmul@grs+3
 10571  001EB0  C09C  F09D         	movff	___flmul@grs+1,___flmul@grs+2
 10572  001EB4  C09B  F09C         	movff	___flmul@grs,___flmul@grs+1
 10573  001EB8  0100               	movlb	0	; () banked
 10574  001EBA  6B9B               	clrf	___flmul@grs& (0+255),b
 10575                           
 10576                           ; BSR set to: 0
 10577  001EBC  0100               	movlb	0	; () banked
 10578  001EBE  5192               	movf	___flmul@a& (0+255),w,b
 10579  001EC0  0100               	movlb	0	; () banked
 10580  001EC2  038F               	mulwf	(___flmul@b+1)& (0+255),b
 10581  001EC4  CFF3 F0A5          	movff	prodl,___flmul@temp
 10582  001EC8  CFF4 F0A6          	movff	prodh,___flmul@temp+1
 10583                           
 10584                           ; BSR set to: 0
 10585  001ECC  0100               	movlb	0	; () banked
 10586  001ECE  51A5               	movf	___flmul@temp& (0+255),w,b
 10587  001ED0  0100               	movlb	0	; () banked
 10588  001ED2  279B               	addwf	___flmul@grs& (0+255),f,b
 10589  001ED4  0100               	movlb	0	; () banked
 10590  001ED6  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
 10591  001ED8  0100               	movlb	0	; () banked
 10592  001EDA  239C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10593  001EDC  0E00               	movlw	0
 10594  001EDE  0100               	movlb	0	; () banked
 10595  001EE0  239D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10596  001EE2  0E00               	movlw	0
 10597  001EE4  0100               	movlb	0	; () banked
 10598  001EE6  239E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10599                           
 10600                           ; BSR set to: 0
 10601  001EE8  0100               	movlb	0	; () banked
 10602  001EEA  5193               	movf	(___flmul@a+1)& (0+255),w,b
 10603  001EEC  0100               	movlb	0	; () banked
 10604  001EEE  038E               	mulwf	___flmul@b& (0+255),b
 10605  001EF0  CFF3 F0A5          	movff	prodl,___flmul@temp
 10606  001EF4  CFF4 F0A6          	movff	prodh,___flmul@temp+1
 10607                           
 10608                           ; BSR set to: 0
 10609  001EF8  0100               	movlb	0	; () banked
 10610  001EFA  51A5               	movf	___flmul@temp& (0+255),w,b
 10611  001EFC  0100               	movlb	0	; () banked
 10612  001EFE  279B               	addwf	___flmul@grs& (0+255),f,b
 10613  001F00  0100               	movlb	0	; () banked
 10614  001F02  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
 10615  001F04  0100               	movlb	0	; () banked
 10616  001F06  239C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10617  001F08  0E00               	movlw	0
 10618  001F0A  0100               	movlb	0	; () banked
 10619  001F0C  239D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10620  001F0E  0E00               	movlw	0
 10621  001F10  0100               	movlb	0	; () banked
 10622  001F12  239E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10623                           
 10624                           ; BSR set to: 0
 10625  001F14  C09D  F09E         	movff	___flmul@grs+2,___flmul@grs+3
 10626  001F18  C09C  F09D         	movff	___flmul@grs+1,___flmul@grs+2
 10627  001F1C  C09B  F09C         	movff	___flmul@grs,___flmul@grs+1
 10628  001F20  0100               	movlb	0	; () banked
 10629  001F22  6B9B               	clrf	___flmul@grs& (0+255),b
 10630  001F24  0100               	movlb	0	; () banked
 10631  001F26  5192               	movf	___flmul@a& (0+255),w,b
 10632  001F28  0100               	movlb	0	; () banked
 10633  001F2A  038E               	mulwf	___flmul@b& (0+255),b
 10634  001F2C  CFF3 F0A5          	movff	prodl,___flmul@temp
 10635  001F30  CFF4 F0A6          	movff	prodh,___flmul@temp+1
 10636                           
 10637                           ; BSR set to: 0
 10638  001F34  0100               	movlb	0	; () banked
 10639  001F36  51A5               	movf	___flmul@temp& (0+255),w,b
 10640  001F38  0100               	movlb	0	; () banked
 10641  001F3A  279B               	addwf	___flmul@grs& (0+255),f,b
 10642  001F3C  0100               	movlb	0	; () banked
 10643  001F3E  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
 10644  001F40  0100               	movlb	0	; () banked
 10645  001F42  239C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10646  001F44  0E00               	movlw	0
 10647  001F46  0100               	movlb	0	; () banked
 10648  001F48  239D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10649  001F4A  0E00               	movlw	0
 10650  001F4C  0100               	movlb	0	; () banked
 10651  001F4E  239E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10652                           
 10653                           ; BSR set to: 0
 10654  001F50  0100               	movlb	0	; () banked
 10655  001F52  5194               	movf	(___flmul@a+2)& (0+255),w,b
 10656  001F54  0100               	movlb	0	; () banked
 10657  001F56  038F               	mulwf	(___flmul@b+1)& (0+255),b
 10658  001F58  CFF3 F0A5          	movff	prodl,___flmul@temp
 10659  001F5C  CFF4 F0A6          	movff	prodh,___flmul@temp+1
 10660  001F60  0100               	movlb	0	; () banked
 10661  001F62  51A5               	movf	___flmul@temp& (0+255),w,b
 10662  001F64  0100               	movlb	0	; () banked
 10663  001F66  27A1               	addwf	___flmul@prod& (0+255),f,b
 10664  001F68  0100               	movlb	0	; () banked
 10665  001F6A  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
 10666  001F6C  0100               	movlb	0	; () banked
 10667  001F6E  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10668  001F70  0E00               	movlw	0
 10669  001F72  0100               	movlb	0	; () banked
 10670  001F74  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10671  001F76  0E00               	movlw	0
 10672  001F78  0100               	movlb	0	; () banked
 10673  001F7A  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10674                           
 10675                           ; BSR set to: 0
 10676  001F7C  0100               	movlb	0	; () banked
 10677  001F7E  5193               	movf	(___flmul@a+1)& (0+255),w,b
 10678  001F80  0100               	movlb	0	; () banked
 10679  001F82  0390               	mulwf	(___flmul@b+2)& (0+255),b
 10680  001F84  CFF3 F0A5          	movff	prodl,___flmul@temp
 10681  001F88  CFF4 F0A6          	movff	prodh,___flmul@temp+1
 10682                           
 10683                           ; BSR set to: 0
 10684  001F8C  0100               	movlb	0	; () banked
 10685  001F8E  51A5               	movf	___flmul@temp& (0+255),w,b
 10686  001F90  0100               	movlb	0	; () banked
 10687  001F92  27A1               	addwf	___flmul@prod& (0+255),f,b
 10688  001F94  0100               	movlb	0	; () banked
 10689  001F96  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
 10690  001F98  0100               	movlb	0	; () banked
 10691  001F9A  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10692  001F9C  0E00               	movlw	0
 10693  001F9E  0100               	movlb	0	; () banked
 10694  001FA0  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10695  001FA2  0E00               	movlw	0
 10696  001FA4  0100               	movlb	0	; () banked
 10697  001FA6  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10698  001FA8  0100               	movlb	0	; () banked
 10699  001FAA  5194               	movf	(___flmul@a+2)& (0+255),w,b
 10700  001FAC  0100               	movlb	0	; () banked
 10701  001FAE  0390               	mulwf	(___flmul@b+2)& (0+255),b
 10702  001FB0  CFF3 F0A5          	movff	prodl,___flmul@temp
 10703  001FB4  CFF4 F0A6          	movff	prodh,___flmul@temp+1
 10704                           
 10705                           ; BSR set to: 0
 10706  001FB8  0100               	movlb	0	; () banked
 10707  001FBA  51A5               	movf	___flmul@temp& (0+255),w,b
 10708  001FBC  0100               	movlb	0	; () banked
 10709  001FBE  6F96               	movwf	??___flmul& (0+255),b
 10710  001FC0  0100               	movlb	0	; () banked
 10711  001FC2  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
 10712  001FC4  0100               	movlb	0	; () banked
 10713  001FC6  6F97               	movwf	(??___flmul+1)& (0+255),b
 10714  001FC8  0100               	movlb	0	; () banked
 10715  001FCA  6B98               	clrf	(??___flmul+2)& (0+255),b
 10716  001FCC  0100               	movlb	0	; () banked
 10717  001FCE  6B99               	clrf	(??___flmul+3)& (0+255),b
 10718  001FD0  C098  F099         	movff	??___flmul+2,??___flmul+3
 10719  001FD4  C097  F098         	movff	??___flmul+1,??___flmul+2
 10720  001FD8  C096  F097         	movff	??___flmul,??___flmul+1
 10721  001FDC  0100               	movlb	0	; () banked
 10722  001FDE  6B96               	clrf	??___flmul& (0+255),b
 10723  001FE0  0100               	movlb	0	; () banked
 10724  001FE2  5196               	movf	??___flmul& (0+255),w,b
 10725  001FE4  0100               	movlb	0	; () banked
 10726  001FE6  27A1               	addwf	___flmul@prod& (0+255),f,b
 10727  001FE8  0100               	movlb	0	; () banked
 10728  001FEA  5197               	movf	(??___flmul+1)& (0+255),w,b
 10729  001FEC  0100               	movlb	0	; () banked
 10730  001FEE  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10731  001FF0  0100               	movlb	0	; () banked
 10732  001FF2  5198               	movf	(??___flmul+2)& (0+255),w,b
 10733  001FF4  0100               	movlb	0	; () banked
 10734  001FF6  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10735  001FF8  0100               	movlb	0	; () banked
 10736  001FFA  5199               	movf	(??___flmul+3)& (0+255),w,b
 10737  001FFC  0100               	movlb	0	; () banked
 10738  001FFE  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10739                           
 10740                           ; BSR set to: 0
 10741  002000  C09B  F096         	movff	___flmul@grs,??___flmul
 10742  002004  C09C  F097         	movff	___flmul@grs+1,??___flmul+1
 10743  002008  C09D  F098         	movff	___flmul@grs+2,??___flmul+2
 10744  00200C  C09E  F099         	movff	___flmul@grs+3,??___flmul+3
 10745  002010  0E19               	movlw	25
 10746  002012  D006               	goto	u4730
 10747  002014                     u4735:
 10748  002014  0100               	movlb	0	; () banked
 10749  002016  90D8               	bcf	status,0,c
 10750  002018  3399               	rrcf	(??___flmul+3)& (0+255),f,b
 10751  00201A  3398               	rrcf	(??___flmul+2)& (0+255),f,b
 10752  00201C  3397               	rrcf	(??___flmul+1)& (0+255),f,b
 10753  00201E  3396               	rrcf	??___flmul& (0+255),f,b
 10754  002020                     u4730:
 10755  002020  2EE8               	decfsz	wreg,f,c
 10756  002022  D7F8               	goto	u4735
 10757  002024  0100               	movlb	0	; () banked
 10758  002026  5196               	movf	??___flmul& (0+255),w,b
 10759  002028  0100               	movlb	0	; () banked
 10760  00202A  27A1               	addwf	___flmul@prod& (0+255),f,b
 10761  00202C  0100               	movlb	0	; () banked
 10762  00202E  5197               	movf	(??___flmul+1)& (0+255),w,b
 10763  002030  0100               	movlb	0	; () banked
 10764  002032  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10765  002034  0100               	movlb	0	; () banked
 10766  002036  5198               	movf	(??___flmul+2)& (0+255),w,b
 10767  002038  0100               	movlb	0	; () banked
 10768  00203A  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10769  00203C  0100               	movlb	0	; () banked
 10770  00203E  5199               	movf	(??___flmul+3)& (0+255),w,b
 10771  002040  0100               	movlb	0	; () banked
 10772  002042  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10773                           
 10774                           ; BSR set to: 0
 10775  002044  C09D  F09E         	movff	___flmul@grs+2,___flmul@grs+3
 10776  002048  C09C  F09D         	movff	___flmul@grs+1,___flmul@grs+2
 10777  00204C  C09B  F09C         	movff	___flmul@grs,___flmul@grs+1
 10778  002050  0100               	movlb	0	; () banked
 10779  002052  6B9B               	clrf	___flmul@grs& (0+255),b
 10780                           
 10781                           ; BSR set to: 0
 10782  002054  0100               	movlb	0	; () banked
 10783  002056  519F               	movf	___flmul@aexp& (0+255),w,b
 10784  002058  C0A0  F096         	movff	___flmul@bexp,??___flmul
 10785  00205C  0100               	movlb	0	; () banked
 10786  00205E  6B97               	clrf	(??___flmul+1)& (0+255),b
 10787  002060  0100               	movlb	0	; () banked
 10788  002062  2796               	addwf	??___flmul& (0+255),f,b
 10789  002064  0E00               	movlw	0
 10790  002066  2397               	addwfc	(??___flmul+1)& (0+255),f,b
 10791  002068  0E82               	movlw	130
 10792  00206A  0100               	movlb	0	; () banked
 10793  00206C  2596               	addwf	??___flmul& (0+255),w,b
 10794  00206E  0100               	movlb	0	; () banked
 10795  002070  6FA5               	movwf	___flmul@temp& (0+255),b
 10796  002072  0EFF               	movlw	255
 10797  002074  0100               	movlb	0	; () banked
 10798  002076  2197               	addwfc	(??___flmul+1)& (0+255),w,b
 10799  002078  0100               	movlb	0	; () banked
 10800  00207A  6FA6               	movwf	(___flmul@temp+1)& (0+255),b
 10801  00207C  D015               	goto	l4185
 10802  00207E                     l4179:
 10803                           
 10804                           ; BSR set to: 0
 10805  00207E  0100               	movlb	0	; () banked
 10806  002080  90D8               	bcf	status,0,c
 10807  002082  37A1               	rlcf	___flmul@prod& (0+255),f,b
 10808  002084  37A2               	rlcf	(___flmul@prod+1)& (0+255),f,b
 10809  002086  37A3               	rlcf	(___flmul@prod+2)& (0+255),f,b
 10810  002088  37A4               	rlcf	(___flmul@prod+3)& (0+255),f,b
 10811                           
 10812                           ; BSR set to: 0
 10813  00208A  0100               	movlb	0	; () banked
 10814  00208C  AF9E               	btfss	(___flmul@grs+3)& (0+255),7,b
 10815  00208E  D002               	goto	l1082
 10816                           
 10817                           ; BSR set to: 0
 10818  002090  0100               	movlb	0	; () banked
 10819  002092  81A1               	bsf	___flmul@prod& (0+255),0,b
 10820  002094                     l1082:
 10821                           
 10822                           ; BSR set to: 0
 10823  002094  0100               	movlb	0	; () banked
 10824  002096  90D8               	bcf	status,0,c
 10825  002098  379B               	rlcf	___flmul@grs& (0+255),f,b
 10826  00209A  379C               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10827  00209C  379D               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10828  00209E  379E               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10829  0020A0  0100               	movlb	0	; () banked
 10830  0020A2  07A5               	decf	___flmul@temp& (0+255),f,b
 10831  0020A4  A0D8               	btfss	status,0,c
 10832  0020A6  07A6               	decf	(___flmul@temp+1)& (0+255),f,b
 10833  0020A8                     l4185:
 10834                           
 10835                           ; BSR set to: 0
 10836  0020A8  0100               	movlb	0	; () banked
 10837  0020AA  AFA3               	btfss	(___flmul@prod+2)& (0+255),7,b
 10838  0020AC  D7E8               	goto	l4179
 10839                           
 10840                           ; BSR set to: 0
 10841                           
 10842                           ; BSR set to: 0
 10843  0020AE  0E00               	movlw	0
 10844  0020B0  0100               	movlb	0	; () banked
 10845  0020B2  6F9F               	movwf	___flmul@aexp& (0+255),b
 10846                           
 10847                           ; BSR set to: 0
 10848  0020B4  0100               	movlb	0	; () banked
 10849  0020B6  AF9E               	btfss	(___flmul@grs+3)& (0+255),7,b
 10850  0020B8  D024               	goto	l1084
 10851                           
 10852                           ; BSR set to: 0
 10853  0020BA  0EFF               	movlw	255
 10854  0020BC  0100               	movlb	0	; () banked
 10855  0020BE  159B               	andwf	___flmul@grs& (0+255),w,b
 10856  0020C0  0100               	movlb	0	; () banked
 10857  0020C2  6F96               	movwf	??___flmul& (0+255),b
 10858  0020C4  0EFF               	movlw	255
 10859  0020C6  0100               	movlb	0	; () banked
 10860  0020C8  159C               	andwf	(___flmul@grs+1)& (0+255),w,b
 10861  0020CA  0100               	movlb	0	; () banked
 10862  0020CC  6F97               	movwf	(??___flmul+1)& (0+255),b
 10863  0020CE  0EFF               	movlw	255
 10864  0020D0  0100               	movlb	0	; () banked
 10865  0020D2  159D               	andwf	(___flmul@grs+2)& (0+255),w,b
 10866  0020D4  0100               	movlb	0	; () banked
 10867  0020D6  6F98               	movwf	(??___flmul+2)& (0+255),b
 10868  0020D8  0E7F               	movlw	127
 10869  0020DA  0100               	movlb	0	; () banked
 10870  0020DC  159E               	andwf	(___flmul@grs+3)& (0+255),w,b
 10871  0020DE  0100               	movlb	0	; () banked
 10872  0020E0  6F99               	movwf	(??___flmul+3)& (0+255),b
 10873  0020E2  0100               	movlb	0	; () banked
 10874  0020E4  5196               	movf	??___flmul& (0+255),w,b
 10875  0020E6  0100               	movlb	0	; () banked
 10876  0020E8  1197               	iorwf	(??___flmul+1)& (0+255),w,b
 10877  0020EA  0100               	movlb	0	; () banked
 10878  0020EC  1198               	iorwf	(??___flmul+2)& (0+255),w,b
 10879  0020EE  0100               	movlb	0	; () banked
 10880  0020F0  1199               	iorwf	(??___flmul+3)& (0+255),w,b
 10881  0020F2  A4D8               	btfss	status,2,c
 10882  0020F4  D003               	goto	l4195
 10883                           
 10884                           ; BSR set to: 0
 10885                           
 10886                           ; BSR set to: 0
 10887  0020F6  0100               	movlb	0	; () banked
 10888  0020F8  A1A1               	btfss	___flmul@prod& (0+255),0,b
 10889  0020FA  D003               	goto	l1084
 10890  0020FC                     l4195:
 10891                           
 10892                           ; BSR set to: 0
 10893  0020FC  0E01               	movlw	1
 10894  0020FE  0100               	movlb	0	; () banked
 10895  002100  6F9F               	movwf	___flmul@aexp& (0+255),b
 10896  002102                     l1084:
 10897                           
 10898                           ; BSR set to: 0
 10899  002102  0100               	movlb	0	; () banked
 10900  002104  519F               	movf	___flmul@aexp& (0+255),w,b
 10901  002106  0100               	movlb	0	; () banked
 10902  002108  B4D8               	btfsc	status,2,c
 10903  00210A  D023               	goto	l4205
 10904                           
 10905                           ; BSR set to: 0
 10906  00210C  0E01               	movlw	1
 10907  00210E  0100               	movlb	0	; () banked
 10908  002110  27A1               	addwf	___flmul@prod& (0+255),f,b
 10909  002112  0E00               	movlw	0
 10910  002114  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10911  002116  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10912  002118  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10913                           
 10914                           ; BSR set to: 0
 10915  00211A  0100               	movlb	0	; () banked
 10916  00211C  A1A4               	btfss	(___flmul@prod+3)& (0+255),0,b
 10917  00211E  D019               	goto	l4205
 10918                           
 10919                           ; BSR set to: 0
 10920  002120  C0A1  F096         	movff	___flmul@prod,??___flmul
 10921  002124  C0A2  F097         	movff	___flmul@prod+1,??___flmul+1
 10922  002128  C0A3  F098         	movff	___flmul@prod+2,??___flmul+2
 10923  00212C  C0A4  F099         	movff	___flmul@prod+3,??___flmul+3
 10924  002130  0100               	movlb	0	; () banked
 10925  002132  3599               	rlcf	(??___flmul+3)& (0+255),w,b
 10926  002134  3399               	rrcf	(??___flmul+3)& (0+255),f,b
 10927  002136  3398               	rrcf	(??___flmul+2)& (0+255),f,b
 10928  002138  3397               	rrcf	(??___flmul+1)& (0+255),f,b
 10929  00213A  3396               	rrcf	??___flmul& (0+255),f,b
 10930  00213C  C096  F0A1         	movff	??___flmul,___flmul@prod
 10931  002140  C097  F0A2         	movff	??___flmul+1,___flmul@prod+1
 10932  002144  C098  F0A3         	movff	??___flmul+2,___flmul@prod+2
 10933  002148  C099  F0A4         	movff	??___flmul+3,___flmul@prod+3
 10934                           
 10935                           ; BSR set to: 0
 10936  00214C  0100               	movlb	0	; () banked
 10937  00214E  4BA5               	infsnz	___flmul@temp& (0+255),f,b
 10938  002150  2BA6               	incf	(___flmul@temp+1)& (0+255),f,b
 10939  002152                     l4205:
 10940                           
 10941                           ; BSR set to: 0
 10942  002152  0100               	movlb	0	; () banked
 10943  002154  BFA6               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10944  002156  D010               	goto	l4209
 10945  002158  0100               	movlb	0	; () banked
 10946  00215A  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
 10947  00215C  E104               	bnz	u4810
 10948  00215E  0100               	movlb	0	; () banked
 10949  002160  29A5               	incf	___flmul@temp& (0+255),w,b
 10950  002162  A0D8               	btfss	status,0,c
 10951  002164  D009               	goto	l4209
 10952  002166                     u4810:
 10953                           
 10954                           ; BSR set to: 0
 10955  002166  0E00               	movlw	0
 10956  002168  0100               	movlb	0	; () banked
 10957  00216A  6FA1               	movwf	___flmul@prod& (0+255),b
 10958  00216C  0E00               	movlw	0
 10959  00216E  6FA2               	movwf	(___flmul@prod+1)& (0+255),b
 10960  002170  0E80               	movlw	128
 10961  002172  6FA3               	movwf	(___flmul@prod+2)& (0+255),b
 10962  002174  0E7F               	movlw	127
 10963  002176  D02B               	goto	L20
 10964  002178                     l4209:
 10965                           
 10966                           ; BSR set to: 0
 10967  002178  0100               	movlb	0	; () banked
 10968  00217A  BFA6               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10969  00217C  D007               	goto	l4211
 10970  00217E  0100               	movlb	0	; () banked
 10971  002180  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
 10972  002182  E111               	bnz	l1092
 10973  002184  0100               	movlb	0	; () banked
 10974  002186  05A5               	decf	___flmul@temp& (0+255),w,b
 10975  002188  B0D8               	btfsc	status,0,c
 10976  00218A  D00D               	goto	l1092
 10977  00218C                     l4211:
 10978                           
 10979                           ; BSR set to: 0
 10980  00218C  0E00               	movlw	0
 10981  00218E  0100               	movlb	0	; () banked
 10982  002190  6FA1               	movwf	___flmul@prod& (0+255),b
 10983  002192  0E00               	movlw	0
 10984  002194  6FA2               	movwf	(___flmul@prod+1)& (0+255),b
 10985  002196  0E00               	movlw	0
 10986  002198  6FA3               	movwf	(___flmul@prod+2)& (0+255),b
 10987  00219A  0E00               	movlw	0
 10988  00219C  6FA4               	movwf	(___flmul@prod+3)& (0+255),b
 10989  00219E  0E00               	movlw	0
 10990  0021A0  0100               	movlb	0	; () banked
 10991  0021A2  6F9A               	movwf	___flmul@sign& (0+255),b
 10992  0021A4  D015               	goto	l4221
 10993  0021A6                     l1092:
 10994                           
 10995                           ; BSR set to: 0
 10996  0021A6  C0A5  F0A0         	movff	___flmul@temp,___flmul@bexp
 10997                           
 10998                           ; BSR set to: 0
 10999  0021AA  0EFF               	movlw	255
 11000  0021AC  0100               	movlb	0	; () banked
 11001  0021AE  17A1               	andwf	___flmul@prod& (0+255),f,b
 11002  0021B0  0EFF               	movlw	255
 11003  0021B2  17A2               	andwf	(___flmul@prod+1)& (0+255),f,b
 11004  0021B4  0E7F               	movlw	127
 11005  0021B6  17A3               	andwf	(___flmul@prod+2)& (0+255),f,b
 11006  0021B8  0E00               	movlw	0
 11007  0021BA  17A4               	andwf	(___flmul@prod+3)& (0+255),f,b
 11008                           
 11009                           ; BSR set to: 0
 11010  0021BC  0100               	movlb	0	; () banked
 11011  0021BE  A1A0               	btfss	___flmul@bexp& (0+255),0,b
 11012  0021C0  D002               	goto	l4219
 11013                           
 11014                           ; BSR set to: 0
 11015  0021C2  0100               	movlb	0	; () banked
 11016  0021C4  8FA3               	bsf	(___flmul@prod+2)& (0+255),7,b
 11017  0021C6                     l4219:
 11018                           
 11019                           ; BSR set to: 0
 11020  0021C6  0100               	movlb	0	; () banked
 11021  0021C8  90D8               	bcf	status,0,c
 11022  0021CA  31A0               	rrcf	___flmul@bexp& (0+255),w,b
 11023  0021CC  0100               	movlb	0	; () banked
 11024  0021CE                     L20:
 11025  0021CE  6FA4               	movwf	(___flmul@prod+3)& (0+255),b
 11026  0021D0                     l4221:
 11027                           
 11028                           ; BSR set to: 0
 11029  0021D0  0100               	movlb	0	; () banked
 11030  0021D2  519A               	movf	___flmul@sign& (0+255),w,b
 11031  0021D4  0100               	movlb	0	; () banked
 11032  0021D6  13A4               	iorwf	(___flmul@prod+3)& (0+255),f,b
 11033                           
 11034                           ; BSR set to: 0
 11035  0021D8  C0A1  F08E         	movff	___flmul@prod,?___flmul
 11036  0021DC  C0A2  F08F         	movff	___flmul@prod+1,?___flmul+1
 11037  0021E0  C0A3  F090         	movff	___flmul@prod+2,?___flmul+2
 11038  0021E4  C0A4  F091         	movff	___flmul@prod+3,?___flmul+3
 11039  0021E8  0012               	return	
 11040  0021EA                     __end_of___flmul:
 11041                           	opt stack 0
 11042                           tblptru	equ	0xFF8
 11043                           tblptrh	equ	0xFF7
 11044                           tblptrl	equ	0xFF6
 11045                           tablat	equ	0xFF5
 11046                           prodh	equ	0xFF4
 11047                           prodl	equ	0xFF3
 11048                           intcon	equ	0xFF2
 11049                           intcon2	equ	0xFF1
 11050                           intcon3	equ	0xFF0
 11051                           postinc0	equ	0xFEE
 11052                           wreg	equ	0xFE8
 11053                           indf1	equ	0xFE7
 11054                           postdec1	equ	0xFE5
 11055                           fsr1h	equ	0xFE2
 11056                           fsr1l	equ	0xFE1
 11057                           indf2	equ	0xFDF
 11058                           postinc2	equ	0xFDE
 11059                           postdec2	equ	0xFDD
 11060                           fsr2h	equ	0xFDA
 11061                           fsr2l	equ	0xFD9
 11062                           status	equ	0xFD8
 11063                           
 11064 ;; *************** function ___fldiv *****************
 11065 ;; Defined at:
 11066 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
 11067 ;; Parameters:    Size  Location     Type
 11068 ;;  b               4   39[BANK0 ] unsigned char 
 11069 ;;  a               4   43[BANK0 ] unsigned char 
 11070 ;; Auto vars:     Size  Location     Type
 11071 ;;  grs             4   58[BANK0 ] unsigned long 
 11072 ;;  rem             4   52[BANK0 ] unsigned long 
 11073 ;;  new_exp         2   56[BANK0 ] int 
 11074 ;;  aexp            1   63[BANK0 ] unsigned char 
 11075 ;;  bexp            1   62[BANK0 ] unsigned char 
 11076 ;;  sign            1   51[BANK0 ] unsigned char 
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  4   39[BANK0 ] unsigned char 
 11079 ;; Registers used:
 11080 ;;		wreg, status,2, status,0
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11086 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11087 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11088 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11089 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11090 ;;Total ram usage:       25 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; Hardware stack levels required when called:    4
 11093 ;; This function calls:
 11094 ;;		Nothing
 11095 ;; This function is called by:
 11096 ;;		_read_adc_voltage
 11097 ;;		_set_pwm1_percent
 11098 ;;		_main
 11099 ;; This function uses a non-reentrant model
 11100 ;;
 11101                           
 11102                           	psect	text36
 11103  0021EA                     __ptext36:
 11104                           	opt stack 0
 11105  0021EA                     ___fldiv:
 11106                           	opt stack 25
 11107                           
 11108                           ; BSR set to: 0
 11109                           ;incstack = 0
 11110  0021EA  0100               	movlb	0	; () banked
 11111  0021EC  51AA               	movf	(___fldiv@b+3)& (0+255),w,b
 11112  0021EE  0B80               	andlw	128
 11113  0021F0  0100               	movlb	0	; () banked
 11114  0021F2  6FB3               	movwf	___fldiv@sign& (0+255),b
 11115  0021F4  0100               	movlb	0	; () banked
 11116  0021F6  51AA               	movf	(___fldiv@b+3)& (0+255),w,b
 11117  0021F8  25AA               	addwf	(___fldiv@b+3)& (0+255),w,b
 11118  0021FA  0100               	movlb	0	; () banked
 11119  0021FC  6FBE               	movwf	___fldiv@bexp& (0+255),b
 11120                           
 11121                           ; BSR set to: 0
 11122  0021FE  0100               	movlb	0	; () banked
 11123  002200  AFA9               	btfss	(___fldiv@b+2)& (0+255),7,b
 11124  002202  D002               	goto	l3967
 11125                           
 11126                           ; BSR set to: 0
 11127  002204  0100               	movlb	0	; () banked
 11128  002206  81BE               	bsf	___fldiv@bexp& (0+255),0,b
 11129  002208                     l3967:
 11130                           
 11131                           ; BSR set to: 0
 11132  002208  0100               	movlb	0	; () banked
 11133  00220A  51BE               	movf	___fldiv@bexp& (0+255),w,b
 11134  00220C  0100               	movlb	0	; () banked
 11135  00220E  B4D8               	btfsc	status,2,c
 11136  002210  D012               	goto	l3977
 11137                           
 11138                           ; BSR set to: 0
 11139  002212  0100               	movlb	0	; () banked
 11140  002214  29BE               	incf	___fldiv@bexp& (0+255),w,b
 11141  002216  A4D8               	btfss	status,2,c
 11142  002218  D009               	goto	l3973
 11143                           
 11144                           ; BSR set to: 0
 11145  00221A  0E00               	movlw	0
 11146  00221C  0100               	movlb	0	; () banked
 11147  00221E  6FA7               	movwf	___fldiv@b& (0+255),b
 11148  002220  0E00               	movlw	0
 11149  002222  6FA8               	movwf	(___fldiv@b+1)& (0+255),b
 11150  002224  0E00               	movlw	0
 11151  002226  6FA9               	movwf	(___fldiv@b+2)& (0+255),b
 11152  002228  0E00               	movlw	0
 11153  00222A  6FAA               	movwf	(___fldiv@b+3)& (0+255),b
 11154  00222C                     l3973:
 11155                           
 11156                           ; BSR set to: 0
 11157  00222C  0100               	movlb	0	; () banked
 11158  00222E  8FA9               	bsf	(___fldiv@b+2)& (0+255),7,b
 11159                           
 11160                           ; BSR set to: 0
 11161  002230  0E00               	movlw	0
 11162  002232  0100               	movlb	0	; () banked
 11163  002234  D008               	goto	L21
 11164  002236                     l3977:
 11165                           
 11166                           ; BSR set to: 0
 11167  002236  0E00               	movlw	0
 11168  002238  0100               	movlb	0	; () banked
 11169  00223A  6FA7               	movwf	___fldiv@b& (0+255),b
 11170  00223C  0E00               	movlw	0
 11171  00223E  6FA8               	movwf	(___fldiv@b+1)& (0+255),b
 11172  002240  0E00               	movlw	0
 11173  002242  6FA9               	movwf	(___fldiv@b+2)& (0+255),b
 11174  002244  0E00               	movlw	0
 11175  002246                     L21:
 11176  002246  6FAA               	movwf	(___fldiv@b+3)& (0+255),b
 11177                           
 11178                           ; BSR set to: 0
 11179                           
 11180                           ; BSR set to: 0
 11181  002248  0100               	movlb	0	; () banked
 11182  00224A  51AE               	movf	(___fldiv@a+3)& (0+255),w,b
 11183  00224C  0B80               	andlw	128
 11184  00224E  0100               	movlb	0	; () banked
 11185  002250  1BB3               	xorwf	___fldiv@sign& (0+255),f,b
 11186                           
 11187                           ; BSR set to: 0
 11188  002252  0100               	movlb	0	; () banked
 11189  002254  51AE               	movf	(___fldiv@a+3)& (0+255),w,b
 11190  002256  25AE               	addwf	(___fldiv@a+3)& (0+255),w,b
 11191  002258  0100               	movlb	0	; () banked
 11192  00225A  6FBF               	movwf	___fldiv@aexp& (0+255),b
 11193                           
 11194                           ; BSR set to: 0
 11195  00225C  0100               	movlb	0	; () banked
 11196  00225E  AFAD               	btfss	(___fldiv@a+2)& (0+255),7,b
 11197  002260  D002               	goto	l3987
 11198                           
 11199                           ; BSR set to: 0
 11200  002262  0100               	movlb	0	; () banked
 11201  002264  81BF               	bsf	___fldiv@aexp& (0+255),0,b
 11202  002266                     l3987:
 11203                           
 11204                           ; BSR set to: 0
 11205  002266  0100               	movlb	0	; () banked
 11206  002268  51BF               	movf	___fldiv@aexp& (0+255),w,b
 11207  00226A  0100               	movlb	0	; () banked
 11208  00226C  B4D8               	btfsc	status,2,c
 11209  00226E  D012               	goto	l3997
 11210                           
 11211                           ; BSR set to: 0
 11212  002270  0100               	movlb	0	; () banked
 11213  002272  29BF               	incf	___fldiv@aexp& (0+255),w,b
 11214  002274  A4D8               	btfss	status,2,c
 11215  002276  D009               	goto	l3993
 11216                           
 11217                           ; BSR set to: 0
 11218  002278  0E00               	movlw	0
 11219  00227A  0100               	movlb	0	; () banked
 11220  00227C  6FAB               	movwf	___fldiv@a& (0+255),b
 11221  00227E  0E00               	movlw	0
 11222  002280  6FAC               	movwf	(___fldiv@a+1)& (0+255),b
 11223  002282  0E00               	movlw	0
 11224  002284  6FAD               	movwf	(___fldiv@a+2)& (0+255),b
 11225  002286  0E00               	movlw	0
 11226  002288  6FAE               	movwf	(___fldiv@a+3)& (0+255),b
 11227  00228A                     l3993:
 11228                           
 11229                           ; BSR set to: 0
 11230  00228A  0100               	movlb	0	; () banked
 11231  00228C  8FAD               	bsf	(___fldiv@a+2)& (0+255),7,b
 11232                           
 11233                           ; BSR set to: 0
 11234  00228E  0E00               	movlw	0
 11235  002290  0100               	movlb	0	; () banked
 11236  002292  D008               	goto	L22
 11237  002294                     l3997:
 11238                           
 11239                           ; BSR set to: 0
 11240  002294  0E00               	movlw	0
 11241  002296  0100               	movlb	0	; () banked
 11242  002298  6FAB               	movwf	___fldiv@a& (0+255),b
 11243  00229A  0E00               	movlw	0
 11244  00229C  6FAC               	movwf	(___fldiv@a+1)& (0+255),b
 11245  00229E  0E00               	movlw	0
 11246  0022A0  6FAD               	movwf	(___fldiv@a+2)& (0+255),b
 11247  0022A2  0E00               	movlw	0
 11248  0022A4                     L22:
 11249  0022A4  6FAE               	movwf	(___fldiv@a+3)& (0+255),b
 11250                           
 11251                           ; BSR set to: 0
 11252                           
 11253                           ; BSR set to: 0
 11254  0022A6  0100               	movlb	0	; () banked
 11255  0022A8  51AB               	movf	___fldiv@a& (0+255),w,b
 11256  0022AA  0100               	movlb	0	; () banked
 11257  0022AC  11AC               	iorwf	(___fldiv@a+1)& (0+255),w,b
 11258  0022AE  0100               	movlb	0	; () banked
 11259  0022B0  11AD               	iorwf	(___fldiv@a+2)& (0+255),w,b
 11260  0022B2  0100               	movlb	0	; () banked
 11261  0022B4  11AE               	iorwf	(___fldiv@a+3)& (0+255),w,b
 11262  0022B6  A4D8               	btfss	status,2,c
 11263  0022B8  D017               	goto	l4009
 11264                           
 11265                           ; BSR set to: 0
 11266  0022BA  0E00               	movlw	0
 11267  0022BC  0100               	movlb	0	; () banked
 11268  0022BE  6FA7               	movwf	___fldiv@b& (0+255),b
 11269  0022C0  0E00               	movlw	0
 11270  0022C2  6FA8               	movwf	(___fldiv@b+1)& (0+255),b
 11271  0022C4  0E00               	movlw	0
 11272  0022C6  6FA9               	movwf	(___fldiv@b+2)& (0+255),b
 11273  0022C8  0E00               	movlw	0
 11274  0022CA  6FAA               	movwf	(___fldiv@b+3)& (0+255),b
 11275                           
 11276                           ; BSR set to: 0
 11277  0022CC  0100               	movlb	0	; () banked
 11278  0022CE  0E80               	movlw	128
 11279  0022D0  13A9               	iorwf	(___fldiv@b+2)& (0+255),f,b
 11280  0022D2  0E7F               	movlw	127
 11281  0022D4  13AA               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11282                           
 11283                           ; BSR set to: 0
 11284  0022D6  C0A7  F0A7         	movff	___fldiv@b,?___fldiv
 11285  0022DA  C0A8  F0A8         	movff	___fldiv@b+1,?___fldiv+1
 11286  0022DE  C0A9  F0A9         	movff	___fldiv@b+2,?___fldiv+2
 11287  0022E2  C0AA  F0AA         	movff	___fldiv@b+3,?___fldiv+3
 11288                           
 11289                           ; BSR set to: 0
 11290  0022E6  0012               	return	
 11291  0022E8                     l4009:
 11292                           
 11293                           ; BSR set to: 0
 11294  0022E8  0100               	movlb	0	; () banked
 11295  0022EA  51BE               	movf	___fldiv@bexp& (0+255),w,b
 11296  0022EC  0100               	movlb	0	; () banked
 11297  0022EE  A4D8               	btfss	status,2,c
 11298  0022F0  D012               	goto	l4017
 11299                           
 11300                           ; BSR set to: 0
 11301  0022F2  0E00               	movlw	0
 11302  0022F4  0100               	movlb	0	; () banked
 11303  0022F6  6FA7               	movwf	___fldiv@b& (0+255),b
 11304  0022F8  0E00               	movlw	0
 11305  0022FA  6FA8               	movwf	(___fldiv@b+1)& (0+255),b
 11306  0022FC  0E00               	movlw	0
 11307  0022FE  6FA9               	movwf	(___fldiv@b+2)& (0+255),b
 11308  002300  0E00               	movlw	0
 11309  002302  6FAA               	movwf	(___fldiv@b+3)& (0+255),b
 11310                           
 11311                           ; BSR set to: 0
 11312  002304  C0A7  F0A7         	movff	___fldiv@b,?___fldiv
 11313  002308  C0A8  F0A8         	movff	___fldiv@b+1,?___fldiv+1
 11314  00230C  C0A9  F0A9         	movff	___fldiv@b+2,?___fldiv+2
 11315  002310  C0AA  F0AA         	movff	___fldiv@b+3,?___fldiv+3
 11316                           
 11317                           ; BSR set to: 0
 11318  002314  0012               	return	
 11319  002316                     l4017:
 11320                           
 11321                           ; BSR set to: 0
 11322  002316  0100               	movlb	0	; () banked
 11323  002318  51BF               	movf	___fldiv@aexp& (0+255),w,b
 11324  00231A  0100               	movlb	0	; () banked
 11325  00231C  6FAF               	movwf	??___fldiv& (0+255),b
 11326  00231E  6BB0               	clrf	(??___fldiv+1)& (0+255),b
 11327  002320  0100               	movlb	0	; () banked
 11328  002322  1FAF               	comf	??___fldiv& (0+255),f,b
 11329  002324  1FB0               	comf	(??___fldiv+1)& (0+255),f,b
 11330  002326  4BAF               	infsnz	??___fldiv& (0+255),f,b
 11331  002328  2BB0               	incf	(??___fldiv+1)& (0+255),f,b
 11332  00232A  0100               	movlb	0	; () banked
 11333  00232C  51BE               	movf	___fldiv@bexp& (0+255),w,b
 11334  00232E  0100               	movlb	0	; () banked
 11335  002330  6FB1               	movwf	(??___fldiv+2)& (0+255),b
 11336  002332  6BB2               	clrf	(??___fldiv+3)& (0+255),b
 11337  002334  0100               	movlb	0	; () banked
 11338  002336  51AF               	movf	??___fldiv& (0+255),w,b
 11339  002338  0100               	movlb	0	; () banked
 11340  00233A  27B1               	addwf	(??___fldiv+2)& (0+255),f,b
 11341  00233C  0100               	movlb	0	; () banked
 11342  00233E  51B0               	movf	(??___fldiv+1)& (0+255),w,b
 11343  002340  0100               	movlb	0	; () banked
 11344  002342  23B2               	addwfc	(??___fldiv+3)& (0+255),f,b
 11345  002344  0E7F               	movlw	127
 11346  002346  0100               	movlb	0	; () banked
 11347  002348  25B1               	addwf	(??___fldiv+2)& (0+255),w,b
 11348  00234A  0100               	movlb	0	; () banked
 11349  00234C  6FB8               	movwf	___fldiv@new_exp& (0+255),b
 11350  00234E  0E00               	movlw	0
 11351  002350  0100               	movlb	0	; () banked
 11352  002352  21B2               	addwfc	(??___fldiv+3)& (0+255),w,b
 11353  002354  0100               	movlb	0	; () banked
 11354  002356  6FB9               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11355                           
 11356                           ; BSR set to: 0
 11357  002358  C0A7  F0B4         	movff	___fldiv@b,___fldiv@rem
 11358  00235C  C0A8  F0B5         	movff	___fldiv@b+1,___fldiv@rem+1
 11359  002360  C0A9  F0B6         	movff	___fldiv@b+2,___fldiv@rem+2
 11360  002364  C0AA  F0B7         	movff	___fldiv@b+3,___fldiv@rem+3
 11361                           
 11362                           ; BSR set to: 0
 11363  002368  0E00               	movlw	0
 11364  00236A  0100               	movlb	0	; () banked
 11365  00236C  6FA7               	movwf	___fldiv@b& (0+255),b
 11366  00236E  0E00               	movlw	0
 11367  002370  6FA8               	movwf	(___fldiv@b+1)& (0+255),b
 11368  002372  0E00               	movlw	0
 11369  002374  6FA9               	movwf	(___fldiv@b+2)& (0+255),b
 11370  002376  0E00               	movlw	0
 11371  002378  6FAA               	movwf	(___fldiv@b+3)& (0+255),b
 11372                           
 11373                           ; BSR set to: 0
 11374  00237A  0E00               	movlw	0
 11375  00237C  0100               	movlb	0	; () banked
 11376  00237E  6FBA               	movwf	___fldiv@grs& (0+255),b
 11377  002380  0E00               	movlw	0
 11378  002382  6FBB               	movwf	(___fldiv@grs+1)& (0+255),b
 11379  002384  0E00               	movlw	0
 11380  002386  6FBC               	movwf	(___fldiv@grs+2)& (0+255),b
 11381  002388  0E00               	movlw	0
 11382  00238A  6FBD               	movwf	(___fldiv@grs+3)& (0+255),b
 11383                           
 11384                           ; BSR set to: 0
 11385  00238C  0E00               	movlw	0
 11386  00238E  0100               	movlb	0	; () banked
 11387  002390  6FBF               	movwf	___fldiv@aexp& (0+255),b
 11388  002392  D042               	goto	l1045
 11389  002394                     l4027:
 11390                           
 11391                           ; BSR set to: 0
 11392  002394  0100               	movlb	0	; () banked
 11393  002396  51BF               	movf	___fldiv@aexp& (0+255),w,b
 11394  002398  0100               	movlb	0	; () banked
 11395  00239A  B4D8               	btfsc	status,2,c
 11396  00239C  D017               	goto	l4035
 11397                           
 11398                           ; BSR set to: 0
 11399  00239E  0100               	movlb	0	; () banked
 11400  0023A0  90D8               	bcf	status,0,c
 11401  0023A2  37B4               	rlcf	___fldiv@rem& (0+255),f,b
 11402  0023A4  37B5               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11403  0023A6  37B6               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11404  0023A8  37B7               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11405  0023AA  0100               	movlb	0	; () banked
 11406  0023AC  90D8               	bcf	status,0,c
 11407  0023AE  37A7               	rlcf	___fldiv@b& (0+255),f,b
 11408  0023B0  37A8               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11409  0023B2  37A9               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11410  0023B4  37AA               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11411                           
 11412                           ; BSR set to: 0
 11413  0023B6  0100               	movlb	0	; () banked
 11414  0023B8  AFBD               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11415  0023BA  D002               	goto	l1048
 11416                           
 11417                           ; BSR set to: 0
 11418  0023BC  0100               	movlb	0	; () banked
 11419  0023BE  81A7               	bsf	___fldiv@b& (0+255),0,b
 11420  0023C0                     l1048:
 11421                           
 11422                           ; BSR set to: 0
 11423  0023C0  0100               	movlb	0	; () banked
 11424  0023C2  90D8               	bcf	status,0,c
 11425  0023C4  37BA               	rlcf	___fldiv@grs& (0+255),f,b
 11426  0023C6  37BB               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11427  0023C8  37BC               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11428  0023CA  37BD               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11429  0023CC                     l4035:
 11430                           
 11431                           ; BSR set to: 0
 11432  0023CC  0100               	movlb	0	; () banked
 11433  0023CE  51AB               	movf	___fldiv@a& (0+255),w,b
 11434  0023D0  0100               	movlb	0	; () banked
 11435  0023D2  5DB4               	subwf	___fldiv@rem& (0+255),w,b
 11436  0023D4  0100               	movlb	0	; () banked
 11437  0023D6  51AC               	movf	(___fldiv@a+1)& (0+255),w,b
 11438  0023D8  0100               	movlb	0	; () banked
 11439  0023DA  59B5               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 11440  0023DC  0100               	movlb	0	; () banked
 11441  0023DE  51AD               	movf	(___fldiv@a+2)& (0+255),w,b
 11442  0023E0  0100               	movlb	0	; () banked
 11443  0023E2  59B6               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 11444  0023E4  0100               	movlb	0	; () banked
 11445  0023E6  51AE               	movf	(___fldiv@a+3)& (0+255),w,b
 11446  0023E8  0100               	movlb	0	; () banked
 11447  0023EA  59B7               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 11448  0023EC  A0D8               	btfss	status,0,c
 11449  0023EE  D012               	goto	l4041
 11450                           
 11451                           ; BSR set to: 0
 11452  0023F0  0100               	movlb	0	; () banked
 11453  0023F2  8DBD               	bsf	(___fldiv@grs+3)& (0+255),6,b
 11454                           
 11455                           ; BSR set to: 0
 11456  0023F4  0100               	movlb	0	; () banked
 11457  0023F6  51AB               	movf	___fldiv@a& (0+255),w,b
 11458  0023F8  0100               	movlb	0	; () banked
 11459  0023FA  5FB4               	subwf	___fldiv@rem& (0+255),f,b
 11460  0023FC  0100               	movlb	0	; () banked
 11461  0023FE  51AC               	movf	(___fldiv@a+1)& (0+255),w,b
 11462  002400  0100               	movlb	0	; () banked
 11463  002402  5BB5               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 11464  002404  0100               	movlb	0	; () banked
 11465  002406  51AD               	movf	(___fldiv@a+2)& (0+255),w,b
 11466  002408  0100               	movlb	0	; () banked
 11467  00240A  5BB6               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 11468  00240C  0100               	movlb	0	; () banked
 11469  00240E  51AE               	movf	(___fldiv@a+3)& (0+255),w,b
 11470  002410  0100               	movlb	0	; () banked
 11471  002412  5BB7               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 11472  002414                     l4041:
 11473                           
 11474                           ; BSR set to: 0
 11475  002414  0100               	movlb	0	; () banked
 11476  002416  2BBF               	incf	___fldiv@aexp& (0+255),f,b
 11477  002418                     l1045:
 11478                           
 11479                           ; BSR set to: 0
 11480  002418  0E19               	movlw	25
 11481  00241A  0100               	movlb	0	; () banked
 11482  00241C  65BF               	cpfsgt	___fldiv@aexp& (0+255),b
 11483  00241E  D7BA               	goto	l4027
 11484                           
 11485                           ; BSR set to: 0
 11486                           
 11487                           ; BSR set to: 0
 11488  002420  0100               	movlb	0	; () banked
 11489  002422  51B4               	movf	___fldiv@rem& (0+255),w,b
 11490  002424  0100               	movlb	0	; () banked
 11491  002426  11B5               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 11492  002428  0100               	movlb	0	; () banked
 11493  00242A  11B6               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 11494  00242C  0100               	movlb	0	; () banked
 11495  00242E  11B7               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 11496  002430  B4D8               	btfsc	status,2,c
 11497  002432  D018               	goto	l4053
 11498                           
 11499                           ; BSR set to: 0
 11500  002434  0100               	movlb	0	; () banked
 11501  002436  81BA               	bsf	___fldiv@grs& (0+255),0,b
 11502                           
 11503                           ; BSR set to: 0
 11504  002438  D015               	goto	l4053
 11505  00243A                     l4047:
 11506                           
 11507                           ; BSR set to: 0
 11508  00243A  0100               	movlb	0	; () banked
 11509  00243C  90D8               	bcf	status,0,c
 11510  00243E  37A7               	rlcf	___fldiv@b& (0+255),f,b
 11511  002440  37A8               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11512  002442  37A9               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11513  002444  37AA               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11514                           
 11515                           ; BSR set to: 0
 11516  002446  0100               	movlb	0	; () banked
 11517  002448  AFBD               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11518  00244A  D002               	goto	l1054
 11519                           
 11520                           ; BSR set to: 0
 11521  00244C  0100               	movlb	0	; () banked
 11522  00244E  81A7               	bsf	___fldiv@b& (0+255),0,b
 11523  002450                     l1054:
 11524                           
 11525                           ; BSR set to: 0
 11526  002450  0100               	movlb	0	; () banked
 11527  002452  90D8               	bcf	status,0,c
 11528  002454  37BA               	rlcf	___fldiv@grs& (0+255),f,b
 11529  002456  37BB               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11530  002458  37BC               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11531  00245A  37BD               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11532  00245C  0100               	movlb	0	; () banked
 11533  00245E  07B8               	decf	___fldiv@new_exp& (0+255),f,b
 11534  002460  A0D8               	btfss	status,0,c
 11535  002462  07B9               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 11536  002464                     l4053:
 11537                           
 11538                           ; BSR set to: 0
 11539  002464  0100               	movlb	0	; () banked
 11540  002466  AFA9               	btfss	(___fldiv@b+2)& (0+255),7,b
 11541  002468  D7E8               	goto	l4047
 11542                           
 11543                           ; BSR set to: 0
 11544                           
 11545                           ; BSR set to: 0
 11546  00246A  0E00               	movlw	0
 11547  00246C  0100               	movlb	0	; () banked
 11548  00246E  6FBF               	movwf	___fldiv@aexp& (0+255),b
 11549                           
 11550                           ; BSR set to: 0
 11551  002470  0100               	movlb	0	; () banked
 11552  002472  AFBD               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11553  002474  D024               	goto	l1056
 11554                           
 11555                           ; BSR set to: 0
 11556  002476  0EFF               	movlw	255
 11557  002478  0100               	movlb	0	; () banked
 11558  00247A  15BA               	andwf	___fldiv@grs& (0+255),w,b
 11559  00247C  0100               	movlb	0	; () banked
 11560  00247E  6FAF               	movwf	??___fldiv& (0+255),b
 11561  002480  0EFF               	movlw	255
 11562  002482  0100               	movlb	0	; () banked
 11563  002484  15BB               	andwf	(___fldiv@grs+1)& (0+255),w,b
 11564  002486  0100               	movlb	0	; () banked
 11565  002488  6FB0               	movwf	(??___fldiv+1)& (0+255),b
 11566  00248A  0EFF               	movlw	255
 11567  00248C  0100               	movlb	0	; () banked
 11568  00248E  15BC               	andwf	(___fldiv@grs+2)& (0+255),w,b
 11569  002490  0100               	movlb	0	; () banked
 11570  002492  6FB1               	movwf	(??___fldiv+2)& (0+255),b
 11571  002494  0E7F               	movlw	127
 11572  002496  0100               	movlb	0	; () banked
 11573  002498  15BD               	andwf	(___fldiv@grs+3)& (0+255),w,b
 11574  00249A  0100               	movlb	0	; () banked
 11575  00249C  6FB2               	movwf	(??___fldiv+3)& (0+255),b
 11576  00249E  0100               	movlb	0	; () banked
 11577  0024A0  51AF               	movf	??___fldiv& (0+255),w,b
 11578  0024A2  0100               	movlb	0	; () banked
 11579  0024A4  11B0               	iorwf	(??___fldiv+1)& (0+255),w,b
 11580  0024A6  0100               	movlb	0	; () banked
 11581  0024A8  11B1               	iorwf	(??___fldiv+2)& (0+255),w,b
 11582  0024AA  0100               	movlb	0	; () banked
 11583  0024AC  11B2               	iorwf	(??___fldiv+3)& (0+255),w,b
 11584  0024AE  A4D8               	btfss	status,2,c
 11585  0024B0  D003               	goto	l4063
 11586                           
 11587                           ; BSR set to: 0
 11588                           
 11589                           ; BSR set to: 0
 11590  0024B2  0100               	movlb	0	; () banked
 11591  0024B4  A1A7               	btfss	___fldiv@b& (0+255),0,b
 11592  0024B6  D003               	goto	l1056
 11593  0024B8                     l4063:
 11594                           
 11595                           ; BSR set to: 0
 11596  0024B8  0E01               	movlw	1
 11597  0024BA  0100               	movlb	0	; () banked
 11598  0024BC  6FBF               	movwf	___fldiv@aexp& (0+255),b
 11599  0024BE                     l1056:
 11600                           
 11601                           ; BSR set to: 0
 11602  0024BE  0100               	movlb	0	; () banked
 11603  0024C0  51BF               	movf	___fldiv@aexp& (0+255),w,b
 11604  0024C2  0100               	movlb	0	; () banked
 11605  0024C4  B4D8               	btfsc	status,2,c
 11606  0024C6  D023               	goto	l4073
 11607                           
 11608                           ; BSR set to: 0
 11609  0024C8  0E01               	movlw	1
 11610  0024CA  0100               	movlb	0	; () banked
 11611  0024CC  27A7               	addwf	___fldiv@b& (0+255),f,b
 11612  0024CE  0E00               	movlw	0
 11613  0024D0  23A8               	addwfc	(___fldiv@b+1)& (0+255),f,b
 11614  0024D2  23A9               	addwfc	(___fldiv@b+2)& (0+255),f,b
 11615  0024D4  23AA               	addwfc	(___fldiv@b+3)& (0+255),f,b
 11616                           
 11617                           ; BSR set to: 0
 11618  0024D6  0100               	movlb	0	; () banked
 11619  0024D8  A1AA               	btfss	(___fldiv@b+3)& (0+255),0,b
 11620  0024DA  D019               	goto	l4073
 11621                           
 11622                           ; BSR set to: 0
 11623  0024DC  C0A7  F0AF         	movff	___fldiv@b,??___fldiv
 11624  0024E0  C0A8  F0B0         	movff	___fldiv@b+1,??___fldiv+1
 11625  0024E4  C0A9  F0B1         	movff	___fldiv@b+2,??___fldiv+2
 11626  0024E8  C0AA  F0B2         	movff	___fldiv@b+3,??___fldiv+3
 11627  0024EC  0100               	movlb	0	; () banked
 11628  0024EE  35B2               	rlcf	(??___fldiv+3)& (0+255),w,b
 11629  0024F0  33B2               	rrcf	(??___fldiv+3)& (0+255),f,b
 11630  0024F2  33B1               	rrcf	(??___fldiv+2)& (0+255),f,b
 11631  0024F4  33B0               	rrcf	(??___fldiv+1)& (0+255),f,b
 11632  0024F6  33AF               	rrcf	??___fldiv& (0+255),f,b
 11633  0024F8  C0AF  F0A7         	movff	??___fldiv,___fldiv@b
 11634  0024FC  C0B0  F0A8         	movff	??___fldiv+1,___fldiv@b+1
 11635  002500  C0B1  F0A9         	movff	??___fldiv+2,___fldiv@b+2
 11636  002504  C0B2  F0AA         	movff	??___fldiv+3,___fldiv@b+3
 11637                           
 11638                           ; BSR set to: 0
 11639  002508  0100               	movlb	0	; () banked
 11640  00250A  4BB8               	infsnz	___fldiv@new_exp& (0+255),f,b
 11641  00250C  2BB9               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 11642  00250E                     l4073:
 11643                           
 11644                           ; BSR set to: 0
 11645  00250E  0100               	movlb	0	; () banked
 11646  002510  BFB9               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11647  002512  D014               	goto	l4077
 11648  002514  0100               	movlb	0	; () banked
 11649  002516  51B9               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11650  002518  E104               	bnz	u4620
 11651  00251A  0100               	movlb	0	; () banked
 11652  00251C  29B8               	incf	___fldiv@new_exp& (0+255),w,b
 11653  00251E  A0D8               	btfss	status,0,c
 11654  002520  D00D               	goto	l4077
 11655  002522                     u4620:
 11656                           
 11657                           ; BSR set to: 0
 11658  002522  0E00               	movlw	0
 11659  002524  0100               	movlb	0	; () banked
 11660  002526  6FB9               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11661  002528  69B8               	setf	___fldiv@new_exp& (0+255),b
 11662  00252A  0E00               	movlw	0
 11663  00252C  0100               	movlb	0	; () banked
 11664  00252E  6FA7               	movwf	___fldiv@b& (0+255),b
 11665  002530  0E00               	movlw	0
 11666  002532  6FA8               	movwf	(___fldiv@b+1)& (0+255),b
 11667  002534  0E00               	movlw	0
 11668  002536  6FA9               	movwf	(___fldiv@b+2)& (0+255),b
 11669  002538  0E00               	movlw	0
 11670  00253A  6FAA               	movwf	(___fldiv@b+3)& (0+255),b
 11671  00253C                     l4077:
 11672                           
 11673                           ; BSR set to: 0
 11674  00253C  0100               	movlb	0	; () banked
 11675  00253E  BFB9               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11676  002540  D007               	goto	l4079
 11677  002542  0100               	movlb	0	; () banked
 11678  002544  51B9               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11679  002546  E115               	bnz	l4081
 11680  002548  0100               	movlb	0	; () banked
 11681  00254A  05B8               	decf	___fldiv@new_exp& (0+255),w,b
 11682  00254C  B0D8               	btfsc	status,0,c
 11683  00254E  D011               	goto	l4081
 11684  002550                     l4079:
 11685                           
 11686                           ; BSR set to: 0
 11687  002550  0E00               	movlw	0
 11688  002552  0100               	movlb	0	; () banked
 11689  002554  6FB9               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11690  002556  0E00               	movlw	0
 11691  002558  6FB8               	movwf	___fldiv@new_exp& (0+255),b
 11692  00255A  0E00               	movlw	0
 11693  00255C  0100               	movlb	0	; () banked
 11694  00255E  6FA7               	movwf	___fldiv@b& (0+255),b
 11695  002560  0E00               	movlw	0
 11696  002562  6FA8               	movwf	(___fldiv@b+1)& (0+255),b
 11697  002564  0E00               	movlw	0
 11698  002566  6FA9               	movwf	(___fldiv@b+2)& (0+255),b
 11699  002568  0E00               	movlw	0
 11700  00256A  6FAA               	movwf	(___fldiv@b+3)& (0+255),b
 11701  00256C  0E00               	movlw	0
 11702  00256E  0100               	movlb	0	; () banked
 11703  002570  6FB3               	movwf	___fldiv@sign& (0+255),b
 11704  002572                     l4081:
 11705                           
 11706                           ; BSR set to: 0
 11707  002572  C0B8  F0BE         	movff	___fldiv@new_exp,___fldiv@bexp
 11708                           
 11709                           ; BSR set to: 0
 11710  002576  0100               	movlb	0	; () banked
 11711  002578  A1BE               	btfss	___fldiv@bexp& (0+255),0,b
 11712  00257A  D003               	goto	l4087
 11713                           
 11714                           ; BSR set to: 0
 11715  00257C  0100               	movlb	0	; () banked
 11716  00257E  8FA9               	bsf	(___fldiv@b+2)& (0+255),7,b
 11717  002580  D002               	goto	l4089
 11718  002582                     l4087:
 11719                           
 11720                           ; BSR set to: 0
 11721  002582  0100               	movlb	0	; () banked
 11722  002584  9FA9               	bcf	(___fldiv@b+2)& (0+255),7,b
 11723  002586                     l4089:
 11724                           
 11725                           ; BSR set to: 0
 11726  002586  0100               	movlb	0	; () banked
 11727  002588  90D8               	bcf	status,0,c
 11728  00258A  31BE               	rrcf	___fldiv@bexp& (0+255),w,b
 11729  00258C  0100               	movlb	0	; () banked
 11730  00258E  6FAA               	movwf	(___fldiv@b+3)& (0+255),b
 11731                           
 11732                           ; BSR set to: 0
 11733  002590  0100               	movlb	0	; () banked
 11734  002592  51B3               	movf	___fldiv@sign& (0+255),w,b
 11735  002594  0100               	movlb	0	; () banked
 11736  002596  13AA               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11737                           
 11738                           ; BSR set to: 0
 11739  002598  C0A7  F0A7         	movff	___fldiv@b,?___fldiv
 11740  00259C  C0A8  F0A8         	movff	___fldiv@b+1,?___fldiv+1
 11741  0025A0  C0A9  F0A9         	movff	___fldiv@b+2,?___fldiv+2
 11742  0025A4  C0AA  F0AA         	movff	___fldiv@b+3,?___fldiv+3
 11743  0025A8  0012               	return	
 11744  0025AA                     __end_of___fldiv:
 11745                           	opt stack 0
 11746                           tblptru	equ	0xFF8
 11747                           tblptrh	equ	0xFF7
 11748                           tblptrl	equ	0xFF6
 11749                           tablat	equ	0xFF5
 11750                           prodh	equ	0xFF4
 11751                           prodl	equ	0xFF3
 11752                           intcon	equ	0xFF2
 11753                           intcon2	equ	0xFF1
 11754                           intcon3	equ	0xFF0
 11755                           postinc0	equ	0xFEE
 11756                           wreg	equ	0xFE8
 11757                           indf1	equ	0xFE7
 11758                           postdec1	equ	0xFE5
 11759                           fsr1h	equ	0xFE2
 11760                           fsr1l	equ	0xFE1
 11761                           indf2	equ	0xFDF
 11762                           postinc2	equ	0xFDE
 11763                           postdec2	equ	0xFDD
 11764                           fsr2h	equ	0xFDA
 11765                           fsr2l	equ	0xFD9
 11766                           status	equ	0xFD8
 11767                           
 11768 ;; *************** function ___fladd *****************
 11769 ;; Defined at:
 11770 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;  b               4   52[BANK0 ] unsigned char 
 11773 ;;  a               4   56[BANK0 ] unsigned char 
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;  grs             1   71[BANK0 ] unsigned char 
 11776 ;;  bexp            1   70[BANK0 ] unsigned char 
 11777 ;;  aexp            1   69[BANK0 ] unsigned char 
 11778 ;;  signs           1   68[BANK0 ] unsigned char 
 11779 ;; Return value:  Size  Location     Type
 11780 ;;                  4   52[BANK0 ] unsigned char 
 11781 ;; Registers used:
 11782 ;;		wreg, status,2, status,0
 11783 ;; Tracked objects:
 11784 ;;		On entry : 0/0
 11785 ;;		On exit  : 0/0
 11786 ;;		Unchanged: 0/0
 11787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11788 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11789 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11790 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11791 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11792 ;;Total ram usage:       20 bytes
 11793 ;; Hardware stack levels used:    1
 11794 ;; Hardware stack levels required when called:    4
 11795 ;; This function calls:
 11796 ;;		Nothing
 11797 ;; This function is called by:
 11798 ;;		_set_pwm1_percent
 11799 ;;		_Auto_Heat
 11800 ;;		_sprintf
 11801 ;;		___flsub
 11802 ;; This function uses a non-reentrant model
 11803 ;;
 11804                           
 11805                           	psect	text37
 11806  00189C                     __ptext37:
 11807                           	opt stack 0
 11808  00189C                     ___fladd:
 11809                           	opt stack 24
 11810                           
 11811                           ; BSR set to: 0
 11812                           ;incstack = 0
 11813  00189C  0100               	movlb	0	; () banked
 11814  00189E  51B7               	movf	(___fladd@b+3)& (0+255),w,b
 11815  0018A0  0B80               	andlw	128
 11816  0018A2  0100               	movlb	0	; () banked
 11817  0018A4  6FC4               	movwf	___fladd@signs& (0+255),b
 11818  0018A6  0100               	movlb	0	; () banked
 11819  0018A8  51B7               	movf	(___fladd@b+3)& (0+255),w,b
 11820  0018AA  25B7               	addwf	(___fladd@b+3)& (0+255),w,b
 11821  0018AC  0100               	movlb	0	; () banked
 11822  0018AE  6FC6               	movwf	___fladd@bexp& (0+255),b
 11823                           
 11824                           ; BSR set to: 0
 11825  0018B0  0100               	movlb	0	; () banked
 11826  0018B2  AFB6               	btfss	(___fladd@b+2)& (0+255),7,b
 11827  0018B4  D002               	goto	l3765
 11828                           
 11829                           ; BSR set to: 0
 11830  0018B6  0100               	movlb	0	; () banked
 11831  0018B8  81C6               	bsf	___fladd@bexp& (0+255),0,b
 11832  0018BA                     l3765:
 11833                           
 11834                           ; BSR set to: 0
 11835  0018BA  0100               	movlb	0	; () banked
 11836  0018BC  51C6               	movf	___fladd@bexp& (0+255),w,b
 11837  0018BE  0100               	movlb	0	; () banked
 11838  0018C0  B4D8               	btfsc	status,2,c
 11839  0018C2  D012               	goto	l3775
 11840                           
 11841                           ; BSR set to: 0
 11842  0018C4  0100               	movlb	0	; () banked
 11843  0018C6  29C6               	incf	___fladd@bexp& (0+255),w,b
 11844  0018C8  A4D8               	btfss	status,2,c
 11845  0018CA  D009               	goto	l3771
 11846                           
 11847                           ; BSR set to: 0
 11848  0018CC  0E00               	movlw	0
 11849  0018CE  0100               	movlb	0	; () banked
 11850  0018D0  6FB4               	movwf	___fladd@b& (0+255),b
 11851  0018D2  0E00               	movlw	0
 11852  0018D4  6FB5               	movwf	(___fladd@b+1)& (0+255),b
 11853  0018D6  0E00               	movlw	0
 11854  0018D8  6FB6               	movwf	(___fladd@b+2)& (0+255),b
 11855  0018DA  0E00               	movlw	0
 11856  0018DC  6FB7               	movwf	(___fladd@b+3)& (0+255),b
 11857  0018DE                     l3771:
 11858                           
 11859                           ; BSR set to: 0
 11860  0018DE  0100               	movlb	0	; () banked
 11861  0018E0  8FB6               	bsf	(___fladd@b+2)& (0+255),7,b
 11862                           
 11863                           ; BSR set to: 0
 11864  0018E2  0E00               	movlw	0
 11865  0018E4  0100               	movlb	0	; () banked
 11866  0018E6  D008               	goto	L23
 11867  0018E8                     l3775:
 11868                           
 11869                           ; BSR set to: 0
 11870  0018E8  0E00               	movlw	0
 11871  0018EA  0100               	movlb	0	; () banked
 11872  0018EC  6FB4               	movwf	___fladd@b& (0+255),b
 11873  0018EE  0E00               	movlw	0
 11874  0018F0  6FB5               	movwf	(___fladd@b+1)& (0+255),b
 11875  0018F2  0E00               	movlw	0
 11876  0018F4  6FB6               	movwf	(___fladd@b+2)& (0+255),b
 11877  0018F6  0E00               	movlw	0
 11878  0018F8                     L23:
 11879  0018F8  6FB7               	movwf	(___fladd@b+3)& (0+255),b
 11880                           
 11881                           ; BSR set to: 0
 11882                           
 11883                           ; BSR set to: 0
 11884  0018FA  0100               	movlb	0	; () banked
 11885  0018FC  51BB               	movf	(___fladd@a+3)& (0+255),w,b
 11886  0018FE  0B80               	andlw	128
 11887  001900  0100               	movlb	0	; () banked
 11888  001902  6FC5               	movwf	___fladd@aexp& (0+255),b
 11889                           
 11890                           ; BSR set to: 0
 11891  001904  0100               	movlb	0	; () banked
 11892  001906  51C4               	movf	___fladd@signs& (0+255),w,b
 11893  001908  0100               	movlb	0	; () banked
 11894  00190A  19C5               	xorwf	___fladd@aexp& (0+255),w,b
 11895  00190C  B4D8               	btfsc	status,2,c
 11896  00190E  D002               	goto	l3783
 11897                           
 11898                           ; BSR set to: 0
 11899  001910  0100               	movlb	0	; () banked
 11900  001912  8DC4               	bsf	___fladd@signs& (0+255),6,b
 11901  001914                     l3783:
 11902                           
 11903                           ; BSR set to: 0
 11904  001914  0100               	movlb	0	; () banked
 11905  001916  51BB               	movf	(___fladd@a+3)& (0+255),w,b
 11906  001918  25BB               	addwf	(___fladd@a+3)& (0+255),w,b
 11907  00191A  0100               	movlb	0	; () banked
 11908  00191C  6FC5               	movwf	___fladd@aexp& (0+255),b
 11909                           
 11910                           ; BSR set to: 0
 11911  00191E  0100               	movlb	0	; () banked
 11912  001920  AFBA               	btfss	(___fladd@a+2)& (0+255),7,b
 11913  001922  D002               	goto	l3789
 11914                           
 11915                           ; BSR set to: 0
 11916  001924  0100               	movlb	0	; () banked
 11917  001926  81C5               	bsf	___fladd@aexp& (0+255),0,b
 11918  001928                     l3789:
 11919                           
 11920                           ; BSR set to: 0
 11921  001928  0100               	movlb	0	; () banked
 11922  00192A  51C5               	movf	___fladd@aexp& (0+255),w,b
 11923  00192C  0100               	movlb	0	; () banked
 11924  00192E  B4D8               	btfsc	status,2,c
 11925  001930  D012               	goto	l3799
 11926                           
 11927                           ; BSR set to: 0
 11928  001932  0100               	movlb	0	; () banked
 11929  001934  29C5               	incf	___fladd@aexp& (0+255),w,b
 11930  001936  A4D8               	btfss	status,2,c
 11931  001938  D009               	goto	l3795
 11932                           
 11933                           ; BSR set to: 0
 11934  00193A  0E00               	movlw	0
 11935  00193C  0100               	movlb	0	; () banked
 11936  00193E  6FB8               	movwf	___fladd@a& (0+255),b
 11937  001940  0E00               	movlw	0
 11938  001942  6FB9               	movwf	(___fladd@a+1)& (0+255),b
 11939  001944  0E00               	movlw	0
 11940  001946  6FBA               	movwf	(___fladd@a+2)& (0+255),b
 11941  001948  0E00               	movlw	0
 11942  00194A  6FBB               	movwf	(___fladd@a+3)& (0+255),b
 11943  00194C                     l3795:
 11944                           
 11945                           ; BSR set to: 0
 11946  00194C  0100               	movlb	0	; () banked
 11947  00194E  8FBA               	bsf	(___fladd@a+2)& (0+255),7,b
 11948                           
 11949                           ; BSR set to: 0
 11950  001950  0E00               	movlw	0
 11951  001952  0100               	movlb	0	; () banked
 11952  001954  D008               	goto	L24
 11953  001956                     l3799:
 11954                           
 11955                           ; BSR set to: 0
 11956  001956  0E00               	movlw	0
 11957  001958  0100               	movlb	0	; () banked
 11958  00195A  6FB8               	movwf	___fladd@a& (0+255),b
 11959  00195C  0E00               	movlw	0
 11960  00195E  6FB9               	movwf	(___fladd@a+1)& (0+255),b
 11961  001960  0E00               	movlw	0
 11962  001962  6FBA               	movwf	(___fladd@a+2)& (0+255),b
 11963  001964  0E00               	movlw	0
 11964  001966                     L24:
 11965  001966  6FBB               	movwf	(___fladd@a+3)& (0+255),b
 11966                           
 11967                           ; BSR set to: 0
 11968                           
 11969                           ; BSR set to: 0
 11970  001968  0100               	movlb	0	; () banked
 11971  00196A  51C6               	movf	___fladd@bexp& (0+255),w,b
 11972  00196C  0100               	movlb	0	; () banked
 11973  00196E  5DC5               	subwf	___fladd@aexp& (0+255),w,b
 11974  001970  B0D8               	btfsc	status,0,c
 11975  001972  D024               	goto	l3837
 11976                           
 11977                           ; BSR set to: 0
 11978  001974  0100               	movlb	0	; () banked
 11979  001976  ADC4               	btfss	___fladd@signs& (0+255),6,b
 11980  001978  D003               	goto	l3807
 11981                           
 11982                           ; BSR set to: 0
 11983  00197A  0E80               	movlw	128
 11984  00197C  0100               	movlb	0	; () banked
 11985  00197E  1BC4               	xorwf	___fladd@signs& (0+255),f,b
 11986  001980                     l3807:
 11987                           
 11988                           ; BSR set to: 0
 11989  001980  C0C6  F0C7         	movff	___fladd@bexp,___fladd@grs
 11990                           
 11991                           ; BSR set to: 0
 11992  001984  C0C5  F0C6         	movff	___fladd@aexp,___fladd@bexp
 11993                           
 11994                           ; BSR set to: 0
 11995  001988  C0C7  F0C5         	movff	___fladd@grs,___fladd@aexp
 11996                           
 11997                           ; BSR set to: 0
 11998  00198C  C0B4  F0C7         	movff	___fladd@b,___fladd@grs
 11999                           
 12000                           ; BSR set to: 0
 12001  001990  C0B8  F0B4         	movff	___fladd@a,___fladd@b
 12002                           
 12003                           ; BSR set to: 0
 12004  001994  C0C7  F0B8         	movff	___fladd@grs,___fladd@a
 12005                           
 12006                           ; BSR set to: 0
 12007  001998  C0B5  F0C7         	movff	___fladd@b+1,___fladd@grs
 12008                           
 12009                           ; BSR set to: 0
 12010  00199C  C0B9  F0B5         	movff	___fladd@a+1,___fladd@b+1
 12011                           
 12012                           ; BSR set to: 0
 12013  0019A0  C0C7  F0B9         	movff	___fladd@grs,___fladd@a+1
 12014                           
 12015                           ; BSR set to: 0
 12016  0019A4  C0B6  F0C7         	movff	___fladd@b+2,___fladd@grs
 12017                           
 12018                           ; BSR set to: 0
 12019  0019A8  C0BA  F0B6         	movff	___fladd@a+2,___fladd@b+2
 12020                           
 12021                           ; BSR set to: 0
 12022  0019AC  C0C7  F0BA         	movff	___fladd@grs,___fladd@a+2
 12023                           
 12024                           ; BSR set to: 0
 12025  0019B0  C0B7  F0C7         	movff	___fladd@b+3,___fladd@grs
 12026                           
 12027                           ; BSR set to: 0
 12028  0019B4  C0BB  F0B7         	movff	___fladd@a+3,___fladd@b+3
 12029                           
 12030                           ; BSR set to: 0
 12031  0019B8  C0C7  F0BB         	movff	___fladd@grs,___fladd@a+3
 12032  0019BC                     l3837:
 12033                           
 12034                           ; BSR set to: 0
 12035  0019BC  0E00               	movlw	0
 12036  0019BE  0100               	movlb	0	; () banked
 12037  0019C0  6FC7               	movwf	___fladd@grs& (0+255),b
 12038                           
 12039                           ; BSR set to: 0
 12040  0019C2  0100               	movlb	0	; () banked
 12041  0019C4  51C6               	movf	___fladd@bexp& (0+255),w,b
 12042  0019C6  0100               	movlb	0	; () banked
 12043  0019C8  6FBC               	movwf	??___fladd& (0+255),b
 12044  0019CA  6BBD               	clrf	(??___fladd+1)& (0+255),b
 12045  0019CC  0100               	movlb	0	; () banked
 12046  0019CE  1FBC               	comf	??___fladd& (0+255),f,b
 12047  0019D0  1FBD               	comf	(??___fladd+1)& (0+255),f,b
 12048  0019D2  4BBC               	infsnz	??___fladd& (0+255),f,b
 12049  0019D4  2BBD               	incf	(??___fladd+1)& (0+255),f,b
 12050  0019D6  0100               	movlb	0	; () banked
 12051  0019D8  51C5               	movf	___fladd@aexp& (0+255),w,b
 12052  0019DA  0100               	movlb	0	; () banked
 12053  0019DC  6FBE               	movwf	(??___fladd+2)& (0+255),b
 12054  0019DE  6BBF               	clrf	(??___fladd+3)& (0+255),b
 12055  0019E0  0100               	movlb	0	; () banked
 12056  0019E2  51BC               	movf	??___fladd& (0+255),w,b
 12057  0019E4  0100               	movlb	0	; () banked
 12058  0019E6  27BE               	addwf	(??___fladd+2)& (0+255),f,b
 12059  0019E8  0100               	movlb	0	; () banked
 12060  0019EA  51BD               	movf	(??___fladd+1)& (0+255),w,b
 12061  0019EC  0100               	movlb	0	; () banked
 12062  0019EE  23BF               	addwfc	(??___fladd+3)& (0+255),f,b
 12063  0019F0  0100               	movlb	0	; () banked
 12064  0019F2  BFBF               	btfsc	(??___fladd+3)& (0+255),7,b
 12065  0019F4  D03D               	goto	l990
 12066  0019F6  0100               	movlb	0	; () banked
 12067  0019F8  51BF               	movf	(??___fladd+3)& (0+255),w,b
 12068  0019FA  E105               	bnz	u4120
 12069  0019FC  0E1A               	movlw	26
 12070  0019FE  0100               	movlb	0	; () banked
 12071  001A00  5DBE               	subwf	(??___fladd+2)& (0+255),w,b
 12072  001A02  A0D8               	btfss	status,0,c
 12073  001A04  D035               	goto	l990
 12074  001A06                     u4120:
 12075                           
 12076                           ; BSR set to: 0
 12077  001A06  0100               	movlb	0	; () banked
 12078  001A08  51B4               	movf	___fladd@b& (0+255),w,b
 12079  001A0A  0100               	movlb	0	; () banked
 12080  001A0C  11B5               	iorwf	(___fladd@b+1)& (0+255),w,b
 12081  001A0E  0100               	movlb	0	; () banked
 12082  001A10  11B6               	iorwf	(___fladd@b+2)& (0+255),w,b
 12083  001A12  0100               	movlb	0	; () banked
 12084  001A14  11B7               	iorwf	(___fladd@b+3)& (0+255),w,b
 12085  001A16  B4D8               	btfsc	status,2,c
 12086  001A18  D002               	goto	u4130
 12087  001A1A  0E01               	movlw	1
 12088  001A1C  D001               	goto	u4140
 12089  001A1E                     u4130:
 12090  001A1E  0E00               	movlw	0
 12091  001A20                     u4140:
 12092  001A20  0100               	movlb	0	; () banked
 12093  001A22  6FC7               	movwf	___fladd@grs& (0+255),b
 12094                           
 12095                           ; BSR set to: 0
 12096  001A24  0E00               	movlw	0
 12097  001A26  0100               	movlb	0	; () banked
 12098  001A28  6FB4               	movwf	___fladd@b& (0+255),b
 12099  001A2A  0E00               	movlw	0
 12100  001A2C  6FB5               	movwf	(___fladd@b+1)& (0+255),b
 12101  001A2E  0E00               	movlw	0
 12102  001A30  6FB6               	movwf	(___fladd@b+2)& (0+255),b
 12103  001A32  0E00               	movlw	0
 12104  001A34  6FB7               	movwf	(___fladd@b+3)& (0+255),b
 12105                           
 12106                           ; BSR set to: 0
 12107  001A36  C0C5  F0C6         	movff	___fladd@aexp,___fladd@bexp
 12108  001A3A  D020               	goto	l989
 12109  001A3C                     l991:
 12110                           
 12111                           ; BSR set to: 0
 12112  001A3C  0100               	movlb	0	; () banked
 12113  001A3E  A1C7               	btfss	___fladd@grs& (0+255),0,b
 12114  001A40  D007               	goto	l3849
 12115                           
 12116                           ; BSR set to: 0
 12117  001A42  0100               	movlb	0	; () banked
 12118  001A44  90D8               	bcf	status,0,c
 12119  001A46  31C7               	rrcf	___fladd@grs& (0+255),w,b
 12120  001A48  0901               	iorlw	1
 12121  001A4A  0100               	movlb	0	; () banked
 12122  001A4C  6FC7               	movwf	___fladd@grs& (0+255),b
 12123  001A4E  D003               	goto	l3851
 12124  001A50                     l3849:
 12125                           
 12126                           ; BSR set to: 0
 12127  001A50  0100               	movlb	0	; () banked
 12128  001A52  90D8               	bcf	status,0,c
 12129  001A54  33C7               	rrcf	___fladd@grs& (0+255),f,b
 12130  001A56                     l3851:
 12131                           
 12132                           ; BSR set to: 0
 12133  001A56  0100               	movlb	0	; () banked
 12134  001A58  A1B4               	btfss	___fladd@b& (0+255),0,b
 12135  001A5A  D002               	goto	l3855
 12136                           
 12137                           ; BSR set to: 0
 12138  001A5C  0100               	movlb	0	; () banked
 12139  001A5E  8FC7               	bsf	___fladd@grs& (0+255),7,b
 12140  001A60                     l3855:
 12141                           
 12142                           ; BSR set to: 0
 12143  001A60  0100               	movlb	0	; () banked
 12144  001A62  35B7               	rlcf	(___fladd@b+3)& (0+255),w,b
 12145  001A64  33B7               	rrcf	(___fladd@b+3)& (0+255),f,b
 12146  001A66  33B6               	rrcf	(___fladd@b+2)& (0+255),f,b
 12147  001A68  33B5               	rrcf	(___fladd@b+1)& (0+255),f,b
 12148  001A6A  33B4               	rrcf	___fladd@b& (0+255),f,b
 12149                           
 12150                           ; BSR set to: 0
 12151  001A6C  0100               	movlb	0	; () banked
 12152  001A6E  2BC6               	incf	___fladd@bexp& (0+255),f,b
 12153  001A70                     l990:
 12154                           
 12155                           ; BSR set to: 0
 12156  001A70  0100               	movlb	0	; () banked
 12157  001A72  51C5               	movf	___fladd@aexp& (0+255),w,b
 12158  001A74  0100               	movlb	0	; () banked
 12159  001A76  5DC6               	subwf	___fladd@bexp& (0+255),w,b
 12160  001A78  A0D8               	btfss	status,0,c
 12161  001A7A  D7E0               	goto	l991
 12162  001A7C                     l989:
 12163                           
 12164                           ; BSR set to: 0
 12165  001A7C  0100               	movlb	0	; () banked
 12166  001A7E  BDC4               	btfsc	___fladd@signs& (0+255),6,b
 12167  001A80  D03F               	goto	l3883
 12168                           
 12169                           ; BSR set to: 0
 12170  001A82  0100               	movlb	0	; () banked
 12171  001A84  51C6               	movf	___fladd@bexp& (0+255),w,b
 12172  001A86  0100               	movlb	0	; () banked
 12173  001A88  A4D8               	btfss	status,2,c
 12174  001A8A  D00A               	goto	l3865
 12175                           
 12176                           ; BSR set to: 0
 12177  001A8C  0E00               	movlw	0
 12178  001A8E  0100               	movlb	0	; () banked
 12179  001A90  6FB4               	movwf	?___fladd& (0+255),b
 12180  001A92  0E00               	movlw	0
 12181  001A94  6FB5               	movwf	(?___fladd+1)& (0+255),b
 12182  001A96  0E00               	movlw	0
 12183  001A98  6FB6               	movwf	(?___fladd+2)& (0+255),b
 12184  001A9A  0E00               	movlw	0
 12185  001A9C  6FB7               	movwf	(?___fladd+3)& (0+255),b
 12186                           
 12187                           ; BSR set to: 0
 12188  001A9E  0012               	return	
 12189  001AA0                     l3865:
 12190                           
 12191                           ; BSR set to: 0
 12192  001AA0  0100               	movlb	0	; () banked
 12193  001AA2  51B8               	movf	___fladd@a& (0+255),w,b
 12194  001AA4  0100               	movlb	0	; () banked
 12195  001AA6  27B4               	addwf	___fladd@b& (0+255),f,b
 12196  001AA8  0100               	movlb	0	; () banked
 12197  001AAA  51B9               	movf	(___fladd@a+1)& (0+255),w,b
 12198  001AAC  0100               	movlb	0	; () banked
 12199  001AAE  23B5               	addwfc	(___fladd@b+1)& (0+255),f,b
 12200  001AB0  0100               	movlb	0	; () banked
 12201  001AB2  51BA               	movf	(___fladd@a+2)& (0+255),w,b
 12202  001AB4  0100               	movlb	0	; () banked
 12203  001AB6  23B6               	addwfc	(___fladd@b+2)& (0+255),f,b
 12204  001AB8  0100               	movlb	0	; () banked
 12205  001ABA  51BB               	movf	(___fladd@a+3)& (0+255),w,b
 12206  001ABC  0100               	movlb	0	; () banked
 12207  001ABE  23B7               	addwfc	(___fladd@b+3)& (0+255),f,b
 12208                           
 12209                           ; BSR set to: 0
 12210  001AC0  0100               	movlb	0	; () banked
 12211  001AC2  A1B7               	btfss	(___fladd@b+3)& (0+255),0,b
 12212  001AC4  D0CC               	goto	l3919
 12213                           
 12214                           ; BSR set to: 0
 12215  001AC6  0100               	movlb	0	; () banked
 12216  001AC8  A1C7               	btfss	___fladd@grs& (0+255),0,b
 12217  001ACA  D009               	goto	l3873
 12218                           
 12219                           ; BSR set to: 0
 12220  001ACC  0100               	movlb	0	; () banked
 12221  001ACE  90D8               	bcf	status,0,c
 12222  001AD0  33C7               	rrcf	___fladd@grs& (0+255),f,b
 12223  001AD2  0100               	movlb	0	; () banked
 12224  001AD4  51C7               	movf	___fladd@grs& (0+255),w,b
 12225  001AD6  0901               	iorlw	1
 12226  001AD8  0100               	movlb	0	; () banked
 12227  001ADA  6FC7               	movwf	___fladd@grs& (0+255),b
 12228  001ADC  D003               	goto	l3875
 12229  001ADE                     l3873:
 12230                           
 12231                           ; BSR set to: 0
 12232  001ADE  0100               	movlb	0	; () banked
 12233  001AE0  90D8               	bcf	status,0,c
 12234  001AE2  33C7               	rrcf	___fladd@grs& (0+255),f,b
 12235  001AE4                     l3875:
 12236                           
 12237                           ; BSR set to: 0
 12238  001AE4  0100               	movlb	0	; () banked
 12239  001AE6  A1B4               	btfss	___fladd@b& (0+255),0,b
 12240  001AE8  D002               	goto	l3879
 12241                           
 12242                           ; BSR set to: 0
 12243  001AEA  0100               	movlb	0	; () banked
 12244  001AEC  8FC7               	bsf	___fladd@grs& (0+255),7,b
 12245  001AEE                     l3879:
 12246                           
 12247                           ; BSR set to: 0
 12248  001AEE  0100               	movlb	0	; () banked
 12249  001AF0  35B7               	rlcf	(___fladd@b+3)& (0+255),w,b
 12250  001AF2  33B7               	rrcf	(___fladd@b+3)& (0+255),f,b
 12251  001AF4  33B6               	rrcf	(___fladd@b+2)& (0+255),f,b
 12252  001AF6  33B5               	rrcf	(___fladd@b+1)& (0+255),f,b
 12253  001AF8  33B4               	rrcf	___fladd@b& (0+255),f,b
 12254                           
 12255                           ; BSR set to: 0
 12256  001AFA  0100               	movlb	0	; () banked
 12257  001AFC  2BC6               	incf	___fladd@bexp& (0+255),f,b
 12258                           
 12259                           ; BSR set to: 0
 12260  001AFE  D0AF               	goto	l3919
 12261  001B00                     l3883:
 12262                           
 12263                           ; BSR set to: 0
 12264  001B00  0100               	movlb	0	; () banked
 12265  001B02  51B8               	movf	___fladd@a& (0+255),w,b
 12266  001B04  0100               	movlb	0	; () banked
 12267  001B06  5DB4               	subwf	___fladd@b& (0+255),w,b
 12268  001B08  0100               	movlb	0	; () banked
 12269  001B0A  51B9               	movf	(___fladd@a+1)& (0+255),w,b
 12270  001B0C  0100               	movlb	0	; () banked
 12271  001B0E  59B5               	subwfb	(___fladd@b+1)& (0+255),w,b
 12272  001B10  0100               	movlb	0	; () banked
 12273  001B12  51BA               	movf	(___fladd@a+2)& (0+255),w,b
 12274  001B14  0100               	movlb	0	; () banked
 12275  001B16  59B6               	subwfb	(___fladd@b+2)& (0+255),w,b
 12276  001B18  0100               	movlb	0	; () banked
 12277  001B1A  51B7               	movf	(___fladd@b+3)& (0+255),w,b
 12278  001B1C  0A80               	xorlw	128
 12279  001B1E  0100               	movlb	0	; () banked
 12280  001B20  6FBC               	movwf	??___fladd& (0+255),b
 12281  001B22  0100               	movlb	0	; () banked
 12282  001B24  51BB               	movf	(___fladd@a+3)& (0+255),w,b
 12283  001B26  0A80               	xorlw	128
 12284  001B28  0100               	movlb	0	; () banked
 12285  001B2A  59BC               	subwfb	??___fladd& (0+255),w,b
 12286  001B2C  B0D8               	btfsc	status,0,c
 12287  001B2E  D050               	goto	l3893
 12288                           
 12289                           ; BSR set to: 0
 12290  001B30  C0B4  F0BC         	movff	___fladd@b,??___fladd
 12291  001B34  C0B5  F0BD         	movff	___fladd@b+1,??___fladd+1
 12292  001B38  C0B6  F0BE         	movff	___fladd@b+2,??___fladd+2
 12293  001B3C  C0B7  F0BF         	movff	___fladd@b+3,??___fladd+3
 12294  001B40  0100               	movlb	0	; () banked
 12295  001B42  1FBC               	comf	??___fladd& (0+255),f,b
 12296  001B44  1FBD               	comf	(??___fladd+1)& (0+255),f,b
 12297  001B46  1FBE               	comf	(??___fladd+2)& (0+255),f,b
 12298  001B48  1FBF               	comf	(??___fladd+3)& (0+255),f,b
 12299  001B4A  2BBC               	incf	??___fladd& (0+255),f,b
 12300  001B4C  0E00               	movlw	0
 12301  001B4E  23BD               	addwfc	(??___fladd+1)& (0+255),f,b
 12302  001B50  23BE               	addwfc	(??___fladd+2)& (0+255),f,b
 12303  001B52  23BF               	addwfc	(??___fladd+3)& (0+255),f,b
 12304  001B54  0100               	movlb	0	; () banked
 12305  001B56  51B8               	movf	___fladd@a& (0+255),w,b
 12306  001B58  0100               	movlb	0	; () banked
 12307  001B5A  25BC               	addwf	??___fladd& (0+255),w,b
 12308  001B5C  0100               	movlb	0	; () banked
 12309  001B5E  6FC0               	movwf	(??___fladd+4)& (0+255),b
 12310  001B60  0100               	movlb	0	; () banked
 12311  001B62  51B9               	movf	(___fladd@a+1)& (0+255),w,b
 12312  001B64  0100               	movlb	0	; () banked
 12313  001B66  21BD               	addwfc	(??___fladd+1)& (0+255),w,b
 12314  001B68  0100               	movlb	0	; () banked
 12315  001B6A  6FC1               	movwf	(??___fladd+5)& (0+255),b
 12316  001B6C  0100               	movlb	0	; () banked
 12317  001B6E  51BA               	movf	(___fladd@a+2)& (0+255),w,b
 12318  001B70  0100               	movlb	0	; () banked
 12319  001B72  21BE               	addwfc	(??___fladd+2)& (0+255),w,b
 12320  001B74  0100               	movlb	0	; () banked
 12321  001B76  6FC2               	movwf	(??___fladd+6)& (0+255),b
 12322  001B78  0100               	movlb	0	; () banked
 12323  001B7A  51BB               	movf	(___fladd@a+3)& (0+255),w,b
 12324  001B7C  0100               	movlb	0	; () banked
 12325  001B7E  21BF               	addwfc	(??___fladd+3)& (0+255),w,b
 12326  001B80  0100               	movlb	0	; () banked
 12327  001B82  6FC3               	movwf	(??___fladd+7)& (0+255),b
 12328  001B84  0EFF               	movlw	255
 12329  001B86  0100               	movlb	0	; () banked
 12330  001B88  25C0               	addwf	(??___fladd+4)& (0+255),w,b
 12331  001B8A  0100               	movlb	0	; () banked
 12332  001B8C  6FB4               	movwf	___fladd@b& (0+255),b
 12333  001B8E  0EFF               	movlw	255
 12334  001B90  0100               	movlb	0	; () banked
 12335  001B92  21C1               	addwfc	(??___fladd+5)& (0+255),w,b
 12336  001B94  0100               	movlb	0	; () banked
 12337  001B96  6FB5               	movwf	(___fladd@b+1)& (0+255),b
 12338  001B98  0EFF               	movlw	255
 12339  001B9A  0100               	movlb	0	; () banked
 12340  001B9C  21C2               	addwfc	(??___fladd+6)& (0+255),w,b
 12341  001B9E  0100               	movlb	0	; () banked
 12342  001BA0  6FB6               	movwf	(___fladd@b+2)& (0+255),b
 12343  001BA2  0EFF               	movlw	255
 12344  001BA4  0100               	movlb	0	; () banked
 12345  001BA6  21C3               	addwfc	(??___fladd+7)& (0+255),w,b
 12346  001BA8  0100               	movlb	0	; () banked
 12347  001BAA  6FB7               	movwf	(___fladd@b+3)& (0+255),b
 12348  001BAC  0E80               	movlw	128
 12349  001BAE  0100               	movlb	0	; () banked
 12350  001BB0  1BC4               	xorwf	___fladd@signs& (0+255),f,b
 12351                           
 12352                           ; BSR set to: 0
 12353  001BB2  0100               	movlb	0	; () banked
 12354  001BB4  6DC7               	negf	___fladd@grs& (0+255),b
 12355                           
 12356                           ; BSR set to: 0
 12357  001BB6  0100               	movlb	0	; () banked
 12358  001BB8  51C7               	movf	___fladd@grs& (0+255),w,b
 12359  001BBA  0100               	movlb	0	; () banked
 12360  001BBC  A4D8               	btfss	status,2,c
 12361  001BBE  D018               	goto	l1006
 12362                           
 12363                           ; BSR set to: 0
 12364  001BC0  0E01               	movlw	1
 12365  001BC2  0100               	movlb	0	; () banked
 12366  001BC4  27B4               	addwf	___fladd@b& (0+255),f,b
 12367  001BC6  0E00               	movlw	0
 12368  001BC8  23B5               	addwfc	(___fladd@b+1)& (0+255),f,b
 12369  001BCA  23B6               	addwfc	(___fladd@b+2)& (0+255),f,b
 12370  001BCC  23B7               	addwfc	(___fladd@b+3)& (0+255),f,b
 12371                           
 12372                           ; BSR set to: 0
 12373  001BCE  D010               	goto	l1006
 12374  001BD0                     l3893:
 12375                           
 12376                           ; BSR set to: 0
 12377  001BD0  0100               	movlb	0	; () banked
 12378  001BD2  51B8               	movf	___fladd@a& (0+255),w,b
 12379  001BD4  0100               	movlb	0	; () banked
 12380  001BD6  5FB4               	subwf	___fladd@b& (0+255),f,b
 12381  001BD8  0100               	movlb	0	; () banked
 12382  001BDA  51B9               	movf	(___fladd@a+1)& (0+255),w,b
 12383  001BDC  0100               	movlb	0	; () banked
 12384  001BDE  5BB5               	subwfb	(___fladd@b+1)& (0+255),f,b
 12385  001BE0  0100               	movlb	0	; () banked
 12386  001BE2  51BA               	movf	(___fladd@a+2)& (0+255),w,b
 12387  001BE4  0100               	movlb	0	; () banked
 12388  001BE6  5BB6               	subwfb	(___fladd@b+2)& (0+255),f,b
 12389  001BE8  0100               	movlb	0	; () banked
 12390  001BEA  51BB               	movf	(___fladd@a+3)& (0+255),w,b
 12391  001BEC  0100               	movlb	0	; () banked
 12392  001BEE  5BB7               	subwfb	(___fladd@b+3)& (0+255),f,b
 12393  001BF0                     l1006:
 12394                           
 12395                           ; BSR set to: 0
 12396  001BF0  0100               	movlb	0	; () banked
 12397  001BF2  51B4               	movf	___fladd@b& (0+255),w,b
 12398  001BF4  0100               	movlb	0	; () banked
 12399  001BF6  11B5               	iorwf	(___fladd@b+1)& (0+255),w,b
 12400  001BF8  0100               	movlb	0	; () banked
 12401  001BFA  11B6               	iorwf	(___fladd@b+2)& (0+255),w,b
 12402  001BFC  0100               	movlb	0	; () banked
 12403  001BFE  11B7               	iorwf	(___fladd@b+3)& (0+255),w,b
 12404  001C00  A4D8               	btfss	status,2,c
 12405  001C02  D02A               	goto	l3917
 12406                           
 12407                           ; BSR set to: 0
 12408  001C04  0100               	movlb	0	; () banked
 12409  001C06  51C7               	movf	___fladd@grs& (0+255),w,b
 12410  001C08  0100               	movlb	0	; () banked
 12411  001C0A  A4D8               	btfss	status,2,c
 12412  001C0C  D025               	goto	l3917
 12413                           
 12414                           ; BSR set to: 0
 12415  001C0E  0E00               	movlw	0
 12416  001C10  0100               	movlb	0	; () banked
 12417  001C12  6FB4               	movwf	?___fladd& (0+255),b
 12418  001C14  0E00               	movlw	0
 12419  001C16  6FB5               	movwf	(?___fladd+1)& (0+255),b
 12420  001C18  0E00               	movlw	0
 12421  001C1A  6FB6               	movwf	(?___fladd+2)& (0+255),b
 12422  001C1C  0E00               	movlw	0
 12423  001C1E  6FB7               	movwf	(?___fladd+3)& (0+255),b
 12424                           
 12425                           ; BSR set to: 0
 12426  001C20  0012               	return	
 12427  001C22                     l3901:
 12428                           
 12429                           ; BSR set to: 0
 12430  001C22  0100               	movlb	0	; () banked
 12431  001C24  90D8               	bcf	status,0,c
 12432  001C26  37B4               	rlcf	___fladd@b& (0+255),f,b
 12433  001C28  37B5               	rlcf	(___fladd@b+1)& (0+255),f,b
 12434  001C2A  37B6               	rlcf	(___fladd@b+2)& (0+255),f,b
 12435  001C2C  37B7               	rlcf	(___fladd@b+3)& (0+255),f,b
 12436                           
 12437                           ; BSR set to: 0
 12438  001C2E  0100               	movlb	0	; () banked
 12439  001C30  AFC7               	btfss	___fladd@grs& (0+255),7,b
 12440  001C32  D002               	goto	l3907
 12441                           
 12442                           ; BSR set to: 0
 12443  001C34  0100               	movlb	0	; () banked
 12444  001C36  81B4               	bsf	___fladd@b& (0+255),0,b
 12445  001C38                     l3907:
 12446                           
 12447                           ; BSR set to: 0
 12448  001C38  0100               	movlb	0	; () banked
 12449  001C3A  A1C7               	btfss	___fladd@grs& (0+255),0,b
 12450  001C3C  D003               	goto	l3911
 12451                           
 12452                           ; BSR set to: 0
 12453  001C3E  80D8               	bsf	status,0,c
 12454  001C40  0100               	movlb	0	; () banked
 12455  001C42  D002               	goto	L25
 12456  001C44                     l3911:
 12457                           
 12458                           ; BSR set to: 0
 12459  001C44  0100               	movlb	0	; () banked
 12460  001C46  90D8               	bcf	status,0,c
 12461  001C48                     L25:
 12462  001C48  37C7               	rlcf	___fladd@grs& (0+255),f,b
 12463                           
 12464                           ; BSR set to: 0
 12465                           
 12466                           ; BSR set to: 0
 12467  001C4A  0100               	movlb	0	; () banked
 12468  001C4C  51C6               	movf	___fladd@bexp& (0+255),w,b
 12469  001C4E  0100               	movlb	0	; () banked
 12470  001C50  B4D8               	btfsc	status,2,c
 12471  001C52  D002               	goto	l3917
 12472                           
 12473                           ; BSR set to: 0
 12474  001C54  0100               	movlb	0	; () banked
 12475  001C56  07C6               	decf	___fladd@bexp& (0+255),f,b
 12476  001C58                     l3917:
 12477                           
 12478                           ; BSR set to: 0
 12479  001C58  0100               	movlb	0	; () banked
 12480  001C5A  AFB6               	btfss	(___fladd@b+2)& (0+255),7,b
 12481  001C5C  D7E2               	goto	l3901
 12482  001C5E                     l3919:
 12483                           
 12484                           ; BSR set to: 0
 12485  001C5E  0E00               	movlw	0
 12486  001C60  0100               	movlb	0	; () banked
 12487  001C62  6FC5               	movwf	___fladd@aexp& (0+255),b
 12488                           
 12489                           ; BSR set to: 0
 12490  001C64  0100               	movlb	0	; () banked
 12491  001C66  AFC7               	btfss	___fladd@grs& (0+255),7,b
 12492  001C68  D00D               	goto	l1015
 12493                           
 12494                           ; BSR set to: 0
 12495  001C6A  C0C7  F0BC         	movff	___fladd@grs,??___fladd
 12496  001C6E  0E7F               	movlw	127
 12497  001C70  0100               	movlb	0	; () banked
 12498  001C72  17BC               	andwf	??___fladd& (0+255),f,b
 12499  001C74  A4D8               	btfss	status,2,c
 12500  001C76  D003               	goto	l3927
 12501                           
 12502                           ; BSR set to: 0
 12503                           
 12504                           ; BSR set to: 0
 12505  001C78  0100               	movlb	0	; () banked
 12506  001C7A  A1B4               	btfss	___fladd@b& (0+255),0,b
 12507  001C7C  D003               	goto	l1015
 12508  001C7E                     l3927:
 12509                           
 12510                           ; BSR set to: 0
 12511  001C7E  0E01               	movlw	1
 12512  001C80  0100               	movlb	0	; () banked
 12513  001C82  6FC5               	movwf	___fladd@aexp& (0+255),b
 12514  001C84                     l1015:
 12515                           
 12516                           ; BSR set to: 0
 12517  001C84  0100               	movlb	0	; () banked
 12518  001C86  51C5               	movf	___fladd@aexp& (0+255),w,b
 12519  001C88  0100               	movlb	0	; () banked
 12520  001C8A  B4D8               	btfsc	status,2,c
 12521  001C8C  D026               	goto	l3937
 12522                           
 12523                           ; BSR set to: 0
 12524  001C8E  0E01               	movlw	1
 12525  001C90  0100               	movlb	0	; () banked
 12526  001C92  27B4               	addwf	___fladd@b& (0+255),f,b
 12527  001C94  0E00               	movlw	0
 12528  001C96  23B5               	addwfc	(___fladd@b+1)& (0+255),f,b
 12529  001C98  23B6               	addwfc	(___fladd@b+2)& (0+255),f,b
 12530  001C9A  23B7               	addwfc	(___fladd@b+3)& (0+255),f,b
 12531                           
 12532                           ; BSR set to: 0
 12533  001C9C  0100               	movlb	0	; () banked
 12534  001C9E  A1B7               	btfss	(___fladd@b+3)& (0+255),0,b
 12535  001CA0  D01C               	goto	l3937
 12536                           
 12537                           ; BSR set to: 0
 12538  001CA2  C0B4  F0BC         	movff	___fladd@b,??___fladd
 12539  001CA6  C0B5  F0BD         	movff	___fladd@b+1,??___fladd+1
 12540  001CAA  C0B6  F0BE         	movff	___fladd@b+2,??___fladd+2
 12541  001CAE  C0B7  F0BF         	movff	___fladd@b+3,??___fladd+3
 12542  001CB2  0100               	movlb	0	; () banked
 12543  001CB4  35BF               	rlcf	(??___fladd+3)& (0+255),w,b
 12544  001CB6  33BF               	rrcf	(??___fladd+3)& (0+255),f,b
 12545  001CB8  33BE               	rrcf	(??___fladd+2)& (0+255),f,b
 12546  001CBA  33BD               	rrcf	(??___fladd+1)& (0+255),f,b
 12547  001CBC  33BC               	rrcf	??___fladd& (0+255),f,b
 12548  001CBE  C0BC  F0B4         	movff	??___fladd,___fladd@b
 12549  001CC2  C0BD  F0B5         	movff	??___fladd+1,___fladd@b+1
 12550  001CC6  C0BE  F0B6         	movff	??___fladd+2,___fladd@b+2
 12551  001CCA  C0BF  F0B7         	movff	??___fladd+3,___fladd@b+3
 12552  001CCE  0100               	movlb	0	; () banked
 12553  001CD0  29C6               	incf	___fladd@bexp& (0+255),w,b
 12554  001CD2  B4D8               	btfsc	status,2,c
 12555  001CD4  D002               	goto	l3937
 12556                           
 12557                           ; BSR set to: 0
 12558  001CD6  0100               	movlb	0	; () banked
 12559  001CD8  2BC6               	incf	___fladd@bexp& (0+255),f,b
 12560  001CDA                     l3937:
 12561                           
 12562                           ; BSR set to: 0
 12563  001CDA  0100               	movlb	0	; () banked
 12564  001CDC  29C6               	incf	___fladd@bexp& (0+255),w,b
 12565  001CDE  B4D8               	btfsc	status,2,c
 12566  001CE0  D005               	goto	l3941
 12567                           
 12568                           ; BSR set to: 0
 12569  001CE2  0100               	movlb	0	; () banked
 12570  001CE4  51C6               	movf	___fladd@bexp& (0+255),w,b
 12571  001CE6  0100               	movlb	0	; () banked
 12572  001CE8  A4D8               	btfss	status,2,c
 12573  001CEA  D011               	goto	l3945
 12574  001CEC                     l3941:
 12575                           
 12576                           ; BSR set to: 0
 12577  001CEC  0E00               	movlw	0
 12578  001CEE  0100               	movlb	0	; () banked
 12579  001CF0  6FB4               	movwf	___fladd@b& (0+255),b
 12580  001CF2  0E00               	movlw	0
 12581  001CF4  6FB5               	movwf	(___fladd@b+1)& (0+255),b
 12582  001CF6  0E00               	movlw	0
 12583  001CF8  6FB6               	movwf	(___fladd@b+2)& (0+255),b
 12584  001CFA  0E00               	movlw	0
 12585  001CFC  6FB7               	movwf	(___fladd@b+3)& (0+255),b
 12586  001CFE  0100               	movlb	0	; () banked
 12587  001D00  51C6               	movf	___fladd@bexp& (0+255),w,b
 12588  001D02  0100               	movlb	0	; () banked
 12589  001D04  A4D8               	btfss	status,2,c
 12590  001D06  D003               	goto	l3945
 12591                           
 12592                           ; BSR set to: 0
 12593  001D08  0E00               	movlw	0
 12594  001D0A  0100               	movlb	0	; () banked
 12595  001D0C  6FC4               	movwf	___fladd@signs& (0+255),b
 12596  001D0E                     l3945:
 12597                           
 12598                           ; BSR set to: 0
 12599  001D0E  0100               	movlb	0	; () banked
 12600  001D10  A1C6               	btfss	___fladd@bexp& (0+255),0,b
 12601  001D12  D003               	goto	l3949
 12602                           
 12603                           ; BSR set to: 0
 12604  001D14  0100               	movlb	0	; () banked
 12605  001D16  8FB6               	bsf	(___fladd@b+2)& (0+255),7,b
 12606  001D18  D002               	goto	l3951
 12607  001D1A                     l3949:
 12608                           
 12609                           ; BSR set to: 0
 12610  001D1A  0100               	movlb	0	; () banked
 12611  001D1C  9FB6               	bcf	(___fladd@b+2)& (0+255),7,b
 12612  001D1E                     l3951:
 12613                           
 12614                           ; BSR set to: 0
 12615  001D1E  0100               	movlb	0	; () banked
 12616  001D20  90D8               	bcf	status,0,c
 12617  001D22  31C6               	rrcf	___fladd@bexp& (0+255),w,b
 12618  001D24  0100               	movlb	0	; () banked
 12619  001D26  6FB7               	movwf	(___fladd@b+3)& (0+255),b
 12620                           
 12621                           ; BSR set to: 0
 12622  001D28  0100               	movlb	0	; () banked
 12623  001D2A  AFC4               	btfss	___fladd@signs& (0+255),7,b
 12624  001D2C  D002               	goto	l3957
 12625                           
 12626                           ; BSR set to: 0
 12627  001D2E  0100               	movlb	0	; () banked
 12628  001D30  8FB7               	bsf	(___fladd@b+3)& (0+255),7,b
 12629  001D32                     l3957:
 12630                           
 12631                           ; BSR set to: 0
 12632  001D32  C0B4  F0B4         	movff	___fladd@b,?___fladd
 12633  001D36  C0B5  F0B5         	movff	___fladd@b+1,?___fladd+1
 12634  001D3A  C0B6  F0B6         	movff	___fladd@b+2,?___fladd+2
 12635  001D3E  C0B7  F0B7         	movff	___fladd@b+3,?___fladd+3
 12636  001D42  0012               	return	
 12637  001D44                     __end_of___fladd:
 12638                           	opt stack 0
 12639                           tblptru	equ	0xFF8
 12640                           tblptrh	equ	0xFF7
 12641                           tblptrl	equ	0xFF6
 12642                           tablat	equ	0xFF5
 12643                           prodh	equ	0xFF4
 12644                           prodl	equ	0xFF3
 12645                           intcon	equ	0xFF2
 12646                           intcon2	equ	0xFF1
 12647                           intcon3	equ	0xFF0
 12648                           postinc0	equ	0xFEE
 12649                           wreg	equ	0xFE8
 12650                           indf1	equ	0xFE7
 12651                           postdec1	equ	0xFE5
 12652                           fsr1h	equ	0xFE2
 12653                           fsr1l	equ	0xFE1
 12654                           indf2	equ	0xFDF
 12655                           postinc2	equ	0xFDE
 12656                           postdec2	equ	0xFDD
 12657                           fsr2h	equ	0xFDA
 12658                           fsr2l	equ	0xFD9
 12659                           status	equ	0xFD8
 12660                           
 12661 ;; *************** function ___xxtofl *****************
 12662 ;; Defined at:
 12663 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
 12664 ;; Parameters:    Size  Location     Type
 12665 ;;  sign            1    wreg     unsigned char 
 12666 ;;  val             4    6[BANK0 ] long 
 12667 ;; Auto vars:     Size  Location     Type
 12668 ;;  sign            1   14[BANK0 ] unsigned char 
 12669 ;;  arg             4   16[BANK0 ] unsigned long 
 12670 ;;  exp             1   15[BANK0 ] unsigned char 
 12671 ;; Return value:  Size  Location     Type
 12672 ;;                  4    6[BANK0 ] unsigned char 
 12673 ;; Registers used:
 12674 ;;		wreg, status,2, status,0
 12675 ;; Tracked objects:
 12676 ;;		On entry : 0/0
 12677 ;;		On exit  : 0/0
 12678 ;;		Unchanged: 0/0
 12679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12680 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12681 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12682 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12683 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12684 ;;Total ram usage:       14 bytes
 12685 ;; Hardware stack levels used:    1
 12686 ;; Hardware stack levels required when called:    4
 12687 ;; This function calls:
 12688 ;;		Nothing
 12689 ;; This function is called by:
 12690 ;;		_read_adc_voltage
 12691 ;;		_Auto_Heat
 12692 ;;		_sprintf
 12693 ;; This function uses a non-reentrant model
 12694 ;;
 12695                           
 12696                           	psect	text38
 12697  0031E0                     __ptext38:
 12698                           	opt stack 0
 12699  0031E0                     ___xxtofl:
 12700                           	opt stack 25
 12701                           
 12702                           ; BSR set to: 0
 12703                           ;incstack = 0
 12704                           ;___xxtofl@sign stored from wreg
 12705  0031E0  0100               	movlb	0	; () banked
 12706  0031E2  6F8E               	movwf	___xxtofl@sign& (0+255),b
 12707  0031E4  0100               	movlb	0	; () banked
 12708  0031E6  518E               	movf	___xxtofl@sign& (0+255),w,b
 12709  0031E8  0100               	movlb	0	; () banked
 12710  0031EA  B4D8               	btfsc	status,2,c
 12711  0031EC  D01E               	goto	l1097
 12712                           
 12713                           ; BSR set to: 0
 12714  0031EE  0100               	movlb	0	; () banked
 12715  0031F0  AF89               	btfss	(___xxtofl@val+3)& (0+255),7,b
 12716  0031F2  D01B               	goto	l1097
 12717                           
 12718                           ; BSR set to: 0
 12719  0031F4  C086  F08A         	movff	___xxtofl@val,??___xxtofl
 12720  0031F8  C087  F08B         	movff	___xxtofl@val+1,??___xxtofl+1
 12721  0031FC  C088  F08C         	movff	___xxtofl@val+2,??___xxtofl+2
 12722  003200  C089  F08D         	movff	___xxtofl@val+3,??___xxtofl+3
 12723  003204  0100               	movlb	0	; () banked
 12724  003206  1F8A               	comf	??___xxtofl& (0+255),f,b
 12725  003208  1F8B               	comf	(??___xxtofl+1)& (0+255),f,b
 12726  00320A  1F8C               	comf	(??___xxtofl+2)& (0+255),f,b
 12727  00320C  1F8D               	comf	(??___xxtofl+3)& (0+255),f,b
 12728  00320E  2B8A               	incf	??___xxtofl& (0+255),f,b
 12729  003210  0E00               	movlw	0
 12730  003212  238B               	addwfc	(??___xxtofl+1)& (0+255),f,b
 12731  003214  238C               	addwfc	(??___xxtofl+2)& (0+255),f,b
 12732  003216  238D               	addwfc	(??___xxtofl+3)& (0+255),f,b
 12733  003218  C08A  F090         	movff	??___xxtofl,___xxtofl@arg
 12734  00321C  C08B  F091         	movff	??___xxtofl+1,___xxtofl@arg+1
 12735  003220  C08C  F092         	movff	??___xxtofl+2,___xxtofl@arg+2
 12736  003224  C08D  F093         	movff	??___xxtofl+3,___xxtofl@arg+3
 12737  003228  D008               	goto	l5197
 12738  00322A                     l1097:
 12739                           
 12740                           ; BSR set to: 0
 12741  00322A  C086  F090         	movff	___xxtofl@val,___xxtofl@arg
 12742  00322E  C087  F091         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12743  003232  C088  F092         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12744  003236  C089  F093         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12745  00323A                     l5197:
 12746                           
 12747                           ; BSR set to: 0
 12748  00323A  0100               	movlb	0	; () banked
 12749  00323C  5186               	movf	___xxtofl@val& (0+255),w,b
 12750  00323E  0100               	movlb	0	; () banked
 12751  003240  1187               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 12752  003242  0100               	movlb	0	; () banked
 12753  003244  1188               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 12754  003246  0100               	movlb	0	; () banked
 12755  003248  1189               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 12756  00324A  A4D8               	btfss	status,2,c
 12757  00324C  D00A               	goto	l5203
 12758                           
 12759                           ; BSR set to: 0
 12760  00324E  0E00               	movlw	0
 12761  003250  0100               	movlb	0	; () banked
 12762  003252  6F86               	movwf	?___xxtofl& (0+255),b
 12763  003254  0E00               	movlw	0
 12764  003256  6F87               	movwf	(?___xxtofl+1)& (0+255),b
 12765  003258  0E00               	movlw	0
 12766  00325A  6F88               	movwf	(?___xxtofl+2)& (0+255),b
 12767  00325C  0E00               	movlw	0
 12768  00325E  6F89               	movwf	(?___xxtofl+3)& (0+255),b
 12769                           
 12770                           ; BSR set to: 0
 12771  003260  0012               	return	
 12772  003262                     l5203:
 12773                           
 12774                           ; BSR set to: 0
 12775  003262  0E96               	movlw	150
 12776  003264  0100               	movlb	0	; () banked
 12777  003266  6F8F               	movwf	___xxtofl@exp& (0+255),b
 12778  003268  D008               	goto	l5207
 12779  00326A                     l5205:
 12780                           
 12781                           ; BSR set to: 0
 12782  00326A  0100               	movlb	0	; () banked
 12783  00326C  2B8F               	incf	___xxtofl@exp& (0+255),f,b
 12784  00326E  0100               	movlb	0	; () banked
 12785  003270  90D8               	bcf	status,0,c
 12786  003272  3393               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 12787  003274  3392               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 12788  003276  3391               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 12789  003278  3390               	rrcf	___xxtofl@arg& (0+255),f,b
 12790  00327A                     l5207:
 12791                           
 12792                           ; BSR set to: 0
 12793  00327A  0E00               	movlw	0
 12794  00327C  0100               	movlb	0	; () banked
 12795  00327E  1590               	andwf	___xxtofl@arg& (0+255),w,b
 12796  003280  0100               	movlb	0	; () banked
 12797  003282  6F8A               	movwf	??___xxtofl& (0+255),b
 12798  003284  0E00               	movlw	0
 12799  003286  0100               	movlb	0	; () banked
 12800  003288  1591               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 12801  00328A  0100               	movlb	0	; () banked
 12802  00328C  6F8B               	movwf	(??___xxtofl+1)& (0+255),b
 12803  00328E  0E00               	movlw	0
 12804  003290  0100               	movlb	0	; () banked
 12805  003292  1592               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 12806  003294  0100               	movlb	0	; () banked
 12807  003296  6F8C               	movwf	(??___xxtofl+2)& (0+255),b
 12808  003298  0EFE               	movlw	254
 12809  00329A  0100               	movlb	0	; () banked
 12810  00329C  1593               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 12811  00329E  0100               	movlb	0	; () banked
 12812  0032A0  6F8D               	movwf	(??___xxtofl+3)& (0+255),b
 12813  0032A2  0100               	movlb	0	; () banked
 12814  0032A4  518A               	movf	??___xxtofl& (0+255),w,b
 12815  0032A6  0100               	movlb	0	; () banked
 12816  0032A8  118B               	iorwf	(??___xxtofl+1)& (0+255),w,b
 12817  0032AA  0100               	movlb	0	; () banked
 12818  0032AC  118C               	iorwf	(??___xxtofl+2)& (0+255),w,b
 12819  0032AE  0100               	movlb	0	; () banked
 12820  0032B0  118D               	iorwf	(??___xxtofl+3)& (0+255),w,b
 12821  0032B2  B4D8               	btfsc	status,2,c
 12822  0032B4  D010               	goto	l1104
 12823  0032B6  D7D9               	goto	l5205
 12824  0032B8                     l5209:
 12825                           
 12826                           ; BSR set to: 0
 12827  0032B8  0100               	movlb	0	; () banked
 12828  0032BA  2B8F               	incf	___xxtofl@exp& (0+255),f,b
 12829                           
 12830                           ; BSR set to: 0
 12831  0032BC  0E01               	movlw	1
 12832  0032BE  0100               	movlb	0	; () banked
 12833  0032C0  2790               	addwf	___xxtofl@arg& (0+255),f,b
 12834  0032C2  0E00               	movlw	0
 12835  0032C4  2391               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 12836  0032C6  2392               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 12837  0032C8  2393               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 12838                           
 12839                           ; BSR set to: 0
 12840  0032CA  0100               	movlb	0	; () banked
 12841  0032CC  90D8               	bcf	status,0,c
 12842  0032CE  3393               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 12843  0032D0  3392               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 12844  0032D2  3391               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 12845  0032D4  3390               	rrcf	___xxtofl@arg& (0+255),f,b
 12846  0032D6                     l1104:
 12847                           
 12848                           ; BSR set to: 0
 12849  0032D6  0E00               	movlw	0
 12850  0032D8  0100               	movlb	0	; () banked
 12851  0032DA  1590               	andwf	___xxtofl@arg& (0+255),w,b
 12852  0032DC  0100               	movlb	0	; () banked
 12853  0032DE  6F8A               	movwf	??___xxtofl& (0+255),b
 12854  0032E0  0E00               	movlw	0
 12855  0032E2  0100               	movlb	0	; () banked
 12856  0032E4  1591               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 12857  0032E6  0100               	movlb	0	; () banked
 12858  0032E8  6F8B               	movwf	(??___xxtofl+1)& (0+255),b
 12859  0032EA  0E00               	movlw	0
 12860  0032EC  0100               	movlb	0	; () banked
 12861  0032EE  1592               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 12862  0032F0  0100               	movlb	0	; () banked
 12863  0032F2  6F8C               	movwf	(??___xxtofl+2)& (0+255),b
 12864  0032F4  0EFF               	movlw	255
 12865  0032F6  0100               	movlb	0	; () banked
 12866  0032F8  1593               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 12867  0032FA  0100               	movlb	0	; () banked
 12868  0032FC  6F8D               	movwf	(??___xxtofl+3)& (0+255),b
 12869  0032FE  0100               	movlb	0	; () banked
 12870  003300  518A               	movf	??___xxtofl& (0+255),w,b
 12871  003302  0100               	movlb	0	; () banked
 12872  003304  118B               	iorwf	(??___xxtofl+1)& (0+255),w,b
 12873  003306  0100               	movlb	0	; () banked
 12874  003308  118C               	iorwf	(??___xxtofl+2)& (0+255),w,b
 12875  00330A  0100               	movlb	0	; () banked
 12876  00330C  118D               	iorwf	(??___xxtofl+3)& (0+255),w,b
 12877  00330E  B4D8               	btfsc	status,2,c
 12878  003310  D009               	goto	l5217
 12879  003312  D7D2               	goto	l5209
 12880  003314                     l5215:
 12881                           
 12882                           ; BSR set to: 0
 12883  003314  0100               	movlb	0	; () banked
 12884  003316  078F               	decf	___xxtofl@exp& (0+255),f,b
 12885  003318  0100               	movlb	0	; () banked
 12886  00331A  90D8               	bcf	status,0,c
 12887  00331C  3790               	rlcf	___xxtofl@arg& (0+255),f,b
 12888  00331E  3791               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 12889  003320  3792               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 12890  003322  3793               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 12891  003324                     l5217:
 12892                           
 12893                           ; BSR set to: 0
 12894  003324  0100               	movlb	0	; () banked
 12895  003326  BF92               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 12896  003328  D004               	goto	l1111
 12897                           
 12898                           ; BSR set to: 0
 12899  00332A  0E02               	movlw	2
 12900  00332C  0100               	movlb	0	; () banked
 12901  00332E  618F               	cpfslt	___xxtofl@exp& (0+255),b
 12902  003330  D7F1               	goto	l5215
 12903  003332                     l1111:
 12904                           
 12905                           ; BSR set to: 0
 12906  003332  0100               	movlb	0	; () banked
 12907  003334  B18F               	btfsc	___xxtofl@exp& (0+255),0,b
 12908  003336  D009               	goto	l1112
 12909                           
 12910                           ; BSR set to: 0
 12911  003338  0EFF               	movlw	255
 12912  00333A  0100               	movlb	0	; () banked
 12913  00333C  1790               	andwf	___xxtofl@arg& (0+255),f,b
 12914  00333E  0EFF               	movlw	255
 12915  003340  1791               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 12916  003342  0E7F               	movlw	127
 12917  003344  1792               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 12918  003346  0EFF               	movlw	255
 12919  003348  1793               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 12920  00334A                     l1112:
 12921                           
 12922                           ; BSR set to: 0
 12923  00334A  0100               	movlb	0	; () banked
 12924  00334C  90D8               	bcf	status,0,c
 12925  00334E  338F               	rrcf	___xxtofl@exp& (0+255),f,b
 12926  003350  C08F  F08A         	movff	___xxtofl@exp,??___xxtofl
 12927  003354  0100               	movlb	0	; () banked
 12928  003356  6B8B               	clrf	(??___xxtofl+1)& (0+255),b
 12929  003358  6B8C               	clrf	(??___xxtofl+2)& (0+255),b
 12930  00335A  6B8D               	clrf	(??___xxtofl+3)& (0+255),b
 12931  00335C  C08A  F08D         	movff	??___xxtofl,??___xxtofl+3
 12932  003360  0100               	movlb	0	; () banked
 12933  003362  6B8C               	clrf	(??___xxtofl+2)& (0+255),b
 12934  003364  6B8B               	clrf	(??___xxtofl+1)& (0+255),b
 12935  003366  6B8A               	clrf	??___xxtofl& (0+255),b
 12936  003368  0100               	movlb	0	; () banked
 12937  00336A  518A               	movf	??___xxtofl& (0+255),w,b
 12938  00336C  0100               	movlb	0	; () banked
 12939  00336E  1390               	iorwf	___xxtofl@arg& (0+255),f,b
 12940  003370  0100               	movlb	0	; () banked
 12941  003372  518B               	movf	(??___xxtofl+1)& (0+255),w,b
 12942  003374  0100               	movlb	0	; () banked
 12943  003376  1391               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 12944  003378  0100               	movlb	0	; () banked
 12945  00337A  518C               	movf	(??___xxtofl+2)& (0+255),w,b
 12946  00337C  0100               	movlb	0	; () banked
 12947  00337E  1392               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 12948  003380  0100               	movlb	0	; () banked
 12949  003382  518D               	movf	(??___xxtofl+3)& (0+255),w,b
 12950  003384  0100               	movlb	0	; () banked
 12951  003386  1393               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 12952                           
 12953                           ; BSR set to: 0
 12954  003388  0100               	movlb	0	; () banked
 12955  00338A  518E               	movf	___xxtofl@sign& (0+255),w,b
 12956  00338C  0100               	movlb	0	; () banked
 12957  00338E  B4D8               	btfsc	status,2,c
 12958  003390  D005               	goto	l5229
 12959                           
 12960                           ; BSR set to: 0
 12961  003392  0100               	movlb	0	; () banked
 12962  003394  AF89               	btfss	(___xxtofl@val+3)& (0+255),7,b
 12963  003396  D002               	goto	l5229
 12964                           
 12965                           ; BSR set to: 0
 12966  003398  0100               	movlb	0	; () banked
 12967  00339A  8F93               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 12968  00339C                     l5229:
 12969                           
 12970                           ; BSR set to: 0
 12971  00339C  C090  F086         	movff	___xxtofl@arg,?___xxtofl
 12972  0033A0  C091  F087         	movff	___xxtofl@arg+1,?___xxtofl+1
 12973  0033A4  C092  F088         	movff	___xxtofl@arg+2,?___xxtofl+2
 12974  0033A8  C093  F089         	movff	___xxtofl@arg+3,?___xxtofl+3
 12975  0033AC  0012               	return	
 12976  0033AE                     __end_of___xxtofl:
 12977                           	opt stack 0
 12978                           tblptru	equ	0xFF8
 12979                           tblptrh	equ	0xFF7
 12980                           tblptrl	equ	0xFF6
 12981                           tablat	equ	0xFF5
 12982                           prodh	equ	0xFF4
 12983                           prodl	equ	0xFF3
 12984                           intcon	equ	0xFF2
 12985                           intcon2	equ	0xFF1
 12986                           intcon3	equ	0xFF0
 12987                           postinc0	equ	0xFEE
 12988                           wreg	equ	0xFE8
 12989                           indf1	equ	0xFE7
 12990                           postdec1	equ	0xFE5
 12991                           fsr1h	equ	0xFE2
 12992                           fsr1l	equ	0xFE1
 12993                           indf2	equ	0xFDF
 12994                           postinc2	equ	0xFDE
 12995                           postdec2	equ	0xFDD
 12996                           fsr2h	equ	0xFDA
 12997                           fsr2l	equ	0xFD9
 12998                           status	equ	0xFD8
 12999                           
 13000 ;; *************** function ___flneg *****************
 13001 ;; Defined at:
 13002 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
 13003 ;; Parameters:    Size  Location     Type
 13004 ;;  f1              4    0[BANK0 ] unsigned char 
 13005 ;; Auto vars:     Size  Location     Type
 13006 ;;		None
 13007 ;; Return value:  Size  Location     Type
 13008 ;;                  4    0[BANK0 ] unsigned char 
 13009 ;; Registers used:
 13010 ;;		wreg, status,2, status,0
 13011 ;; Tracked objects:
 13012 ;;		On entry : 0/0
 13013 ;;		On exit  : 0/0
 13014 ;;		Unchanged: 0/0
 13015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13016 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13019 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13020 ;;Total ram usage:        4 bytes
 13021 ;; Hardware stack levels used:    1
 13022 ;; Hardware stack levels required when called:    4
 13023 ;; This function calls:
 13024 ;;		Nothing
 13025 ;; This function is called by:
 13026 ;;		_Auto_Heat
 13027 ;;		_sprintf
 13028 ;; This function uses a non-reentrant model
 13029 ;;
 13030                           
 13031                           	psect	text39
 13032  004CD8                     __ptext39:
 13033                           	opt stack 0
 13034  004CD8                     ___flneg:
 13035                           	opt stack 25
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;incstack = 0
 13039  004CD8  0100               	movlb	0	; () banked
 13040  004CDA  5180               	movf	___flneg@f1& (0+255),w,b
 13041  004CDC  0100               	movlb	0	; () banked
 13042  004CDE  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 13043  004CE0  0100               	movlb	0	; () banked
 13044  004CE2  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 13045  004CE4  0100               	movlb	0	; () banked
 13046  004CE6  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 13047  004CE8  B4D8               	btfsc	status,2,c
 13048  004CEA  D009               	goto	l5127
 13049                           
 13050                           ; BSR set to: 0
 13051  004CEC  0E00               	movlw	0
 13052  004CEE  0100               	movlb	0	; () banked
 13053  004CF0  1B80               	xorwf	___flneg@f1& (0+255),f,b
 13054  004CF2  0E00               	movlw	0
 13055  004CF4  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 13056  004CF6  0E00               	movlw	0
 13057  004CF8  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 13058  004CFA  0E80               	movlw	128
 13059  004CFC  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 13060  004CFE                     l5127:
 13061                           
 13062                           ; BSR set to: 0
 13063  004CFE  C080  F080         	movff	___flneg@f1,?___flneg
 13064  004D02  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 13065  004D06  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 13066  004D0A  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 13067  004D0E  0012               	return	
 13068  004D10                     __end_of___flneg:
 13069                           	opt stack 0
 13070                           tblptru	equ	0xFF8
 13071                           tblptrh	equ	0xFF7
 13072                           tblptrl	equ	0xFF6
 13073                           tablat	equ	0xFF5
 13074                           prodh	equ	0xFF4
 13075                           prodl	equ	0xFF3
 13076                           intcon	equ	0xFF2
 13077                           intcon2	equ	0xFF1
 13078                           intcon3	equ	0xFF0
 13079                           postinc0	equ	0xFEE
 13080                           wreg	equ	0xFE8
 13081                           indf1	equ	0xFE7
 13082                           postdec1	equ	0xFE5
 13083                           fsr1h	equ	0xFE2
 13084                           fsr1l	equ	0xFE1
 13085                           indf2	equ	0xFDF
 13086                           postinc2	equ	0xFDE
 13087                           postdec2	equ	0xFDD
 13088                           fsr2h	equ	0xFDA
 13089                           fsr2l	equ	0xFD9
 13090                           status	equ	0xFD8
 13091                           
 13092 ;; *************** function ___flge *****************
 13093 ;; Defined at:
 13094 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
 13095 ;; Parameters:    Size  Location     Type
 13096 ;;  ff1             4   72[BANK0 ] unsigned char 
 13097 ;;  ff2             4   76[BANK0 ] unsigned char 
 13098 ;; Auto vars:     Size  Location     Type
 13099 ;;		None
 13100 ;; Return value:  Size  Location     Type
 13101 ;;		None               void
 13102 ;; Registers used:
 13103 ;;		wreg, status,2, status,0
 13104 ;; Tracked objects:
 13105 ;;		On entry : 0/0
 13106 ;;		On exit  : 0/0
 13107 ;;		Unchanged: 0/0
 13108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13109 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13111 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13112 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13113 ;;Total ram usage:       12 bytes
 13114 ;; Hardware stack levels used:    1
 13115 ;; Hardware stack levels required when called:    4
 13116 ;; This function calls:
 13117 ;;		Nothing
 13118 ;; This function is called by:
 13119 ;;		_Auto_Heat
 13120 ;;		_sprintf
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124                           	psect	text40
 13125  00354C                     __ptext40:
 13126                           	opt stack 0
 13127  00354C                     ___flge:
 13128                           	opt stack 25
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;incstack = 0
 13132  00354C  0E00               	movlw	0
 13133  00354E  0100               	movlb	0	; () banked
 13134  003550  15C8               	andwf	___flge@ff1& (0+255),w,b
 13135  003552  0100               	movlb	0	; () banked
 13136  003554  6FD0               	movwf	??___flge& (0+255),b
 13137  003556  0E00               	movlw	0
 13138  003558  0100               	movlb	0	; () banked
 13139  00355A  15C9               	andwf	(___flge@ff1+1)& (0+255),w,b
 13140  00355C  0100               	movlb	0	; () banked
 13141  00355E  6FD1               	movwf	(??___flge+1)& (0+255),b
 13142  003560  0E80               	movlw	128
 13143  003562  0100               	movlb	0	; () banked
 13144  003564  15CA               	andwf	(___flge@ff1+2)& (0+255),w,b
 13145  003566  0100               	movlb	0	; () banked
 13146  003568  6FD2               	movwf	(??___flge+2)& (0+255),b
 13147  00356A  0E7F               	movlw	127
 13148  00356C  0100               	movlb	0	; () banked
 13149  00356E  15CB               	andwf	(___flge@ff1+3)& (0+255),w,b
 13150  003570  0100               	movlb	0	; () banked
 13151  003572  6FD3               	movwf	(??___flge+3)& (0+255),b
 13152  003574  0100               	movlb	0	; () banked
 13153  003576  51D0               	movf	??___flge& (0+255),w,b
 13154  003578  0100               	movlb	0	; () banked
 13155  00357A  11D1               	iorwf	(??___flge+1)& (0+255),w,b
 13156  00357C  0100               	movlb	0	; () banked
 13157  00357E  11D2               	iorwf	(??___flge+2)& (0+255),w,b
 13158  003580  0100               	movlb	0	; () banked
 13159  003582  11D3               	iorwf	(??___flge+3)& (0+255),w,b
 13160  003584  A4D8               	btfss	status,2,c
 13161  003586  D009               	goto	l5105
 13162                           
 13163                           ; BSR set to: 0
 13164  003588  0E00               	movlw	0
 13165  00358A  0100               	movlb	0	; () banked
 13166  00358C  6FC8               	movwf	___flge@ff1& (0+255),b
 13167  00358E  0E00               	movlw	0
 13168  003590  6FC9               	movwf	(___flge@ff1+1)& (0+255),b
 13169  003592  0E00               	movlw	0
 13170  003594  6FCA               	movwf	(___flge@ff1+2)& (0+255),b
 13171  003596  0E00               	movlw	0
 13172  003598  6FCB               	movwf	(___flge@ff1+3)& (0+255),b
 13173  00359A                     l5105:
 13174                           
 13175                           ; BSR set to: 0
 13176  00359A  0E00               	movlw	0
 13177  00359C  0100               	movlb	0	; () banked
 13178  00359E  15CC               	andwf	___flge@ff2& (0+255),w,b
 13179  0035A0  0100               	movlb	0	; () banked
 13180  0035A2  6FD0               	movwf	??___flge& (0+255),b
 13181  0035A4  0E00               	movlw	0
 13182  0035A6  0100               	movlb	0	; () banked
 13183  0035A8  15CD               	andwf	(___flge@ff2+1)& (0+255),w,b
 13184  0035AA  0100               	movlb	0	; () banked
 13185  0035AC  6FD1               	movwf	(??___flge+1)& (0+255),b
 13186  0035AE  0E80               	movlw	128
 13187  0035B0  0100               	movlb	0	; () banked
 13188  0035B2  15CE               	andwf	(___flge@ff2+2)& (0+255),w,b
 13189  0035B4  0100               	movlb	0	; () banked
 13190  0035B6  6FD2               	movwf	(??___flge+2)& (0+255),b
 13191  0035B8  0E7F               	movlw	127
 13192  0035BA  0100               	movlb	0	; () banked
 13193  0035BC  15CF               	andwf	(___flge@ff2+3)& (0+255),w,b
 13194  0035BE  0100               	movlb	0	; () banked
 13195  0035C0  6FD3               	movwf	(??___flge+3)& (0+255),b
 13196  0035C2  0100               	movlb	0	; () banked
 13197  0035C4  51D0               	movf	??___flge& (0+255),w,b
 13198  0035C6  0100               	movlb	0	; () banked
 13199  0035C8  11D1               	iorwf	(??___flge+1)& (0+255),w,b
 13200  0035CA  0100               	movlb	0	; () banked
 13201  0035CC  11D2               	iorwf	(??___flge+2)& (0+255),w,b
 13202  0035CE  0100               	movlb	0	; () banked
 13203  0035D0  11D3               	iorwf	(??___flge+3)& (0+255),w,b
 13204  0035D2  A4D8               	btfss	status,2,c
 13205  0035D4  D009               	goto	l5109
 13206                           
 13207                           ; BSR set to: 0
 13208  0035D6  0E00               	movlw	0
 13209  0035D8  0100               	movlb	0	; () banked
 13210  0035DA  6FCC               	movwf	___flge@ff2& (0+255),b
 13211  0035DC  0E00               	movlw	0
 13212  0035DE  6FCD               	movwf	(___flge@ff2+1)& (0+255),b
 13213  0035E0  0E00               	movlw	0
 13214  0035E2  6FCE               	movwf	(___flge@ff2+2)& (0+255),b
 13215  0035E4  0E00               	movlw	0
 13216  0035E6  6FCF               	movwf	(___flge@ff2+3)& (0+255),b
 13217  0035E8                     l5109:
 13218                           
 13219                           ; BSR set to: 0
 13220  0035E8  0100               	movlb	0	; () banked
 13221  0035EA  AFCB               	btfss	(___flge@ff1+3)& (0+255),7,b
 13222  0035EC  D026               	goto	l5113
 13223                           
 13224                           ; BSR set to: 0
 13225  0035EE  C0C8  F0D0         	movff	___flge@ff1,??___flge
 13226  0035F2  C0C9  F0D1         	movff	___flge@ff1+1,??___flge+1
 13227  0035F6  C0CA  F0D2         	movff	___flge@ff1+2,??___flge+2
 13228  0035FA  C0CB  F0D3         	movff	___flge@ff1+3,??___flge+3
 13229  0035FE  0100               	movlb	0	; () banked
 13230  003600  1FD0               	comf	??___flge& (0+255),f,b
 13231  003602  1FD1               	comf	(??___flge+1)& (0+255),f,b
 13232  003604  1FD2               	comf	(??___flge+2)& (0+255),f,b
 13233  003606  1FD3               	comf	(??___flge+3)& (0+255),f,b
 13234  003608  2BD0               	incf	??___flge& (0+255),f,b
 13235  00360A  0E00               	movlw	0
 13236  00360C  23D1               	addwfc	(??___flge+1)& (0+255),f,b
 13237  00360E  23D2               	addwfc	(??___flge+2)& (0+255),f,b
 13238  003610  23D3               	addwfc	(??___flge+3)& (0+255),f,b
 13239  003612  0E00               	movlw	0
 13240  003614  0100               	movlb	0	; () banked
 13241  003616  25D0               	addwf	??___flge& (0+255),w,b
 13242  003618  0100               	movlb	0	; () banked
 13243  00361A  6FC8               	movwf	___flge@ff1& (0+255),b
 13244  00361C  0E00               	movlw	0
 13245  00361E  0100               	movlb	0	; () banked
 13246  003620  21D1               	addwfc	(??___flge+1)& (0+255),w,b
 13247  003622  0100               	movlb	0	; () banked
 13248  003624  6FC9               	movwf	(___flge@ff1+1)& (0+255),b
 13249  003626  0E00               	movlw	0
 13250  003628  0100               	movlb	0	; () banked
 13251  00362A  21D2               	addwfc	(??___flge+2)& (0+255),w,b
 13252  00362C  0100               	movlb	0	; () banked
 13253  00362E  6FCA               	movwf	(___flge@ff1+2)& (0+255),b
 13254  003630  0E80               	movlw	128
 13255  003632  0100               	movlb	0	; () banked
 13256  003634  21D3               	addwfc	(??___flge+3)& (0+255),w,b
 13257  003636  0100               	movlb	0	; () banked
 13258  003638  6FCB               	movwf	(___flge@ff1+3)& (0+255),b
 13259  00363A                     l5113:
 13260                           
 13261                           ; BSR set to: 0
 13262  00363A  0100               	movlb	0	; () banked
 13263  00363C  AFCF               	btfss	(___flge@ff2+3)& (0+255),7,b
 13264  00363E  D026               	goto	l726
 13265                           
 13266                           ; BSR set to: 0
 13267  003640  C0CC  F0D0         	movff	___flge@ff2,??___flge
 13268  003644  C0CD  F0D1         	movff	___flge@ff2+1,??___flge+1
 13269  003648  C0CE  F0D2         	movff	___flge@ff2+2,??___flge+2
 13270  00364C  C0CF  F0D3         	movff	___flge@ff2+3,??___flge+3
 13271  003650  0100               	movlb	0	; () banked
 13272  003652  1FD0               	comf	??___flge& (0+255),f,b
 13273  003654  1FD1               	comf	(??___flge+1)& (0+255),f,b
 13274  003656  1FD2               	comf	(??___flge+2)& (0+255),f,b
 13275  003658  1FD3               	comf	(??___flge+3)& (0+255),f,b
 13276  00365A  2BD0               	incf	??___flge& (0+255),f,b
 13277  00365C  0E00               	movlw	0
 13278  00365E  23D1               	addwfc	(??___flge+1)& (0+255),f,b
 13279  003660  23D2               	addwfc	(??___flge+2)& (0+255),f,b
 13280  003662  23D3               	addwfc	(??___flge+3)& (0+255),f,b
 13281  003664  0E00               	movlw	0
 13282  003666  0100               	movlb	0	; () banked
 13283  003668  25D0               	addwf	??___flge& (0+255),w,b
 13284  00366A  0100               	movlb	0	; () banked
 13285  00366C  6FCC               	movwf	___flge@ff2& (0+255),b
 13286  00366E  0E00               	movlw	0
 13287  003670  0100               	movlb	0	; () banked
 13288  003672  21D1               	addwfc	(??___flge+1)& (0+255),w,b
 13289  003674  0100               	movlb	0	; () banked
 13290  003676  6FCD               	movwf	(___flge@ff2+1)& (0+255),b
 13291  003678  0E00               	movlw	0
 13292  00367A  0100               	movlb	0	; () banked
 13293  00367C  21D2               	addwfc	(??___flge+2)& (0+255),w,b
 13294  00367E  0100               	movlb	0	; () banked
 13295  003680  6FCE               	movwf	(___flge@ff2+2)& (0+255),b
 13296  003682  0E80               	movlw	128
 13297  003684  0100               	movlb	0	; () banked
 13298  003686  21D3               	addwfc	(??___flge+3)& (0+255),w,b
 13299  003688  0100               	movlb	0	; () banked
 13300  00368A  6FCF               	movwf	(___flge@ff2+3)& (0+255),b
 13301  00368C                     l726:
 13302                           
 13303                           ; BSR set to: 0
 13304  00368C  0E00               	movlw	0
 13305  00368E  0100               	movlb	0	; () banked
 13306  003690  1BC8               	xorwf	___flge@ff1& (0+255),f,b
 13307  003692  0E00               	movlw	0
 13308  003694  1BC9               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13309  003696  0E00               	movlw	0
 13310  003698  1BCA               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13311  00369A  0E80               	movlw	128
 13312  00369C  1BCB               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13313  00369E  0E00               	movlw	0
 13314  0036A0  0100               	movlb	0	; () banked
 13315  0036A2  1BCC               	xorwf	___flge@ff2& (0+255),f,b
 13316  0036A4  0E00               	movlw	0
 13317  0036A6  1BCD               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13318  0036A8  0E00               	movlw	0
 13319  0036AA  1BCE               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13320  0036AC  0E80               	movlw	128
 13321  0036AE  1BCF               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13322  0036B0  0100               	movlb	0	; () banked
 13323  0036B2  51CC               	movf	___flge@ff2& (0+255),w,b
 13324  0036B4  0100               	movlb	0	; () banked
 13325  0036B6  5DC8               	subwf	___flge@ff1& (0+255),w,b
 13326  0036B8  0100               	movlb	0	; () banked
 13327  0036BA  51CD               	movf	(___flge@ff2+1)& (0+255),w,b
 13328  0036BC  0100               	movlb	0	; () banked
 13329  0036BE  59C9               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13330  0036C0  0100               	movlb	0	; () banked
 13331  0036C2  51CE               	movf	(___flge@ff2+2)& (0+255),w,b
 13332  0036C4  0100               	movlb	0	; () banked
 13333  0036C6  59CA               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13334  0036C8  0100               	movlb	0	; () banked
 13335  0036CA  51CF               	movf	(___flge@ff2+3)& (0+255),w,b
 13336  0036CC  0100               	movlb	0	; () banked
 13337  0036CE  59CB               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13338  0036D0  B0D8               	btfsc	status,0,c
 13339  0036D2  D002               	goto	l5119
 13340                           
 13341                           ; BSR set to: 0
 13342  0036D4  90D8               	bcf	status,0,c
 13343  0036D6  0012               	return	
 13344  0036D8                     l5119:
 13345                           
 13346                           ; BSR set to: 0
 13347  0036D8  80D8               	bsf	status,0,c
 13348                           
 13349                           ; BSR set to: 0
 13350  0036DA  0012               	return	
 13351  0036DC                     __end_of___flge:
 13352                           	opt stack 0
 13353                           tblptru	equ	0xFF8
 13354                           tblptrh	equ	0xFF7
 13355                           tblptrl	equ	0xFF6
 13356                           tablat	equ	0xFF5
 13357                           prodh	equ	0xFF4
 13358                           prodl	equ	0xFF3
 13359                           intcon	equ	0xFF2
 13360                           intcon2	equ	0xFF1
 13361                           intcon3	equ	0xFF0
 13362                           postinc0	equ	0xFEE
 13363                           wreg	equ	0xFE8
 13364                           indf1	equ	0xFE7
 13365                           postdec1	equ	0xFE5
 13366                           fsr1h	equ	0xFE2
 13367                           fsr1l	equ	0xFE1
 13368                           indf2	equ	0xFDF
 13369                           postinc2	equ	0xFDE
 13370                           postdec2	equ	0xFDD
 13371                           fsr2h	equ	0xFDA
 13372                           fsr2l	equ	0xFD9
 13373                           status	equ	0xFD8
 13374                           
 13375 ;; *************** function _highIsr *****************
 13376 ;; Defined at:
 13377 ;;		line 469 in file "Main.c"
 13378 ;; Parameters:    Size  Location     Type
 13379 ;;		None
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;		None
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  1    wreg      void 
 13384 ;; Registers used:
 13385 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/0
 13388 ;;		On exit  : 0/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13393 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13394 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13395 ;;Total ram usage:       14 bytes
 13396 ;; Hardware stack levels used:    1
 13397 ;; Hardware stack levels required when called:    3
 13398 ;; This function calls:
 13399 ;;		_Timer3_int
 13400 ;;		_modeschange1
 13401 ;;		_update_cooking_time
 13402 ;;		i2_delay_ms
 13403 ;; This function is called by:
 13404 ;;		Interrupt level 2
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           	psect	intcode
 13409  000008                     __pintcode:
 13410                           	opt stack 0
 13411  000008                     _highIsr:
 13412                           	opt stack 21
 13413                           
 13414                           ; BSR set to: 0
 13415                           ;incstack = 0
 13416  000008  8260               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13417  00000A  CFFA F040          	movff	pclath,??_highIsr
 13418  00000E  CFFB F041          	movff	pclatu,??_highIsr+1
 13419  000012  EDB0  F020         	call	int_func,f	;refresh shadow registers
 13420                           pclatu	equ	0xFFB
 13421                           pclath	equ	0xFFA
 13422                           tblptru	equ	0xFF8
 13423                           tblptrh	equ	0xFF7
 13424                           tblptrl	equ	0xFF6
 13425                           tablat	equ	0xFF5
 13426                           prodh	equ	0xFF4
 13427                           prodl	equ	0xFF3
 13428                           intcon	equ	0xFF2
 13429                           intcon2	equ	0xFF1
 13430                           intcon3	equ	0xFF0
 13431                           postinc0	equ	0xFEE
 13432                           wreg	equ	0xFE8
 13433                           indf1	equ	0xFE7
 13434                           postdec1	equ	0xFE5
 13435                           fsr1h	equ	0xFE2
 13436                           fsr1l	equ	0xFE1
 13437                           indf2	equ	0xFDF
 13438                           postinc2	equ	0xFDE
 13439                           postdec2	equ	0xFDD
 13440                           fsr2h	equ	0xFDA
 13441                           fsr2l	equ	0xFD9
 13442                           status	equ	0xFD8
 13443                           
 13444                           	psect	intcode_body
 13445  004160                     __pintcode_body:
 13446                           	opt stack 21
 13447  004160                     int_func:
 13448                           	opt stack 21
 13449  004160  0006               	pop		; remove dummy address from shadow register refresh
 13450  004162  CFE9 F042          	movff	fsr0l,??_highIsr+2
 13451  004166  CFEA F043          	movff	fsr0h,??_highIsr+3
 13452  00416A  CFE1 F044          	movff	fsr1l,??_highIsr+4
 13453  00416E  CFE2 F045          	movff	fsr1h,??_highIsr+5
 13454  004172  CFD9 F046          	movff	fsr2l,??_highIsr+6
 13455  004176  CFDA F047          	movff	fsr2h,??_highIsr+7
 13456  00417A  CFF3 F048          	movff	prodl,??_highIsr+8
 13457  00417E  CFF4 F049          	movff	prodh,??_highIsr+9
 13458  004182  CFF6 F04A          	movff	tblptrl,??_highIsr+10
 13459  004186  CFF7 F04B          	movff	tblptrh,??_highIsr+11
 13460  00418A  CFF8 F04C          	movff	tblptru,??_highIsr+12
 13461  00418E  CFF5 F04D          	movff	tablat,??_highIsr+13
 13462                           
 13463                           ;Main.c: 470: if(INTCONbits.TMR0IF){
 13464  004192  A4F2               	btfss	intcon,2,c	;volatile
 13465  004194  D003               	goto	i2l290
 13466                           
 13467                           ;Main.c: 471: update_cooking_time();
 13468  004196  ECC7  F01E         	call	_update_cooking_time	;wreg free
 13469                           
 13470                           ;Main.c: 472: }else if(INTCONbits.INT0IF) {
 13471  00419A  D025               	goto	i2l300
 13472  00419C                     i2l290:
 13473  00419C  A2F2               	btfss	intcon,1,c	;volatile
 13474  00419E  D009               	goto	i2l292
 13475                           
 13476                           ;Main.c: 473: delay_ms(500);
 13477  0041A0  0E01               	movlw	1
 13478  0041A2  6E02               	movwf	i2delay_ms@n+1,c
 13479  0041A4  0EF4               	movlw	244
 13480  0041A6  6E01               	movwf	i2delay_ms@n,c
 13481  0041A8  EC21  F027         	call	i2_delay_ms	;wreg free
 13482                           
 13483                           ;Main.c: 474: modeschange1();
 13484  0041AC  EC2A  F022         	call	_modeschange1	;wreg free
 13485                           
 13486                           ;Main.c: 476: }
 13487  0041B0  D01A               	goto	i2l300
 13488  0041B2                     i2l292:
 13489                           
 13490                           ;Main.c: 477: else if(INTCON3bits.INT1IF){
 13491  0041B2  A0F0               	btfss	intcon3,0,c	;volatile
 13492  0041B4  D00A               	goto	i2l294
 13493                           
 13494                           ;Main.c: 478: INTCON3bits.INT1IF = 0;
 13495  0041B6  90F0               	bcf	intcon3,0,c	;volatile
 13496                           
 13497                           ;Main.c: 479: if(cookingTime != 0){
 13498  0041B8  5052               	movf	_cookingTime,w,c
 13499  0041BA  1053               	iorwf	_cookingTime+1,w,c
 13500  0041BC  B4D8               	btfsc	status,2,c
 13501  0041BE  D013               	goto	i2l300
 13502                           
 13503                           ;Main.c: 480: cooker = 1;
 13504  0041C0  0E00               	movlw	0
 13505  0041C2  6E51               	movwf	_cooker+1,c
 13506  0041C4  0E01               	movlw	1
 13507  0041C6  6E50               	movwf	_cooker,c
 13508                           
 13509                           ;Main.c: 481: }
 13510                           ;Main.c: 482: }else if(INTCON3bits.INT2IF){
 13511  0041C8  D00E               	goto	i2l300
 13512  0041CA                     i2l294:
 13513  0041CA  A2F0               	btfss	intcon3,1,c	;volatile
 13514  0041CC  D007               	goto	i2l297
 13515                           
 13516                           ;Main.c: 483: INTCON3bits.INT2IF = 0;
 13517  0041CE  92F0               	bcf	intcon3,1,c	;volatile
 13518                           
 13519                           ;Main.c: 484: cooker = 0;
 13520  0041D0  0E00               	movlw	0
 13521  0041D2  6E51               	movwf	_cooker+1,c
 13522  0041D4  0E00               	movlw	0
 13523  0041D6  6E50               	movwf	_cooker,c
 13524                           
 13525                           ;Main.c: 485: PORTCbits.RC5 = 0;
 13526  0041D8  9A82               	bcf	3970,5,c	;volatile
 13527                           
 13528                           ;Main.c: 486: }else if(PIR2bits.TMR3IF){
 13529  0041DA  D005               	goto	i2l300
 13530  0041DC                     i2l297:
 13531  0041DC  A2A1               	btfss	4001,1,c	;volatile
 13532  0041DE  D003               	goto	i2l300
 13533                           
 13534                           ;Main.c: 487: Timer3_int();
 13535  0041E0  EC6A  F023         	call	_Timer3_int	;wreg free
 13536                           
 13537                           ;Main.c: 488: PIR2bits.TMR3IF=0;
 13538  0041E4  92A1               	bcf	4001,1,c	;volatile
 13539  0041E6                     i2l300:
 13540  0041E6  C04D  FFF5         	movff	??_highIsr+13,tablat
 13541  0041EA  C04C  FFF8         	movff	??_highIsr+12,tblptru
 13542  0041EE  C04B  FFF7         	movff	??_highIsr+11,tblptrh
 13543  0041F2  C04A  FFF6         	movff	??_highIsr+10,tblptrl
 13544  0041F6  C049  FFF4         	movff	??_highIsr+9,prodh
 13545  0041FA  C048  FFF3         	movff	??_highIsr+8,prodl
 13546  0041FE  C047  FFDA         	movff	??_highIsr+7,fsr2h
 13547  004202  C046  FFD9         	movff	??_highIsr+6,fsr2l
 13548  004206  C045  FFE2         	movff	??_highIsr+5,fsr1h
 13549  00420A  C044  FFE1         	movff	??_highIsr+4,fsr1l
 13550  00420E  C043  FFEA         	movff	??_highIsr+3,fsr0h
 13551  004212  C042  FFE9         	movff	??_highIsr+2,fsr0l
 13552  004216  C041  FFFB         	movff	??_highIsr+1,pclatu
 13553  00421A  C040  FFFA         	movff	??_highIsr,pclath
 13554  00421E  9260               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13555  004220  0011               	retfie		f
 13556  004222                     __end_of_highIsr:
 13557                           	opt stack 0
 13558                           pclatu	equ	0xFFB
 13559                           pclath	equ	0xFFA
 13560                           tblptru	equ	0xFF8
 13561                           tblptrh	equ	0xFF7
 13562                           tblptrl	equ	0xFF6
 13563                           tablat	equ	0xFF5
 13564                           prodh	equ	0xFF4
 13565                           prodl	equ	0xFF3
 13566                           intcon	equ	0xFF2
 13567                           intcon2	equ	0xFF1
 13568                           intcon3	equ	0xFF0
 13569                           postinc0	equ	0xFEE
 13570                           fsr0h	equ	0xFEA
 13571                           fsr0l	equ	0xFE9
 13572                           wreg	equ	0xFE8
 13573                           indf1	equ	0xFE7
 13574                           postdec1	equ	0xFE5
 13575                           fsr1h	equ	0xFE2
 13576                           fsr1l	equ	0xFE1
 13577                           indf2	equ	0xFDF
 13578                           postinc2	equ	0xFDE
 13579                           postdec2	equ	0xFDD
 13580                           fsr2h	equ	0xFDA
 13581                           fsr2l	equ	0xFD9
 13582                           status	equ	0xFD8
 13583                           
 13584 ;; *************** function _update_cooking_time *****************
 13585 ;; Defined at:
 13586 ;;		line 348 in file "Main.c"
 13587 ;; Parameters:    Size  Location     Type
 13588 ;;		None
 13589 ;; Auto vars:     Size  Location     Type
 13590 ;;		None
 13591 ;; Return value:  Size  Location     Type
 13592 ;;                  1    wreg      void 
 13593 ;; Registers used:
 13594 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13595 ;; Tracked objects:
 13596 ;;		On entry : 0/0
 13597 ;;		On exit  : 0/0
 13598 ;;		Unchanged: 0/0
 13599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13602 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13604 ;;Total ram usage:        2 bytes
 13605 ;; Hardware stack levels used:    1
 13606 ;; Hardware stack levels required when called:    1
 13607 ;; This function calls:
 13608 ;;		i2___awdiv
 13609 ;;		i2___lwdiv
 13610 ;;		i2___wmul
 13611 ;;		i2_reloadTimer0
 13612 ;; This function is called by:
 13613 ;;		_highIsr
 13614 ;; This function uses a non-reentrant model
 13615 ;;
 13616                           
 13617                           	psect	text42
 13618  003D8E                     __ptext42:
 13619                           	opt stack 0
 13620  003D8E                     _update_cooking_time:
 13621                           	opt stack 22
 13622                           
 13623                           ;Main.c: 349: INTCONbits.TMR0IF = 0;
 13624                           
 13625                           ;incstack = 0
 13626  003D8E  94F2               	bcf	intcon,2,c	;volatile
 13627                           
 13628                           ;Main.c: 350: cookingTime = seconds + 60*minutes + 60*60*hours;
 13629  003D90  C056  F001         	movff	_minutes,i2___wmul@multiplier
 13630  003D94  C057  F002         	movff	_minutes+1,i2___wmul@multiplier+1
 13631  003D98  0E00               	movlw	0
 13632  003D9A  6E04               	movwf	i2___wmul@multiplicand+1,c
 13633  003D9C  0E3C               	movlw	60
 13634  003D9E  6E03               	movwf	i2___wmul@multiplicand,c
 13635  003DA0  EC0E  F027         	call	i2___wmul	;wreg free
 13636  003DA4  C001  F00E         	movff	?i2___wmul,??_update_cooking_time
 13637  003DA8  C002  F00F         	movff	?i2___wmul+1,??_update_cooking_time+1
 13638  003DAC  C054  F001         	movff	_hours,i2___wmul@multiplier
 13639  003DB0  C055  F002         	movff	_hours+1,i2___wmul@multiplier+1
 13640  003DB4  0E0E               	movlw	14
 13641  003DB6  6E04               	movwf	i2___wmul@multiplicand+1,c
 13642  003DB8  0E10               	movlw	16
 13643  003DBA  6E03               	movwf	i2___wmul@multiplicand,c
 13644  003DBC  EC0E  F027         	call	i2___wmul	;wreg free
 13645  003DC0  5001               	movf	?i2___wmul,w,c
 13646  003DC2  260E               	addwf	??_update_cooking_time,f,c
 13647  003DC4  5002               	movf	?i2___wmul+1,w,c
 13648  003DC6  220F               	addwfc	??_update_cooking_time+1,f,c
 13649  003DC8  5058               	movf	_seconds,w,c
 13650  003DCA  240E               	addwf	??_update_cooking_time,w,c
 13651  003DCC  6E52               	movwf	_cookingTime,c
 13652  003DCE  5059               	movf	_seconds+1,w,c
 13653  003DD0  200F               	addwfc	??_update_cooking_time+1,w,c
 13654  003DD2  6E53               	movwf	_cookingTime+1,c
 13655                           
 13656                           ;Main.c: 351: if(cooker == 1 && cookingTime != 0 ){
 13657  003DD4  0450               	decf	_cooker,w,c
 13658  003DD6  1051               	iorwf	_cooker+1,w,c
 13659  003DD8  A4D8               	btfss	status,2,c
 13660  003DDA  D017               	goto	i2l5545
 13661  003DDC  5052               	movf	_cookingTime,w,c
 13662  003DDE  1053               	iorwf	_cookingTime+1,w,c
 13663  003DE0  B4D8               	btfsc	status,2,c
 13664  003DE2  D013               	goto	i2l5545
 13665                           
 13666                           ;Main.c: 352: cookingTime--;
 13667  003DE4  0652               	decf	_cookingTime,f,c
 13668  003DE6  A0D8               	btfss	status,0,c
 13669  003DE8  0653               	decf	_cookingTime+1,f,c
 13670                           
 13671                           ;Main.c: 353: if(cookingTime == 0){
 13672  003DEA  5052               	movf	_cookingTime,w,c
 13673  003DEC  1053               	iorwf	_cookingTime+1,w,c
 13674  003DEE  A4D8               	btfss	status,2,c
 13675  003DF0  D00C               	goto	i2l5545
 13676                           
 13677                           ;Main.c: 354: cooker = 0;
 13678  003DF2  0E00               	movlw	0
 13679  003DF4  6E51               	movwf	_cooker+1,c
 13680  003DF6  0E00               	movlw	0
 13681  003DF8  6E50               	movwf	_cooker,c
 13682                           
 13683                           ;Main.c: 355: PORTCbits.RC5 = 0;
 13684  003DFA  9A82               	bcf	3970,5,c	;volatile
 13685                           
 13686                           ;Main.c: 356: buzzer = 1;
 13687  003DFC  0E00               	movlw	0
 13688  003DFE  0101               	movlb	1	; () banked
 13689  003E00  6F54               	movwf	(_buzzer+1)& (0+255),b
 13690  003E02  0E01               	movlw	1
 13691  003E04  6F53               	movwf	_buzzer& (0+255),b
 13692                           
 13693                           ;Main.c: 357: Percent_Heat_Counter=0;
 13694  003E06  0E00               	movlw	0
 13695  003E08  6E5E               	movwf	_Percent_Heat_Counter,c
 13696  003E0A                     i2l5545:
 13697                           
 13698                           ;Main.c: 358: }
 13699                           ;Main.c: 360: }
 13700                           ;Main.c: 361: hours = cookingTime / 3600;
 13701  003E0A  C052  F001         	movff	_cookingTime,i2___awdiv@dividend
 13702  003E0E  C053  F002         	movff	_cookingTime+1,i2___awdiv@dividend+1
 13703  003E12  0E0E               	movlw	14
 13704  003E14  6E04               	movwf	i2___awdiv@divisor+1,c
 13705  003E16  0E10               	movlw	16
 13706  003E18  6E03               	movwf	i2___awdiv@divisor,c
 13707  003E1A  ECB1  F023         	call	i2___awdiv	;wreg free
 13708  003E1E  C001  F054         	movff	?i2___awdiv,_hours
 13709  003E22  C002  F055         	movff	?i2___awdiv+1,_hours+1
 13710                           
 13711                           ;Main.c: 362: minutes = (cookingTime - hours*3600)/60;
 13712  003E26  C054  F001         	movff	_hours,i2___wmul@multiplier
 13713  003E2A  C055  F002         	movff	_hours+1,i2___wmul@multiplier+1
 13714  003E2E  0E0E               	movlw	14
 13715  003E30  6E04               	movwf	i2___wmul@multiplicand+1,c
 13716  003E32  0E10               	movlw	16
 13717  003E34  6E03               	movwf	i2___wmul@multiplicand,c
 13718  003E36  EC0E  F027         	call	i2___wmul	;wreg free
 13719  003E3A  1E01               	comf	?i2___wmul,f,c
 13720  003E3C  1E02               	comf	?i2___wmul+1,f,c
 13721  003E3E  4A01               	infsnz	?i2___wmul,f,c
 13722  003E40  2A02               	incf	?i2___wmul+1,f,c
 13723  003E42  5052               	movf	_cookingTime,w,c
 13724  003E44  2401               	addwf	?i2___wmul,w,c
 13725  003E46  6E07               	movwf	i2___lwdiv@dividend,c
 13726  003E48  5053               	movf	_cookingTime+1,w,c
 13727  003E4A  2002               	addwfc	?i2___wmul+1,w,c
 13728  003E4C  6E08               	movwf	i2___lwdiv@dividend+1,c
 13729  003E4E  0E00               	movlw	0
 13730  003E50  6E0A               	movwf	i2___lwdiv@divisor+1,c
 13731  003E52  0E3C               	movlw	60
 13732  003E54  6E09               	movwf	i2___lwdiv@divisor,c
 13733  003E56  EC6B  F025         	call	i2___lwdiv	;wreg free
 13734  003E5A  C007  F056         	movff	?i2___lwdiv,_minutes
 13735  003E5E  C008  F057         	movff	?i2___lwdiv+1,_minutes+1
 13736                           
 13737                           ;Main.c: 363: seconds = cookingTime - hours*3600 - minutes*60;
 13738  003E62  C054  F001         	movff	_hours,i2___wmul@multiplier
 13739  003E66  C055  F002         	movff	_hours+1,i2___wmul@multiplier+1
 13740  003E6A  0E0E               	movlw	14
 13741  003E6C  6E04               	movwf	i2___wmul@multiplicand+1,c
 13742  003E6E  0E10               	movlw	16
 13743  003E70  6E03               	movwf	i2___wmul@multiplicand,c
 13744  003E72  EC0E  F027         	call	i2___wmul	;wreg free
 13745  003E76  C001  F00E         	movff	?i2___wmul,??_update_cooking_time
 13746  003E7A  C002  F00F         	movff	?i2___wmul+1,??_update_cooking_time+1
 13747  003E7E  C056  F001         	movff	_minutes,i2___wmul@multiplier
 13748  003E82  C057  F002         	movff	_minutes+1,i2___wmul@multiplier+1
 13749  003E86  0E00               	movlw	0
 13750  003E88  6E04               	movwf	i2___wmul@multiplicand+1,c
 13751  003E8A  0E3C               	movlw	60
 13752  003E8C  6E03               	movwf	i2___wmul@multiplicand,c
 13753  003E8E  EC0E  F027         	call	i2___wmul	;wreg free
 13754  003E92  5001               	movf	?i2___wmul,w,c
 13755  003E94  260E               	addwf	??_update_cooking_time,f,c
 13756  003E96  5002               	movf	?i2___wmul+1,w,c
 13757  003E98  220F               	addwfc	??_update_cooking_time+1,f,c
 13758  003E9A  1E0E               	comf	??_update_cooking_time,f,c
 13759  003E9C  1E0F               	comf	??_update_cooking_time+1,f,c
 13760  003E9E  4A0E               	infsnz	??_update_cooking_time,f,c
 13761  003EA0  2A0F               	incf	??_update_cooking_time+1,f,c
 13762  003EA2  5052               	movf	_cookingTime,w,c
 13763  003EA4  240E               	addwf	??_update_cooking_time,w,c
 13764  003EA6  6E58               	movwf	_seconds,c
 13765  003EA8  5053               	movf	_cookingTime+1,w,c
 13766  003EAA  200F               	addwfc	??_update_cooking_time+1,w,c
 13767  003EAC  6E59               	movwf	_seconds+1,c
 13768                           
 13769                           ;Main.c: 365: reloadTimer0();
 13770  003EAE  EC3E  F027         	call	i2_reloadTimer0	;wreg free
 13771  003EB2  0012               	return		;funcret
 13772  003EB4                     __end_of_update_cooking_time:
 13773                           	opt stack 0
 13774                           pclatu	equ	0xFFB
 13775                           pclath	equ	0xFFA
 13776                           tblptru	equ	0xFF8
 13777                           tblptrh	equ	0xFF7
 13778                           tblptrl	equ	0xFF6
 13779                           tablat	equ	0xFF5
 13780                           prodh	equ	0xFF4
 13781                           prodl	equ	0xFF3
 13782                           intcon	equ	0xFF2
 13783                           intcon2	equ	0xFF1
 13784                           intcon3	equ	0xFF0
 13785                           postinc0	equ	0xFEE
 13786                           fsr0h	equ	0xFEA
 13787                           fsr0l	equ	0xFE9
 13788                           wreg	equ	0xFE8
 13789                           indf1	equ	0xFE7
 13790                           postdec1	equ	0xFE5
 13791                           fsr1h	equ	0xFE2
 13792                           fsr1l	equ	0xFE1
 13793                           indf2	equ	0xFDF
 13794                           postinc2	equ	0xFDE
 13795                           postdec2	equ	0xFDD
 13796                           fsr2h	equ	0xFDA
 13797                           fsr2l	equ	0xFD9
 13798                           status	equ	0xFD8
 13799                           
 13800 ;; *************** function i2_reloadTimer0 *****************
 13801 ;; Defined at:
 13802 ;;		line 103 in file "Main.c"
 13803 ;; Parameters:    Size  Location     Type
 13804 ;;		None
 13805 ;; Auto vars:     Size  Location     Type
 13806 ;;		None
 13807 ;; Return value:  Size  Location     Type
 13808 ;;                  1    wreg      void 
 13809 ;; Registers used:
 13810 ;;		wreg, status,2
 13811 ;; Tracked objects:
 13812 ;;		On entry : 0/0
 13813 ;;		On exit  : 0/0
 13814 ;;		Unchanged: 0/0
 13815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13820 ;;Total ram usage:        0 bytes
 13821 ;; Hardware stack levels used:    1
 13822 ;; This function calls:
 13823 ;;		Nothing
 13824 ;; This function is called by:
 13825 ;;		_update_cooking_time
 13826 ;; This function uses a non-reentrant model
 13827 ;;
 13828                           
 13829                           	psect	text43
 13830  004E7C                     __ptext43:
 13831                           	opt stack 0
 13832  004E7C                     i2_reloadTimer0:
 13833                           	opt stack 22
 13834                           
 13835                           ;Main.c: 104: TMR0H = (unsigned char)((3036 >> 8) & 0x00FF);
 13836                           
 13837                           ;incstack = 0
 13838  004E7C  0E0B               	movlw	11
 13839  004E7E  6ED7               	movwf	4055,c	;volatile
 13840                           
 13841                           ;Main.c: 105: TMR0L = (unsigned char)(3036 & 0x00FF );
 13842  004E80  0EDC               	movlw	220
 13843  004E82  6ED6               	movwf	4054,c	;volatile
 13844  004E84  0012               	return		;funcret
 13845  004E86                     __end_ofi2_reloadTimer0:
 13846                           	opt stack 0
 13847                           pclatu	equ	0xFFB
 13848                           pclath	equ	0xFFA
 13849                           tblptru	equ	0xFF8
 13850                           tblptrh	equ	0xFF7
 13851                           tblptrl	equ	0xFF6
 13852                           tablat	equ	0xFF5
 13853                           prodh	equ	0xFF4
 13854                           prodl	equ	0xFF3
 13855                           intcon	equ	0xFF2
 13856                           intcon2	equ	0xFF1
 13857                           intcon3	equ	0xFF0
 13858                           postinc0	equ	0xFEE
 13859                           fsr0h	equ	0xFEA
 13860                           fsr0l	equ	0xFE9
 13861                           wreg	equ	0xFE8
 13862                           indf1	equ	0xFE7
 13863                           postdec1	equ	0xFE5
 13864                           fsr1h	equ	0xFE2
 13865                           fsr1l	equ	0xFE1
 13866                           indf2	equ	0xFDF
 13867                           postinc2	equ	0xFDE
 13868                           postdec2	equ	0xFDD
 13869                           fsr2h	equ	0xFDA
 13870                           fsr2l	equ	0xFD9
 13871                           status	equ	0xFD8
 13872                           
 13873 ;; *************** function i2___wmul *****************
 13874 ;; Defined at:
 13875 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 13876 ;; Parameters:    Size  Location     Type
 13877 ;;  multiplier      2    0[COMRAM] unsigned int 
 13878 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13879 ;; Auto vars:     Size  Location     Type
 13880 ;;  __wmul          2    4[COMRAM] unsigned int 
 13881 ;; Return value:  Size  Location     Type
 13882 ;;                  2    0[COMRAM] unsigned int 
 13883 ;; Registers used:
 13884 ;;		wreg, status,2, status,0, prodl, prodh
 13885 ;; Tracked objects:
 13886 ;;		On entry : 0/0
 13887 ;;		On exit  : 0/0
 13888 ;;		Unchanged: 0/0
 13889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13893 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13894 ;;Total ram usage:        6 bytes
 13895 ;; Hardware stack levels used:    1
 13896 ;; This function calls:
 13897 ;;		Nothing
 13898 ;; This function is called by:
 13899 ;;		_update_cooking_time
 13900 ;; This function uses a non-reentrant model
 13901 ;;
 13902                           
 13903                           	psect	text44
 13904  004E1C                     __ptext44:
 13905                           	opt stack 0
 13906  004E1C                     i2___wmul:
 13907                           	opt stack 22
 13908                           
 13909                           ;incstack = 0
 13910  004E1C  5001               	movf	i2___wmul@multiplier,w,c
 13911  004E1E  0203               	mulwf	i2___wmul@multiplicand,c
 13912  004E20  CFF3 F005          	movff	prodl,i2___wmul@product
 13913  004E24  CFF4 F006          	movff	prodh,i2___wmul@product+1
 13914  004E28  5001               	movf	i2___wmul@multiplier,w,c
 13915  004E2A  0204               	mulwf	i2___wmul@multiplicand+1,c
 13916  004E2C  50F3               	movf	prodl,w,c
 13917  004E2E  2606               	addwf	i2___wmul@product+1,f,c
 13918  004E30  5002               	movf	i2___wmul@multiplier+1,w,c
 13919  004E32  0203               	mulwf	i2___wmul@multiplicand,c
 13920  004E34  50F3               	movf	prodl,w,c
 13921  004E36  2606               	addwf	i2___wmul@product+1,f,c
 13922  004E38  C005  F001         	movff	i2___wmul@product,?i2___wmul
 13923  004E3C  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 13924  004E40  0012               	return	
 13925  004E42                     __end_ofi2___wmul:
 13926                           	opt stack 0
 13927                           pclatu	equ	0xFFB
 13928                           pclath	equ	0xFFA
 13929                           tblptru	equ	0xFF8
 13930                           tblptrh	equ	0xFF7
 13931                           tblptrl	equ	0xFF6
 13932                           tablat	equ	0xFF5
 13933                           prodh	equ	0xFF4
 13934                           prodl	equ	0xFF3
 13935                           intcon	equ	0xFF2
 13936                           intcon2	equ	0xFF1
 13937                           intcon3	equ	0xFF0
 13938                           postinc0	equ	0xFEE
 13939                           fsr0h	equ	0xFEA
 13940                           fsr0l	equ	0xFE9
 13941                           wreg	equ	0xFE8
 13942                           indf1	equ	0xFE7
 13943                           postdec1	equ	0xFE5
 13944                           fsr1h	equ	0xFE2
 13945                           fsr1l	equ	0xFE1
 13946                           indf2	equ	0xFDF
 13947                           postinc2	equ	0xFDE
 13948                           postdec2	equ	0xFDD
 13949                           fsr2h	equ	0xFDA
 13950                           fsr2l	equ	0xFD9
 13951                           status	equ	0xFD8
 13952                           
 13953 ;; *************** function i2___lwdiv *****************
 13954 ;; Defined at:
 13955 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 13956 ;; Parameters:    Size  Location     Type
 13957 ;;  dividend        2    6[COMRAM] unsigned int 
 13958 ;;  divisor         2    8[COMRAM] unsigned int 
 13959 ;; Auto vars:     Size  Location     Type
 13960 ;;  __lwdiv         2   10[COMRAM] unsigned int 
 13961 ;;  __lwdiv         1   12[COMRAM] unsigned char 
 13962 ;; Return value:  Size  Location     Type
 13963 ;;                  2    6[COMRAM] unsigned int 
 13964 ;; Registers used:
 13965 ;;		wreg, status,2, status,0
 13966 ;; Tracked objects:
 13967 ;;		On entry : 0/0
 13968 ;;		On exit  : 0/0
 13969 ;;		Unchanged: 0/0
 13970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13972 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13974 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13975 ;;Total ram usage:        7 bytes
 13976 ;; Hardware stack levels used:    1
 13977 ;; This function calls:
 13978 ;;		Nothing
 13979 ;; This function is called by:
 13980 ;;		_update_cooking_time
 13981 ;; This function uses a non-reentrant model
 13982 ;;
 13983                           
 13984                           	psect	text45
 13985  004AD6                     __ptext45:
 13986                           	opt stack 0
 13987  004AD6                     i2___lwdiv:
 13988                           	opt stack 22
 13989                           
 13990                           ;incstack = 0
 13991  004AD6  0E00               	movlw	0
 13992  004AD8  6E0C               	movwf	i2___lwdiv@quotient+1,c
 13993  004ADA  0E00               	movlw	0
 13994  004ADC  6E0B               	movwf	i2___lwdiv@quotient,c
 13995  004ADE  5009               	movf	i2___lwdiv@divisor,w,c
 13996  004AE0  100A               	iorwf	i2___lwdiv@divisor+1,w,c
 13997  004AE2  B4D8               	btfsc	status,2,c
 13998  004AE4  D01C               	goto	i2l948
 13999  004AE6  0E01               	movlw	1
 14000  004AE8  6E0D               	movwf	i2___lwdiv@counter,c
 14001  004AEA  D004               	goto	i2l5309
 14002  004AEC                     i2l5307:
 14003  004AEC  90D8               	bcf	status,0,c
 14004  004AEE  3609               	rlcf	i2___lwdiv@divisor,f,c
 14005  004AF0  360A               	rlcf	i2___lwdiv@divisor+1,f,c
 14006  004AF2  2A0D               	incf	i2___lwdiv@counter,f,c
 14007  004AF4                     i2l5309:
 14008  004AF4  AE0A               	btfss	i2___lwdiv@divisor+1,7,c
 14009  004AF6  D7FA               	goto	i2l5307
 14010  004AF8                     i2l5311:
 14011  004AF8  90D8               	bcf	status,0,c
 14012  004AFA  360B               	rlcf	i2___lwdiv@quotient,f,c
 14013  004AFC  360C               	rlcf	i2___lwdiv@quotient+1,f,c
 14014  004AFE  5009               	movf	i2___lwdiv@divisor,w,c
 14015  004B00  5C07               	subwf	i2___lwdiv@dividend,w,c
 14016  004B02  500A               	movf	i2___lwdiv@divisor+1,w,c
 14017  004B04  5808               	subwfb	i2___lwdiv@dividend+1,w,c
 14018  004B06  A0D8               	btfss	status,0,c
 14019  004B08  D005               	goto	i2l5319
 14020  004B0A  5009               	movf	i2___lwdiv@divisor,w,c
 14021  004B0C  5E07               	subwf	i2___lwdiv@dividend,f,c
 14022  004B0E  500A               	movf	i2___lwdiv@divisor+1,w,c
 14023  004B10  5A08               	subwfb	i2___lwdiv@dividend+1,f,c
 14024  004B12  800B               	bsf	i2___lwdiv@quotient,0,c
 14025  004B14                     i2l5319:
 14026  004B14  90D8               	bcf	status,0,c
 14027  004B16  320A               	rrcf	i2___lwdiv@divisor+1,f,c
 14028  004B18  3209               	rrcf	i2___lwdiv@divisor,f,c
 14029  004B1A  2E0D               	decfsz	i2___lwdiv@counter,f,c
 14030  004B1C  D7ED               	goto	i2l5311
 14031  004B1E                     i2l948:
 14032  004B1E  C00B  F007         	movff	i2___lwdiv@quotient,?i2___lwdiv
 14033  004B22  C00C  F008         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 14034  004B26  0012               	return		;funcret
 14035  004B28                     __end_ofi2___lwdiv:
 14036                           	opt stack 0
 14037                           pclatu	equ	0xFFB
 14038                           pclath	equ	0xFFA
 14039                           tblptru	equ	0xFF8
 14040                           tblptrh	equ	0xFF7
 14041                           tblptrl	equ	0xFF6
 14042                           tablat	equ	0xFF5
 14043                           prodh	equ	0xFF4
 14044                           prodl	equ	0xFF3
 14045                           intcon	equ	0xFF2
 14046                           intcon2	equ	0xFF1
 14047                           intcon3	equ	0xFF0
 14048                           postinc0	equ	0xFEE
 14049                           fsr0h	equ	0xFEA
 14050                           fsr0l	equ	0xFE9
 14051                           wreg	equ	0xFE8
 14052                           indf1	equ	0xFE7
 14053                           postdec1	equ	0xFE5
 14054                           fsr1h	equ	0xFE2
 14055                           fsr1l	equ	0xFE1
 14056                           indf2	equ	0xFDF
 14057                           postinc2	equ	0xFDE
 14058                           postdec2	equ	0xFDD
 14059                           fsr2h	equ	0xFDA
 14060                           fsr2l	equ	0xFD9
 14061                           status	equ	0xFD8
 14062                           
 14063 ;; *************** function i2___awdiv *****************
 14064 ;; Defined at:
 14065 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 14066 ;; Parameters:    Size  Location     Type
 14067 ;;  dividend        2    0[COMRAM] int 
 14068 ;;  divisor         2    2[COMRAM] int 
 14069 ;; Auto vars:     Size  Location     Type
 14070 ;;  __awdiv         2    6[COMRAM] int 
 14071 ;;  __awdiv         1    5[COMRAM] unsigned char 
 14072 ;;  __awdiv         1    4[COMRAM] unsigned char 
 14073 ;; Return value:  Size  Location     Type
 14074 ;;                  2    0[COMRAM] int 
 14075 ;; Registers used:
 14076 ;;		wreg, status,2, status,0
 14077 ;; Tracked objects:
 14078 ;;		On entry : 0/0
 14079 ;;		On exit  : 0/0
 14080 ;;		Unchanged: 0/0
 14081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14083 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14085 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14086 ;;Total ram usage:        8 bytes
 14087 ;; Hardware stack levels used:    1
 14088 ;; This function calls:
 14089 ;;		Nothing
 14090 ;; This function is called by:
 14091 ;;		_update_cooking_time
 14092 ;; This function uses a non-reentrant model
 14093 ;;
 14094                           
 14095                           	psect	text46
 14096  004762                     __ptext46:
 14097                           	opt stack 0
 14098  004762                     i2___awdiv:
 14099                           	opt stack 22
 14100                           
 14101                           ;incstack = 0
 14102  004762  0E00               	movlw	0
 14103  004764  6E06               	movwf	i2___awdiv@sign,c
 14104  004766  AE04               	btfss	i2___awdiv@divisor+1,7,c
 14105  004768  D006               	goto	i2l5265
 14106  00476A  6C03               	negf	i2___awdiv@divisor,c
 14107  00476C  1E04               	comf	i2___awdiv@divisor+1,f,c
 14108  00476E  B0D8               	btfsc	status,0,c
 14109  004770  2A04               	incf	i2___awdiv@divisor+1,f,c
 14110  004772  0E01               	movlw	1
 14111  004774  6E06               	movwf	i2___awdiv@sign,c
 14112  004776                     i2l5265:
 14113  004776  AE02               	btfss	i2___awdiv@dividend+1,7,c
 14114  004778  D006               	goto	i2l5271
 14115  00477A  6C01               	negf	i2___awdiv@dividend,c
 14116  00477C  1E02               	comf	i2___awdiv@dividend+1,f,c
 14117  00477E  B0D8               	btfsc	status,0,c
 14118  004780  2A02               	incf	i2___awdiv@dividend+1,f,c
 14119  004782  0E01               	movlw	1
 14120  004784  1A06               	xorwf	i2___awdiv@sign,f,c
 14121  004786                     i2l5271:
 14122  004786  0E00               	movlw	0
 14123  004788  6E08               	movwf	i2___awdiv@quotient+1,c
 14124  00478A  0E00               	movlw	0
 14125  00478C  6E07               	movwf	i2___awdiv@quotient,c
 14126  00478E  5003               	movf	i2___awdiv@divisor,w,c
 14127  004790  1004               	iorwf	i2___awdiv@divisor+1,w,c
 14128  004792  B4D8               	btfsc	status,2,c
 14129  004794  D01C               	goto	i2l5293
 14130  004796  0E01               	movlw	1
 14131  004798  6E05               	movwf	i2___awdiv@counter,c
 14132  00479A  D004               	goto	i2l5279
 14133  00479C                     i2l5277:
 14134  00479C  90D8               	bcf	status,0,c
 14135  00479E  3603               	rlcf	i2___awdiv@divisor,f,c
 14136  0047A0  3604               	rlcf	i2___awdiv@divisor+1,f,c
 14137  0047A2  2A05               	incf	i2___awdiv@counter,f,c
 14138  0047A4                     i2l5279:
 14139  0047A4  AE04               	btfss	i2___awdiv@divisor+1,7,c
 14140  0047A6  D7FA               	goto	i2l5277
 14141  0047A8                     i2l5281:
 14142  0047A8  90D8               	bcf	status,0,c
 14143  0047AA  3607               	rlcf	i2___awdiv@quotient,f,c
 14144  0047AC  3608               	rlcf	i2___awdiv@quotient+1,f,c
 14145  0047AE  5003               	movf	i2___awdiv@divisor,w,c
 14146  0047B0  5C01               	subwf	i2___awdiv@dividend,w,c
 14147  0047B2  5004               	movf	i2___awdiv@divisor+1,w,c
 14148  0047B4  5802               	subwfb	i2___awdiv@dividend+1,w,c
 14149  0047B6  A0D8               	btfss	status,0,c
 14150  0047B8  D005               	goto	i2l5289
 14151  0047BA  5003               	movf	i2___awdiv@divisor,w,c
 14152  0047BC  5E01               	subwf	i2___awdiv@dividend,f,c
 14153  0047BE  5004               	movf	i2___awdiv@divisor+1,w,c
 14154  0047C0  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 14155  0047C2  8007               	bsf	i2___awdiv@quotient,0,c
 14156  0047C4                     i2l5289:
 14157  0047C4  90D8               	bcf	status,0,c
 14158  0047C6  3204               	rrcf	i2___awdiv@divisor+1,f,c
 14159  0047C8  3203               	rrcf	i2___awdiv@divisor,f,c
 14160  0047CA  2E05               	decfsz	i2___awdiv@counter,f,c
 14161  0047CC  D7ED               	goto	i2l5281
 14162  0047CE                     i2l5293:
 14163  0047CE  5006               	movf	i2___awdiv@sign,w,c
 14164  0047D0  B4D8               	btfsc	status,2,c
 14165  0047D2  D004               	goto	i2l5297
 14166  0047D4  6C07               	negf	i2___awdiv@quotient,c
 14167  0047D6  1E08               	comf	i2___awdiv@quotient+1,f,c
 14168  0047D8  B0D8               	btfsc	status,0,c
 14169  0047DA  2A08               	incf	i2___awdiv@quotient+1,f,c
 14170  0047DC                     i2l5297:
 14171  0047DC  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 14172  0047E0  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 14173  0047E4  0012               	return	
 14174  0047E6                     __end_ofi2___awdiv:
 14175                           	opt stack 0
 14176                           pclatu	equ	0xFFB
 14177                           pclath	equ	0xFFA
 14178                           tblptru	equ	0xFF8
 14179                           tblptrh	equ	0xFF7
 14180                           tblptrl	equ	0xFF6
 14181                           tablat	equ	0xFF5
 14182                           prodh	equ	0xFF4
 14183                           prodl	equ	0xFF3
 14184                           intcon	equ	0xFF2
 14185                           intcon2	equ	0xFF1
 14186                           intcon3	equ	0xFF0
 14187                           postinc0	equ	0xFEE
 14188                           fsr0h	equ	0xFEA
 14189                           fsr0l	equ	0xFE9
 14190                           wreg	equ	0xFE8
 14191                           indf1	equ	0xFE7
 14192                           postdec1	equ	0xFE5
 14193                           fsr1h	equ	0xFE2
 14194                           fsr1l	equ	0xFE1
 14195                           indf2	equ	0xFDF
 14196                           postinc2	equ	0xFDE
 14197                           postdec2	equ	0xFDD
 14198                           fsr2h	equ	0xFDA
 14199                           fsr2l	equ	0xFD9
 14200                           status	equ	0xFD8
 14201                           
 14202 ;; *************** function _modeschange1 *****************
 14203 ;; Defined at:
 14204 ;;		line 297 in file "Main.c"
 14205 ;; Parameters:    Size  Location     Type
 14206 ;;		None
 14207 ;; Auto vars:     Size  Location     Type
 14208 ;;		None
 14209 ;; Return value:  Size  Location     Type
 14210 ;;                  1    wreg      void 
 14211 ;; Registers used:
 14212 ;;		wreg, status,2, status,0
 14213 ;; Tracked objects:
 14214 ;;		On entry : 0/0
 14215 ;;		On exit  : 0/0
 14216 ;;		Unchanged: 0/0
 14217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14222 ;;Total ram usage:        0 bytes
 14223 ;; Hardware stack levels used:    1
 14224 ;; This function calls:
 14225 ;;		Nothing
 14226 ;; This function is called by:
 14227 ;;		_highIsr
 14228 ;; This function uses a non-reentrant model
 14229 ;;
 14230                           
 14231                           	psect	text47
 14232  004454                     __ptext47:
 14233                           	opt stack 0
 14234  004454                     _modeschange1:
 14235                           	opt stack 23
 14236                           
 14237                           ;Main.c: 299: INTCONbits.INT0IF = 0;
 14238                           
 14239                           ;incstack = 0
 14240  004454  92F2               	bcf	intcon,1,c	;volatile
 14241                           
 14242                           ;Main.c: 300: if (modeschange == 0) modeschange = 1;
 14243  004456  0100               	movlb	0	; () banked
 14244  004458  51EE               	movf	_modeschange& (0+255),w,b
 14245  00445A  0100               	movlb	0	; () banked
 14246  00445C  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
 14247  00445E  A4D8               	btfss	status,2,c
 14248  004460  D006               	goto	i2l5467
 14249                           
 14250                           ; BSR set to: 0
 14251  004462  0E00               	movlw	0
 14252  004464  0100               	movlb	0	; () banked
 14253  004466  6FEF               	movwf	(_modeschange+1)& (0+255),b
 14254  004468  0E01               	movlw	1
 14255  00446A  6FEE               	movwf	_modeschange& (0+255),b
 14256  00446C  0012               	return	
 14257  00446E                     i2l5467:
 14258                           
 14259                           ; BSR set to: 0
 14260                           ;Main.c: 301: else if (modeschange == 1) modeschange = 2;
 14261  00446E  0100               	movlb	0	; () banked
 14262  004470  05EE               	decf	_modeschange& (0+255),w,b
 14263  004472  0100               	movlb	0	; () banked
 14264  004474  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
 14265  004476  A4D8               	btfss	status,2,c
 14266  004478  D006               	goto	i2l5471
 14267                           
 14268                           ; BSR set to: 0
 14269  00447A  0E00               	movlw	0
 14270  00447C  0100               	movlb	0	; () banked
 14271  00447E  6FEF               	movwf	(_modeschange+1)& (0+255),b
 14272  004480  0E02               	movlw	2
 14273  004482  6FEE               	movwf	_modeschange& (0+255),b
 14274  004484  0012               	return	
 14275  004486                     i2l5471:
 14276                           
 14277                           ; BSR set to: 0
 14278                           ;Main.c: 302: else if (modeschange == 2) modeschange = 3;
 14279  004486  0E02               	movlw	2
 14280  004488  0100               	movlb	0	; () banked
 14281  00448A  19EE               	xorwf	_modeschange& (0+255),w,b
 14282  00448C  0100               	movlb	0	; () banked
 14283  00448E  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
 14284  004490  A4D8               	btfss	status,2,c
 14285  004492  D006               	goto	i2l5475
 14286                           
 14287                           ; BSR set to: 0
 14288  004494  0E00               	movlw	0
 14289  004496  0100               	movlb	0	; () banked
 14290  004498  6FEF               	movwf	(_modeschange+1)& (0+255),b
 14291  00449A  0E03               	movlw	3
 14292  00449C  6FEE               	movwf	_modeschange& (0+255),b
 14293  00449E  0012               	return	
 14294  0044A0                     i2l5475:
 14295                           
 14296                           ; BSR set to: 0
 14297                           ;Main.c: 303: else if (modeschange == 3) modeschange = 4;
 14298  0044A0  0E03               	movlw	3
 14299  0044A2  0100               	movlb	0	; () banked
 14300  0044A4  19EE               	xorwf	_modeschange& (0+255),w,b
 14301  0044A6  0100               	movlb	0	; () banked
 14302  0044A8  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
 14303  0044AA  A4D8               	btfss	status,2,c
 14304  0044AC  D006               	goto	i2l5479
 14305                           
 14306                           ; BSR set to: 0
 14307  0044AE  0E00               	movlw	0
 14308  0044B0  0100               	movlb	0	; () banked
 14309  0044B2  6FEF               	movwf	(_modeschange+1)& (0+255),b
 14310  0044B4  0E04               	movlw	4
 14311  0044B6  6FEE               	movwf	_modeschange& (0+255),b
 14312  0044B8  0012               	return	
 14313  0044BA                     i2l5479:
 14314                           
 14315                           ; BSR set to: 0
 14316                           ;Main.c: 304: else if (modeschange == 4) modeschange = 5;
 14317  0044BA  0E04               	movlw	4
 14318  0044BC  0100               	movlb	0	; () banked
 14319  0044BE  19EE               	xorwf	_modeschange& (0+255),w,b
 14320  0044C0  0100               	movlb	0	; () banked
 14321  0044C2  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
 14322  0044C4  A4D8               	btfss	status,2,c
 14323  0044C6  D006               	goto	i2l5483
 14324                           
 14325                           ; BSR set to: 0
 14326  0044C8  0E00               	movlw	0
 14327  0044CA  0100               	movlb	0	; () banked
 14328  0044CC  6FEF               	movwf	(_modeschange+1)& (0+255),b
 14329  0044CE  0E05               	movlw	5
 14330  0044D0  6FEE               	movwf	_modeschange& (0+255),b
 14331  0044D2  0012               	return	
 14332  0044D4                     i2l5483:
 14333                           
 14334                           ; BSR set to: 0
 14335                           ;Main.c: 305: else if (modeschange == 5) modeschange = 6;
 14336  0044D4  0E05               	movlw	5
 14337  0044D6  0100               	movlb	0	; () banked
 14338  0044D8  19EE               	xorwf	_modeschange& (0+255),w,b
 14339  0044DA  0100               	movlb	0	; () banked
 14340  0044DC  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
 14341  0044DE  A4D8               	btfss	status,2,c
 14342  0044E0  D006               	goto	i2l5487
 14343                           
 14344                           ; BSR set to: 0
 14345  0044E2  0E00               	movlw	0
 14346  0044E4  0100               	movlb	0	; () banked
 14347  0044E6  6FEF               	movwf	(_modeschange+1)& (0+255),b
 14348  0044E8  0E06               	movlw	6
 14349  0044EA  6FEE               	movwf	_modeschange& (0+255),b
 14350  0044EC  0012               	return	
 14351  0044EE                     i2l5487:
 14352                           
 14353                           ; BSR set to: 0
 14354                           ;Main.c: 306: else if (modeschange == 6) modeschange = 0;
 14355  0044EE  0E06               	movlw	6
 14356  0044F0  0100               	movlb	0	; () banked
 14357  0044F2  19EE               	xorwf	_modeschange& (0+255),w,b
 14358  0044F4  0100               	movlb	0	; () banked
 14359  0044F6  11EF               	iorwf	(_modeschange+1)& (0+255),w,b
 14360  0044F8  A4D8               	btfss	status,2,c
 14361  0044FA  0012               	return	
 14362                           
 14363                           ; BSR set to: 0
 14364  0044FC  0E00               	movlw	0
 14365  0044FE  0100               	movlb	0	; () banked
 14366  004500  6FEF               	movwf	(_modeschange+1)& (0+255),b
 14367  004502  0E00               	movlw	0
 14368  004504  6FEE               	movwf	_modeschange& (0+255),b
 14369                           
 14370                           ; BSR set to: 0
 14371                           
 14372                           ; BSR set to: 0
 14373                           
 14374                           ; BSR set to: 0
 14375                           
 14376                           ; BSR set to: 0
 14377                           
 14378                           ; BSR set to: 0
 14379                           
 14380                           ; BSR set to: 0
 14381  004506  0012               	return	
 14382  004508                     __end_of_modeschange1:
 14383                           	opt stack 0
 14384                           pclatu	equ	0xFFB
 14385                           pclath	equ	0xFFA
 14386                           tblptru	equ	0xFF8
 14387                           tblptrh	equ	0xFF7
 14388                           tblptrl	equ	0xFF6
 14389                           tablat	equ	0xFF5
 14390                           prodh	equ	0xFF4
 14391                           prodl	equ	0xFF3
 14392                           intcon	equ	0xFF2
 14393                           intcon2	equ	0xFF1
 14394                           intcon3	equ	0xFF0
 14395                           postinc0	equ	0xFEE
 14396                           fsr0h	equ	0xFEA
 14397                           fsr0l	equ	0xFE9
 14398                           wreg	equ	0xFE8
 14399                           indf1	equ	0xFE7
 14400                           postdec1	equ	0xFE5
 14401                           fsr1h	equ	0xFE2
 14402                           fsr1l	equ	0xFE1
 14403                           indf2	equ	0xFDF
 14404                           postinc2	equ	0xFDE
 14405                           postdec2	equ	0xFDD
 14406                           fsr2h	equ	0xFDA
 14407                           fsr2l	equ	0xFD9
 14408                           status	equ	0xFD8
 14409                           
 14410 ;; *************** function _Timer3_int *****************
 14411 ;; Defined at:
 14412 ;;		line 421 in file "Main.c"
 14413 ;; Parameters:    Size  Location     Type
 14414 ;;		None
 14415 ;; Auto vars:     Size  Location     Type
 14416 ;;		None
 14417 ;; Return value:  Size  Location     Type
 14418 ;;                  1    wreg      void 
 14419 ;; Registers used:
 14420 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14421 ;; Tracked objects:
 14422 ;;		On entry : 0/0
 14423 ;;		On exit  : 0/0
 14424 ;;		Unchanged: 0/0
 14425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14428 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14429 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14430 ;;Total ram usage:        3 bytes
 14431 ;; Hardware stack levels used:    1
 14432 ;; Hardware stack levels required when called:    2
 14433 ;; This function calls:
 14434 ;;		_reloadTimer3
 14435 ;;		i2___xxtofl
 14436 ;;		i2_delay_ms
 14437 ;;		i2_set_pwm1_percent
 14438 ;; This function is called by:
 14439 ;;		_highIsr
 14440 ;; This function uses a non-reentrant model
 14441 ;;
 14442                           
 14443                           	psect	text48
 14444  0046D4                     __ptext48:
 14445                           	opt stack 0
 14446  0046D4                     _Timer3_int:
 14447                           	opt stack 21
 14448                           
 14449                           ;Main.c: 423: if(timer>=10){
 14450                           
 14451                           ; BSR set to: 0
 14452                           ;incstack = 0
 14453  0046D4  BE5B               	btfsc	_timer+1,7,c
 14454  0046D6  D00B               	goto	i2l5617
 14455  0046D8  505B               	movf	_timer+1,w,c
 14456  0046DA  E104               	bnz	i2u697_40
 14457  0046DC  0E0A               	movlw	10
 14458  0046DE  5C5A               	subwf	_timer,w,c
 14459  0046E0  A0D8               	btfss	status,0,c
 14460  0046E2  D005               	goto	i2l5617
 14461  0046E4                     i2u697_40:
 14462                           
 14463                           ;Main.c: 424: timer=0;
 14464  0046E4  0E00               	movlw	0
 14465  0046E6  6E5B               	movwf	_timer+1,c
 14466  0046E8  0E00               	movlw	0
 14467  0046EA  6E5A               	movwf	_timer,c
 14468                           
 14469                           ;Main.c: 425: }
 14470  0046EC  D025               	goto	i2l5631
 14471  0046EE                     i2l5617:
 14472                           
 14473                           ;Main.c: 426: else if(timer <= (Percent_Heat_Counter) && Percent_Heat_Counter!=0){
 14474  0046EE  505E               	movf	_Percent_Heat_Counter,w,c
 14475  0046F0  6E3D               	movwf	??_Timer3_int& (0+255),c
 14476  0046F2  6A3E               	clrf	(??_Timer3_int+1)& (0+255),c
 14477  0046F4  505A               	movf	_timer,w,c
 14478  0046F6  5C3D               	subwf	??_Timer3_int,w,c
 14479  0046F8  503E               	movf	??_Timer3_int+1,w,c
 14480  0046FA  0A80               	xorlw	128
 14481  0046FC  6E3F               	movwf	(??_Timer3_int+2)& (0+255),c
 14482  0046FE  505B               	movf	_timer+1,w,c
 14483  004700  0A80               	xorlw	128
 14484  004702  583F               	subwfb	(??_Timer3_int+2)& (0+255),w,c
 14485  004704  A0D8               	btfss	status,0,c
 14486  004706  D00E               	goto	i2l273
 14487  004708  505E               	movf	_Percent_Heat_Counter,w,c
 14488  00470A  B4D8               	btfsc	status,2,c
 14489  00470C  D00B               	goto	i2l273
 14490                           
 14491                           ;Main.c: 427: INTCON3bits.INT1IE=1;
 14492  00470E  86F0               	bsf	intcon3,3,c	;volatile
 14493                           
 14494                           ;Main.c: 428: PORTCbits.RC5=1;
 14495  004710  8A82               	bsf	3970,5,c	;volatile
 14496                           
 14497                           ;Main.c: 429: timer++;
 14498  004712  4A5A               	infsnz	_timer,f,c
 14499  004714  2A5B               	incf	_timer+1,f,c
 14500                           
 14501                           ;Main.c: 430: delay_ms(40);
 14502  004716  0E00               	movlw	0
 14503  004718  6E02               	movwf	i2delay_ms@n+1,c
 14504  00471A  0E28               	movlw	40
 14505  00471C  6E01               	movwf	i2delay_ms@n,c
 14506  00471E  EC21  F027         	call	i2_delay_ms	;wreg free
 14507                           
 14508                           ;Main.c: 433: }
 14509  004722  D00A               	goto	i2l5631
 14510  004724                     i2l273:
 14511                           
 14512                           ;Main.c: 434: else{
 14513                           ;Main.c: 435: INTCON3bits.INT1IE=0;
 14514  004724  96F0               	bcf	intcon3,3,c	;volatile
 14515                           
 14516                           ;Main.c: 436: PORTCbits.RC5=0;
 14517  004726  9A82               	bcf	3970,5,c	;volatile
 14518                           
 14519                           ;Main.c: 437: timer++;
 14520  004728  4A5A               	infsnz	_timer,f,c
 14521  00472A  2A5B               	incf	_timer+1,f,c
 14522                           
 14523                           ;Main.c: 438: delay_ms(40);
 14524  00472C  0E00               	movlw	0
 14525  00472E  6E02               	movwf	i2delay_ms@n+1,c
 14526  004730  0E28               	movlw	40
 14527  004732  6E01               	movwf	i2delay_ms@n,c
 14528  004734  EC21  F027         	call	i2_delay_ms	;wreg free
 14529  004738                     i2l5631:
 14530                           
 14531                           ;Main.c: 440: }
 14532                           ;Main.c: 441: set_pwm1_percent(Percent_Heat_Counter);
 14533  004738  505E               	movf	_Percent_Heat_Counter,w,c
 14534  00473A  6E01               	movwf	i2___xxtofl@val,c
 14535  00473C  6A02               	clrf	i2___xxtofl@val+1,c
 14536  00473E  6A03               	clrf	i2___xxtofl@val+2,c
 14537  004740  6A04               	clrf	i2___xxtofl@val+3,c
 14538  004742  0E00               	movlw	0
 14539  004744  ECDE  F01C         	call	i2___xxtofl
 14540  004748  C001  F033         	movff	?i2___xxtofl,i2set_pwm1_percent@value
 14541  00474C  C002  F034         	movff	?i2___xxtofl+1,i2set_pwm1_percent@value+1
 14542  004750  C003  F035         	movff	?i2___xxtofl+2,i2set_pwm1_percent@value+2
 14543  004754  C004  F036         	movff	?i2___xxtofl+3,i2set_pwm1_percent@value+3
 14544  004758  ECCE  F021         	call	i2_set_pwm1_percent	;wreg free
 14545                           
 14546                           ;Main.c: 442: reloadTimer3();
 14547  00475C  EC43  F027         	call	_reloadTimer3	;wreg free
 14548  004760  0012               	return		;funcret
 14549  004762                     __end_of_Timer3_int:
 14550                           	opt stack 0
 14551                           pclatu	equ	0xFFB
 14552                           pclath	equ	0xFFA
 14553                           tblptru	equ	0xFF8
 14554                           tblptrh	equ	0xFF7
 14555                           tblptrl	equ	0xFF6
 14556                           tablat	equ	0xFF5
 14557                           prodh	equ	0xFF4
 14558                           prodl	equ	0xFF3
 14559                           intcon	equ	0xFF2
 14560                           intcon2	equ	0xFF1
 14561                           intcon3	equ	0xFF0
 14562                           postinc0	equ	0xFEE
 14563                           fsr0h	equ	0xFEA
 14564                           fsr0l	equ	0xFE9
 14565                           wreg	equ	0xFE8
 14566                           indf1	equ	0xFE7
 14567                           postdec1	equ	0xFE5
 14568                           fsr1h	equ	0xFE2
 14569                           fsr1l	equ	0xFE1
 14570                           indf2	equ	0xFDF
 14571                           postinc2	equ	0xFDE
 14572                           postdec2	equ	0xFDD
 14573                           fsr2h	equ	0xFDA
 14574                           fsr2l	equ	0xFD9
 14575                           status	equ	0xFD8
 14576                           
 14577 ;; *************** function i2_set_pwm1_percent *****************
 14578 ;; Defined at:
 14579 ;;		line 273 in file "Main.c"
 14580 ;; Parameters:    Size  Location     Type
 14581 ;;  value           4   50[COMRAM] float 
 14582 ;; Auto vars:     Size  Location     Type
 14583 ;;  set_pwm1_per    4   54[COMRAM] float 
 14584 ;;  set_pwm1_per    2   58[COMRAM] int 
 14585 ;; Return value:  Size  Location     Type
 14586 ;;                  1    wreg      void 
 14587 ;; Registers used:
 14588 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14589 ;; Tracked objects:
 14590 ;;		On entry : 0/0
 14591 ;;		On exit  : 0/0
 14592 ;;		Unchanged: 0/0
 14593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14594 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14595 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14597 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14598 ;;Total ram usage:       10 bytes
 14599 ;; Hardware stack levels used:    1
 14600 ;; Hardware stack levels required when called:    1
 14601 ;; This function calls:
 14602 ;;		i2___fladd
 14603 ;;		i2___fldiv
 14604 ;;		i2___flmul
 14605 ;;		i2___fltol
 14606 ;;		i2_set_pwm1_raw
 14607 ;; This function is called by:
 14608 ;;		_Timer3_int
 14609 ;; This function uses a non-reentrant model
 14610 ;;
 14611                           
 14612                           	psect	text49
 14613  00439C                     __ptext49:
 14614                           	opt stack 0
 14615  00439C                     i2_set_pwm1_percent:
 14616                           	opt stack 21
 14617                           
 14618                           ;Main.c: 275: float tmp = value*1023.0/100.0;
 14619                           
 14620                           ;incstack = 0
 14621  00439C  0E00               	movlw	0
 14622  00439E  6E05               	movwf	i2___flmul@a,c
 14623  0043A0  0EC0               	movlw	192
 14624  0043A2  6E06               	movwf	i2___flmul@a+1,c
 14625  0043A4  0E7F               	movlw	127
 14626  0043A6  6E07               	movwf	i2___flmul@a+2,c
 14627  0043A8  0E44               	movlw	68
 14628  0043AA  6E08               	movwf	i2___flmul@a+3,c
 14629  0043AC  C033  F001         	movff	i2set_pwm1_percent@value,i2___flmul@b
 14630  0043B0  C034  F002         	movff	i2set_pwm1_percent@value+1,i2___flmul@b+1
 14631  0043B4  C035  F003         	movff	i2set_pwm1_percent@value+2,i2___flmul@b+2
 14632  0043B8  C036  F004         	movff	i2set_pwm1_percent@value+3,i2___flmul@b+3
 14633  0043BC  ECD5  F012         	call	i2___flmul	;wreg free
 14634  0043C0  C001  F01A         	movff	?i2___flmul,i2___fldiv@b
 14635  0043C4  C002  F01B         	movff	?i2___flmul+1,i2___fldiv@b+1
 14636  0043C8  C003  F01C         	movff	?i2___flmul+2,i2___fldiv@b+2
 14637  0043CC  C004  F01D         	movff	?i2___flmul+3,i2___fldiv@b+3
 14638  0043D0  0E00               	movlw	0
 14639  0043D2  6E1E               	movwf	i2___fldiv@a,c
 14640  0043D4  0E00               	movlw	0
 14641  0043D6  6E1F               	movwf	i2___fldiv@a+1,c
 14642  0043D8  0EC8               	movlw	200
 14643  0043DA  6E20               	movwf	i2___fldiv@a+2,c
 14644  0043DC  0E42               	movlw	66
 14645  0043DE  6E21               	movwf	i2___fldiv@a+3,c
 14646  0043E0  EC96  F017         	call	i2___fldiv	;wreg free
 14647  0043E4  C01A  F037         	movff	?i2___fldiv,i2set_pwm1_percent@tmp
 14648  0043E8  C01B  F038         	movff	?i2___fldiv+1,i2set_pwm1_percent@tmp+1
 14649  0043EC  C01C  F039         	movff	?i2___fldiv+2,i2set_pwm1_percent@tmp+2
 14650  0043F0  C01D  F03A         	movff	?i2___fldiv+3,i2set_pwm1_percent@tmp+3
 14651                           
 14652                           ;Main.c: 276: int raw_val = (int)(tmp +0.5);
 14653  0043F4  0E00               	movlw	0
 14654  0043F6  6E05               	movwf	i2___fladd@a,c
 14655  0043F8  0E00               	movlw	0
 14656  0043FA  6E06               	movwf	i2___fladd@a+1,c
 14657  0043FC  0E00               	movlw	0
 14658  0043FE  6E07               	movwf	i2___fladd@a+2,c
 14659  004400  0E3F               	movlw	63
 14660  004402  6E08               	movwf	i2___fladd@a+3,c
 14661  004404  C037  F001         	movff	i2set_pwm1_percent@tmp,i2___fladd@b
 14662  004408  C038  F002         	movff	i2set_pwm1_percent@tmp+1,i2___fladd@b+1
 14663  00440C  C039  F003         	movff	i2set_pwm1_percent@tmp+2,i2___fladd@b+2
 14664  004410  C03A  F004         	movff	i2set_pwm1_percent@tmp+3,i2___fladd@b+3
 14665  004414  EC7D  F014         	call	i2___fladd	;wreg free
 14666  004418  C001  F015         	movff	?i2___fladd,i2___fltol@f1
 14667  00441C  C002  F016         	movff	?i2___fladd+1,i2___fltol@f1+1
 14668  004420  C003  F017         	movff	?i2___fladd+2,i2___fltol@f1+2
 14669  004424  C004  F018         	movff	?i2___fladd+3,i2___fltol@f1+3
 14670  004428  ECE0  F01F         	call	i2___fltol	;wreg free
 14671  00442C  C015  F03B         	movff	?i2___fltol,i2set_pwm1_percent@raw_val
 14672  004430  C016  F03C         	movff	?i2___fltol+1,i2set_pwm1_percent@raw_val+1
 14673                           
 14674                           ;Main.c: 277: if ( raw_val> 1023) raw_val = 1023;
 14675  004434  BE3C               	btfsc	i2set_pwm1_percent@raw_val+1,7,c
 14676  004436  D007               	goto	i2l5249
 14677  004438  0E04               	movlw	4
 14678  00443A  5C3C               	subwf	i2set_pwm1_percent@raw_val+1,w,c
 14679  00443C  A0D8               	btfss	status,0,c
 14680  00443E  D003               	goto	i2l5249
 14681  004440  0E03               	movlw	3
 14682  004442  6E3C               	movwf	i2set_pwm1_percent@raw_val+1,c
 14683  004444  683B               	setf	i2set_pwm1_percent@raw_val,c
 14684  004446                     i2l5249:
 14685                           
 14686                           ;Main.c: 278: set_pwm1_raw(raw_val);
 14687  004446  C03B  F001         	movff	i2set_pwm1_percent@raw_val,i2set_pwm1_raw@raw_value
 14688  00444A  C03C  F002         	movff	i2set_pwm1_percent@raw_val+1,i2set_pwm1_raw@raw_value+1
 14689  00444E  ECBB  F026         	call	i2_set_pwm1_raw	;wreg free
 14690  004452  0012               	return		;funcret
 14691  004454                     __end_ofi2_set_pwm1_percent:
 14692                           	opt stack 0
 14693                           pclatu	equ	0xFFB
 14694                           pclath	equ	0xFFA
 14695                           tblptru	equ	0xFF8
 14696                           tblptrh	equ	0xFF7
 14697                           tblptrl	equ	0xFF6
 14698                           tablat	equ	0xFF5
 14699                           prodh	equ	0xFF4
 14700                           prodl	equ	0xFF3
 14701                           intcon	equ	0xFF2
 14702                           intcon2	equ	0xFF1
 14703                           intcon3	equ	0xFF0
 14704                           postinc0	equ	0xFEE
 14705                           fsr0h	equ	0xFEA
 14706                           fsr0l	equ	0xFE9
 14707                           wreg	equ	0xFE8
 14708                           indf1	equ	0xFE7
 14709                           postdec1	equ	0xFE5
 14710                           fsr1h	equ	0xFE2
 14711                           fsr1l	equ	0xFE1
 14712                           indf2	equ	0xFDF
 14713                           postinc2	equ	0xFDE
 14714                           postdec2	equ	0xFDD
 14715                           fsr2h	equ	0xFDA
 14716                           fsr2l	equ	0xFD9
 14717                           status	equ	0xFD8
 14718                           
 14719 ;; *************** function i2_set_pwm1_raw *****************
 14720 ;; Defined at:
 14721 ;;		line 267 in file "Main.c"
 14722 ;; Parameters:    Size  Location     Type
 14723 ;;  raw_value       2    0[COMRAM] unsigned int 
 14724 ;; Auto vars:     Size  Location     Type
 14725 ;;		None
 14726 ;; Return value:  Size  Location     Type
 14727 ;;                  1    wreg      void 
 14728 ;; Registers used:
 14729 ;;		wreg, status,2, status,0
 14730 ;; Tracked objects:
 14731 ;;		On entry : 0/0
 14732 ;;		On exit  : 0/0
 14733 ;;		Unchanged: 0/0
 14734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14737 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14738 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14739 ;;Total ram usage:        4 bytes
 14740 ;; Hardware stack levels used:    1
 14741 ;; This function calls:
 14742 ;;		Nothing
 14743 ;; This function is called by:
 14744 ;;		i2_set_pwm1_percent
 14745 ;; This function uses a non-reentrant model
 14746 ;;
 14747                           
 14748                           	psect	text50
 14749  004D76                     __ptext50:
 14750                           	opt stack 0
 14751  004D76                     i2_set_pwm1_raw:
 14752                           	opt stack 21
 14753                           
 14754                           ;Main.c: 269: CCPR1L = (raw_value >> 2) & 0x00FF;
 14755                           
 14756                           ;incstack = 0
 14757  004D76  C001  F003         	movff	i2set_pwm1_raw@raw_value,??i2_set_pwm1_raw
 14758  004D7A  C002  F004         	movff	i2set_pwm1_raw@raw_value+1,??i2_set_pwm1_raw+1
 14759  004D7E  90D8               	bcf	status,0,c
 14760  004D80  3204               	rrcf	??i2_set_pwm1_raw+1,f,c
 14761  004D82  3203               	rrcf	??i2_set_pwm1_raw,f,c
 14762  004D84  90D8               	bcf	status,0,c
 14763  004D86  3204               	rrcf	??i2_set_pwm1_raw+1,f,c
 14764  004D88  3203               	rrcf	??i2_set_pwm1_raw,f,c
 14765  004D8A  5003               	movf	??i2_set_pwm1_raw,w,c
 14766  004D8C  6EBE               	movwf	4030,c	;volatile
 14767                           
 14768                           ;Main.c: 270: CCP1CONbits.DC1B = raw_value & 0x0003;
 14769  004D8E  C001  F003         	movff	i2set_pwm1_raw@raw_value,??i2_set_pwm1_raw
 14770  004D92  0E03               	movlw	3
 14771  004D94  1603               	andwf	??i2_set_pwm1_raw,f,c
 14772  004D96  3A03               	swapf	??i2_set_pwm1_raw,f,c
 14773  004D98  50BD               	movf	4029,w,c	;volatile
 14774  004D9A  1803               	xorwf	??i2_set_pwm1_raw,w,c
 14775  004D9C  0BCF               	andlw	-49
 14776  004D9E  1803               	xorwf	??i2_set_pwm1_raw,w,c
 14777  004DA0  6EBD               	movwf	4029,c	;volatile
 14778  004DA2  0012               	return		;funcret
 14779  004DA4                     __end_ofi2_set_pwm1_raw:
 14780                           	opt stack 0
 14781                           pclatu	equ	0xFFB
 14782                           pclath	equ	0xFFA
 14783                           tblptru	equ	0xFF8
 14784                           tblptrh	equ	0xFF7
 14785                           tblptrl	equ	0xFF6
 14786                           tablat	equ	0xFF5
 14787                           prodh	equ	0xFF4
 14788                           prodl	equ	0xFF3
 14789                           intcon	equ	0xFF2
 14790                           intcon2	equ	0xFF1
 14791                           intcon3	equ	0xFF0
 14792                           postinc0	equ	0xFEE
 14793                           fsr0h	equ	0xFEA
 14794                           fsr0l	equ	0xFE9
 14795                           wreg	equ	0xFE8
 14796                           indf1	equ	0xFE7
 14797                           postdec1	equ	0xFE5
 14798                           fsr1h	equ	0xFE2
 14799                           fsr1l	equ	0xFE1
 14800                           indf2	equ	0xFDF
 14801                           postinc2	equ	0xFDE
 14802                           postdec2	equ	0xFDD
 14803                           fsr2h	equ	0xFDA
 14804                           fsr2l	equ	0xFD9
 14805                           status	equ	0xFD8
 14806                           
 14807 ;; *************** function i2___fltol *****************
 14808 ;; Defined at:
 14809 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
 14810 ;; Parameters:    Size  Location     Type
 14811 ;;  f1              4   20[COMRAM] void 
 14812 ;; Auto vars:     Size  Location     Type
 14813 ;;  __fltol         1   29[COMRAM] unsigned char 
 14814 ;;  __fltol         1   28[COMRAM] unsigned char 
 14815 ;; Return value:  Size  Location     Type
 14816 ;;                  4   20[COMRAM] long 
 14817 ;; Registers used:
 14818 ;;		wreg, status,2, status,0
 14819 ;; Tracked objects:
 14820 ;;		On entry : 0/0
 14821 ;;		On exit  : 0/0
 14822 ;;		Unchanged: 0/0
 14823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14826 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14827 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14828 ;;Total ram usage:       10 bytes
 14829 ;; Hardware stack levels used:    1
 14830 ;; This function calls:
 14831 ;;		Nothing
 14832 ;; This function is called by:
 14833 ;;		i2_set_pwm1_percent
 14834 ;; This function uses a non-reentrant model
 14835 ;;
 14836                           
 14837                           	psect	text51
 14838  003FC0                     __ptext51:
 14839                           	opt stack 0
 14840  003FC0                     i2___fltol:
 14841                           	opt stack 21
 14842                           
 14843                           ;incstack = 0
 14844  003FC0  3417               	rlcf	i2___fltol@f1+2,w,c
 14845  003FC2  3418               	rlcf	i2___fltol@f1+3,w,c
 14846  003FC4  6E1E               	movwf	i2___fltol@exp1,c
 14847  003FC6  501E               	movf	i2___fltol@exp1,w,c
 14848  003FC8  A4D8               	btfss	status,2,c
 14849  003FCA  D009               	goto	i2l4359
 14850  003FCC  0E00               	movlw	0
 14851  003FCE  6E15               	movwf	?i2___fltol,c
 14852  003FD0  0E00               	movlw	0
 14853  003FD2  6E16               	movwf	?i2___fltol+1,c
 14854  003FD4  0E00               	movlw	0
 14855  003FD6  6E17               	movwf	?i2___fltol+2,c
 14856  003FD8  0E00               	movlw	0
 14857  003FDA  6E18               	movwf	?i2___fltol+3,c
 14858  003FDC  0012               	return	
 14859  003FDE                     i2l4359:
 14860  003FDE  C015  F019         	movff	i2___fltol@f1,??i2___fltol
 14861  003FE2  C016  F01A         	movff	i2___fltol@f1+1,??i2___fltol+1
 14862  003FE6  C017  F01B         	movff	i2___fltol@f1+2,??i2___fltol+2
 14863  003FEA  C018  F01C         	movff	i2___fltol@f1+3,??i2___fltol+3
 14864  003FEE  0E20               	movlw	32
 14865  003FF0  D005               	goto	i2u504_40
 14866  003FF2                     i2u504_45:
 14867  003FF2  90D8               	bcf	status,0,c
 14868  003FF4  321C               	rrcf	??i2___fltol+3,f,c
 14869  003FF6  321B               	rrcf	??i2___fltol+2,f,c
 14870  003FF8  321A               	rrcf	??i2___fltol+1,f,c
 14871  003FFA  3219               	rrcf	??i2___fltol,f,c
 14872  003FFC                     i2u504_40:
 14873  003FFC  2EE8               	decfsz	wreg,f,c
 14874  003FFE  D7F9               	goto	i2u504_45
 14875  004000  5019               	movf	??i2___fltol,w,c
 14876  004002  6E1D               	movwf	i2___fltol@sign1,c
 14877  004004  8E17               	bsf	i2___fltol@f1+2,7,c
 14878  004006  0EFF               	movlw	255
 14879  004008  1615               	andwf	i2___fltol@f1,f,c
 14880  00400A  0EFF               	movlw	255
 14881  00400C  1616               	andwf	i2___fltol@f1+1,f,c
 14882  00400E  0EFF               	movlw	255
 14883  004010  1617               	andwf	i2___fltol@f1+2,f,c
 14884  004012  0E00               	movlw	0
 14885  004014  1618               	andwf	i2___fltol@f1+3,f,c
 14886  004016  0E96               	movlw	150
 14887  004018  5E1E               	subwf	i2___fltol@exp1,f,c
 14888  00401A  AE1E               	btfss	i2___fltol@exp1,7,c
 14889  00401C  D016               	goto	i2l4379
 14890  00401E  501E               	movf	i2___fltol@exp1,w,c
 14891  004020  0A80               	xorlw	128
 14892  004022  0F97               	addlw	151
 14893  004024  B0D8               	btfsc	status,0,c
 14894  004026  D009               	goto	i2l4375
 14895  004028  0E00               	movlw	0
 14896  00402A  6E15               	movwf	?i2___fltol,c
 14897  00402C  0E00               	movlw	0
 14898  00402E  6E16               	movwf	?i2___fltol+1,c
 14899  004030  0E00               	movlw	0
 14900  004032  6E17               	movwf	?i2___fltol+2,c
 14901  004034  0E00               	movlw	0
 14902  004036  6E18               	movwf	?i2___fltol+3,c
 14903  004038  0012               	return	
 14904  00403A                     i2l4375:
 14905  00403A  90D8               	bcf	status,0,c
 14906  00403C  3218               	rrcf	i2___fltol@f1+3,f,c
 14907  00403E  3217               	rrcf	i2___fltol@f1+2,f,c
 14908  004040  3216               	rrcf	i2___fltol@f1+1,f,c
 14909  004042  3215               	rrcf	i2___fltol@f1,f,c
 14910  004044  3E1E               	incfsz	i2___fltol@exp1,f,c
 14911  004046  D7F9               	goto	i2l4375
 14912  004048  D015               	goto	i2l4389
 14913  00404A                     i2l4379:
 14914  00404A  0E1F               	movlw	31
 14915  00404C  641E               	cpfsgt	i2___fltol@exp1,c
 14916  00404E  D00F               	goto	i2l4387
 14917  004050  0E00               	movlw	0
 14918  004052  6E15               	movwf	?i2___fltol,c
 14919  004054  0E00               	movlw	0
 14920  004056  6E16               	movwf	?i2___fltol+1,c
 14921  004058  0E00               	movlw	0
 14922  00405A  6E17               	movwf	?i2___fltol+2,c
 14923  00405C  0E00               	movlw	0
 14924  00405E  6E18               	movwf	?i2___fltol+3,c
 14925  004060  0012               	return	
 14926  004062                     i2l4385:
 14927  004062  90D8               	bcf	status,0,c
 14928  004064  3615               	rlcf	i2___fltol@f1,f,c
 14929  004066  3616               	rlcf	i2___fltol@f1+1,f,c
 14930  004068  3617               	rlcf	i2___fltol@f1+2,f,c
 14931  00406A  3618               	rlcf	i2___fltol@f1+3,f,c
 14932  00406C  061E               	decf	i2___fltol@exp1,f,c
 14933  00406E                     i2l4387:
 14934  00406E  501E               	movf	i2___fltol@exp1,w,c
 14935  004070  A4D8               	btfss	status,2,c
 14936  004072  D7F7               	goto	i2l4385
 14937  004074                     i2l4389:
 14938  004074  501D               	movf	i2___fltol@sign1,w,c
 14939  004076  B4D8               	btfsc	status,2,c
 14940  004078  D008               	goto	i2l4393
 14941  00407A  1E18               	comf	i2___fltol@f1+3,f,c
 14942  00407C  1E17               	comf	i2___fltol@f1+2,f,c
 14943  00407E  1E16               	comf	i2___fltol@f1+1,f,c
 14944  004080  6C15               	negf	i2___fltol@f1,c
 14945  004082  0E00               	movlw	0
 14946  004084  2216               	addwfc	i2___fltol@f1+1,f,c
 14947  004086  2217               	addwfc	i2___fltol@f1+2,f,c
 14948  004088  2218               	addwfc	i2___fltol@f1+3,f,c
 14949  00408A                     i2l4393:
 14950  00408A  C015  F015         	movff	i2___fltol@f1,?i2___fltol
 14951  00408E  C016  F016         	movff	i2___fltol@f1+1,?i2___fltol+1
 14952  004092  C017  F017         	movff	i2___fltol@f1+2,?i2___fltol+2
 14953  004096  C018  F018         	movff	i2___fltol@f1+3,?i2___fltol+3
 14954  00409A  0012               	return	
 14955  00409C                     __end_ofi2___fltol:
 14956                           	opt stack 0
 14957                           pclatu	equ	0xFFB
 14958                           pclath	equ	0xFFA
 14959                           tblptru	equ	0xFF8
 14960                           tblptrh	equ	0xFF7
 14961                           tblptrl	equ	0xFF6
 14962                           tablat	equ	0xFF5
 14963                           prodh	equ	0xFF4
 14964                           prodl	equ	0xFF3
 14965                           intcon	equ	0xFF2
 14966                           intcon2	equ	0xFF1
 14967                           intcon3	equ	0xFF0
 14968                           postinc0	equ	0xFEE
 14969                           fsr0h	equ	0xFEA
 14970                           fsr0l	equ	0xFE9
 14971                           wreg	equ	0xFE8
 14972                           indf1	equ	0xFE7
 14973                           postdec1	equ	0xFE5
 14974                           fsr1h	equ	0xFE2
 14975                           fsr1l	equ	0xFE1
 14976                           indf2	equ	0xFDF
 14977                           postinc2	equ	0xFDE
 14978                           postdec2	equ	0xFDD
 14979                           fsr2h	equ	0xFDA
 14980                           fsr2l	equ	0xFD9
 14981                           status	equ	0xFD8
 14982                           
 14983 ;; *************** function i2___flmul *****************
 14984 ;; Defined at:
 14985 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
 14986 ;; Parameters:    Size  Location     Type
 14987 ;;  b               4    0[COMRAM] long 
 14988 ;;  a               4    4[COMRAM] long 
 14989 ;; Auto vars:     Size  Location     Type
 14990 ;;  __flmul         4   19[COMRAM] struct .
 14991 ;;  __flmul         4   13[COMRAM] unsigned long 
 14992 ;;  __flmul         2   23[COMRAM] struct .
 14993 ;;  __flmul         1   18[COMRAM] unsigned char 
 14994 ;;  __flmul         1   17[COMRAM] unsigned char 
 14995 ;;  __flmul         1   12[COMRAM] unsigned char 
 14996 ;; Return value:  Size  Location     Type
 14997 ;;                  4    0[COMRAM] unsigned char 
 14998 ;; Registers used:
 14999 ;;		wreg, status,2, status,0, prodl, prodh
 15000 ;; Tracked objects:
 15001 ;;		On entry : 0/0
 15002 ;;		On exit  : 0/0
 15003 ;;		Unchanged: 0/0
 15004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15005 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15006 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15007 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15008 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15009 ;;Total ram usage:       25 bytes
 15010 ;; Hardware stack levels used:    1
 15011 ;; This function calls:
 15012 ;;		Nothing
 15013 ;; This function is called by:
 15014 ;;		i2_set_pwm1_percent
 15015 ;; This function uses a non-reentrant model
 15016 ;;
 15017                           
 15018                           	psect	text52
 15019  0025AA                     __ptext52:
 15020                           	opt stack 0
 15021  0025AA                     i2___flmul:
 15022                           	opt stack 21
 15023                           
 15024                           ;incstack = 0
 15025  0025AA  5004               	movf	i2___flmul@b+3,w,c
 15026  0025AC  0B80               	andlw	128
 15027  0025AE  6E0D               	movwf	i2___flmul@sign,c
 15028  0025B0  5004               	movf	i2___flmul@b+3,w,c
 15029  0025B2  2404               	addwf	i2___flmul@b+3,w,c
 15030  0025B4  6E13               	movwf	i2___flmul@bexp,c
 15031  0025B6  BE03               	btfsc	i2___flmul@b+2,7,c
 15032  0025B8  8013               	bsf	i2___flmul@bexp,0,c
 15033  0025BA  5013               	movf	i2___flmul@bexp,w,c
 15034  0025BC  B4D8               	btfsc	status,2,c
 15035  0025BE  D00D               	goto	i2l4749
 15036  0025C0  2813               	incf	i2___flmul@bexp,w,c
 15037  0025C2  A4D8               	btfss	status,2,c
 15038  0025C4  D008               	goto	i2l4747
 15039  0025C6  0E00               	movlw	0
 15040  0025C8  6E01               	movwf	i2___flmul@b,c
 15041  0025CA  0E00               	movlw	0
 15042  0025CC  6E02               	movwf	i2___flmul@b+1,c
 15043  0025CE  0E00               	movlw	0
 15044  0025D0  6E03               	movwf	i2___flmul@b+2,c
 15045  0025D2  0E00               	movlw	0
 15046  0025D4  6E04               	movwf	i2___flmul@b+3,c
 15047  0025D6                     i2l4747:
 15048  0025D6  8E03               	bsf	i2___flmul@b+2,7,c
 15049  0025D8  D008               	goto	i2l4751
 15050  0025DA                     i2l4749:
 15051  0025DA  0E00               	movlw	0
 15052  0025DC  6E01               	movwf	i2___flmul@b,c
 15053  0025DE  0E00               	movlw	0
 15054  0025E0  6E02               	movwf	i2___flmul@b+1,c
 15055  0025E2  0E00               	movlw	0
 15056  0025E4  6E03               	movwf	i2___flmul@b+2,c
 15057  0025E6  0E00               	movlw	0
 15058  0025E8  6E04               	movwf	i2___flmul@b+3,c
 15059  0025EA                     i2l4751:
 15060  0025EA  5008               	movf	i2___flmul@a+3,w,c
 15061  0025EC  0B80               	andlw	128
 15062  0025EE  1A0D               	xorwf	i2___flmul@sign,f,c
 15063  0025F0  5008               	movf	i2___flmul@a+3,w,c
 15064  0025F2  2408               	addwf	i2___flmul@a+3,w,c
 15065  0025F4  6E12               	movwf	i2___flmul@aexp,c
 15066  0025F6  BE07               	btfsc	i2___flmul@a+2,7,c
 15067  0025F8  8012               	bsf	i2___flmul@aexp,0,c
 15068  0025FA  5012               	movf	i2___flmul@aexp,w,c
 15069  0025FC  B4D8               	btfsc	status,2,c
 15070  0025FE  D00D               	goto	i2l4767
 15071  002600  2812               	incf	i2___flmul@aexp,w,c
 15072  002602  A4D8               	btfss	status,2,c
 15073  002604  D008               	goto	i2l4765
 15074  002606  0E00               	movlw	0
 15075  002608  6E05               	movwf	i2___flmul@a,c
 15076  00260A  0E00               	movlw	0
 15077  00260C  6E06               	movwf	i2___flmul@a+1,c
 15078  00260E  0E00               	movlw	0
 15079  002610  6E07               	movwf	i2___flmul@a+2,c
 15080  002612  0E00               	movlw	0
 15081  002614  6E08               	movwf	i2___flmul@a+3,c
 15082  002616                     i2l4765:
 15083  002616  8E07               	bsf	i2___flmul@a+2,7,c
 15084  002618  D008               	goto	i2l1075
 15085  00261A                     i2l4767:
 15086  00261A  0E00               	movlw	0
 15087  00261C  6E05               	movwf	i2___flmul@a,c
 15088  00261E  0E00               	movlw	0
 15089  002620  6E06               	movwf	i2___flmul@a+1,c
 15090  002622  0E00               	movlw	0
 15091  002624  6E07               	movwf	i2___flmul@a+2,c
 15092  002626  0E00               	movlw	0
 15093  002628  6E08               	movwf	i2___flmul@a+3,c
 15094  00262A                     i2l1075:
 15095  00262A  5012               	movf	i2___flmul@aexp,w,c
 15096  00262C  B4D8               	btfsc	status,2,c
 15097  00262E  D003               	goto	i2l4771
 15098  002630  5013               	movf	i2___flmul@bexp,w,c
 15099  002632  A4D8               	btfss	status,2,c
 15100  002634  D009               	goto	i2l4775
 15101  002636                     i2l4771:
 15102  002636  0E00               	movlw	0
 15103  002638  6E01               	movwf	?i2___flmul,c
 15104  00263A  0E00               	movlw	0
 15105  00263C  6E02               	movwf	?i2___flmul+1,c
 15106  00263E  0E00               	movlw	0
 15107  002640  6E03               	movwf	?i2___flmul+2,c
 15108  002642  0E00               	movlw	0
 15109  002644  6E04               	movwf	?i2___flmul+3,c
 15110  002646  0012               	return	
 15111  002648                     i2l4775:
 15112  002648  5007               	movf	i2___flmul@a+2,w,c
 15113  00264A  0201               	mulwf	i2___flmul@b,c
 15114  00264C  CFF3 F018          	movff	prodl,i2___flmul@temp
 15115  002650  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 15116  002654  5018               	movf	i2___flmul@temp,w,c
 15117  002656  6E0E               	movwf	i2___flmul@grs,c
 15118  002658  6A0F               	clrf	i2___flmul@grs+1,c
 15119  00265A  6A10               	clrf	i2___flmul@grs+2,c
 15120  00265C  6A11               	clrf	i2___flmul@grs+3,c
 15121  00265E  5019               	movf	i2___flmul@temp+1,w,c
 15122  002660  6E14               	movwf	i2___flmul@prod,c
 15123  002662  6A15               	clrf	i2___flmul@prod+1,c
 15124  002664  6A16               	clrf	i2___flmul@prod+2,c
 15125  002666  6A17               	clrf	i2___flmul@prod+3,c
 15126  002668  5006               	movf	i2___flmul@a+1,w,c
 15127  00266A  0202               	mulwf	i2___flmul@b+1,c
 15128  00266C  CFF3 F018          	movff	prodl,i2___flmul@temp
 15129  002670  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 15130  002674  5018               	movf	i2___flmul@temp,w,c
 15131  002676  260E               	addwf	i2___flmul@grs,f,c
 15132  002678  0E00               	movlw	0
 15133  00267A  220F               	addwfc	i2___flmul@grs+1,f,c
 15134  00267C  2210               	addwfc	i2___flmul@grs+2,f,c
 15135  00267E  2211               	addwfc	i2___flmul@grs+3,f,c
 15136  002680  5019               	movf	i2___flmul@temp+1,w,c
 15137  002682  2614               	addwf	i2___flmul@prod,f,c
 15138  002684  0E00               	movlw	0
 15139  002686  2215               	addwfc	i2___flmul@prod+1,f,c
 15140  002688  2216               	addwfc	i2___flmul@prod+2,f,c
 15141  00268A  2217               	addwfc	i2___flmul@prod+3,f,c
 15142  00268C  5005               	movf	i2___flmul@a,w,c
 15143  00268E  0203               	mulwf	i2___flmul@b+2,c
 15144  002690  CFF3 F018          	movff	prodl,i2___flmul@temp
 15145  002694  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 15146  002698  5018               	movf	i2___flmul@temp,w,c
 15147  00269A  260E               	addwf	i2___flmul@grs,f,c
 15148  00269C  0E00               	movlw	0
 15149  00269E  220F               	addwfc	i2___flmul@grs+1,f,c
 15150  0026A0  2210               	addwfc	i2___flmul@grs+2,f,c
 15151  0026A2  2211               	addwfc	i2___flmul@grs+3,f,c
 15152  0026A4  5019               	movf	i2___flmul@temp+1,w,c
 15153  0026A6  2614               	addwf	i2___flmul@prod,f,c
 15154  0026A8  0E00               	movlw	0
 15155  0026AA  2215               	addwfc	i2___flmul@prod+1,f,c
 15156  0026AC  2216               	addwfc	i2___flmul@prod+2,f,c
 15157  0026AE  2217               	addwfc	i2___flmul@prod+3,f,c
 15158  0026B0  C010  F011         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 15159  0026B4  C00F  F010         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 15160  0026B8  C00E  F00F         	movff	i2___flmul@grs,i2___flmul@grs+1
 15161  0026BC  6A0E               	clrf	i2___flmul@grs,c
 15162  0026BE  5005               	movf	i2___flmul@a,w,c
 15163  0026C0  0202               	mulwf	i2___flmul@b+1,c
 15164  0026C2  CFF3 F018          	movff	prodl,i2___flmul@temp
 15165  0026C6  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 15166  0026CA  5018               	movf	i2___flmul@temp,w,c
 15167  0026CC  260E               	addwf	i2___flmul@grs,f,c
 15168  0026CE  5019               	movf	i2___flmul@temp+1,w,c
 15169  0026D0  220F               	addwfc	i2___flmul@grs+1,f,c
 15170  0026D2  0E00               	movlw	0
 15171  0026D4  2210               	addwfc	i2___flmul@grs+2,f,c
 15172  0026D6  0E00               	movlw	0
 15173  0026D8  2211               	addwfc	i2___flmul@grs+3,f,c
 15174  0026DA  5006               	movf	i2___flmul@a+1,w,c
 15175  0026DC  0201               	mulwf	i2___flmul@b,c
 15176  0026DE  CFF3 F018          	movff	prodl,i2___flmul@temp
 15177  0026E2  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 15178  0026E6  5018               	movf	i2___flmul@temp,w,c
 15179  0026E8  260E               	addwf	i2___flmul@grs,f,c
 15180  0026EA  5019               	movf	i2___flmul@temp+1,w,c
 15181  0026EC  220F               	addwfc	i2___flmul@grs+1,f,c
 15182  0026EE  0E00               	movlw	0
 15183  0026F0  2210               	addwfc	i2___flmul@grs+2,f,c
 15184  0026F2  0E00               	movlw	0
 15185  0026F4  2211               	addwfc	i2___flmul@grs+3,f,c
 15186  0026F6  C010  F011         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 15187  0026FA  C00F  F010         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 15188  0026FE  C00E  F00F         	movff	i2___flmul@grs,i2___flmul@grs+1
 15189  002702  6A0E               	clrf	i2___flmul@grs,c
 15190  002704  5005               	movf	i2___flmul@a,w,c
 15191  002706  0201               	mulwf	i2___flmul@b,c
 15192  002708  CFF3 F018          	movff	prodl,i2___flmul@temp
 15193  00270C  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 15194  002710  5018               	movf	i2___flmul@temp,w,c
 15195  002712  260E               	addwf	i2___flmul@grs,f,c
 15196  002714  5019               	movf	i2___flmul@temp+1,w,c
 15197  002716  220F               	addwfc	i2___flmul@grs+1,f,c
 15198  002718  0E00               	movlw	0
 15199  00271A  2210               	addwfc	i2___flmul@grs+2,f,c
 15200  00271C  0E00               	movlw	0
 15201  00271E  2211               	addwfc	i2___flmul@grs+3,f,c
 15202  002720  5007               	movf	i2___flmul@a+2,w,c
 15203  002722  0202               	mulwf	i2___flmul@b+1,c
 15204  002724  CFF3 F018          	movff	prodl,i2___flmul@temp
 15205  002728  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 15206  00272C  5018               	movf	i2___flmul@temp,w,c
 15207  00272E  2614               	addwf	i2___flmul@prod,f,c
 15208  002730  5019               	movf	i2___flmul@temp+1,w,c
 15209  002732  2215               	addwfc	i2___flmul@prod+1,f,c
 15210  002734  0E00               	movlw	0
 15211  002736  2216               	addwfc	i2___flmul@prod+2,f,c
 15212  002738  0E00               	movlw	0
 15213  00273A  2217               	addwfc	i2___flmul@prod+3,f,c
 15214  00273C  5006               	movf	i2___flmul@a+1,w,c
 15215  00273E  0203               	mulwf	i2___flmul@b+2,c
 15216  002740  CFF3 F018          	movff	prodl,i2___flmul@temp
 15217  002744  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 15218  002748  5018               	movf	i2___flmul@temp,w,c
 15219  00274A  2614               	addwf	i2___flmul@prod,f,c
 15220  00274C  5019               	movf	i2___flmul@temp+1,w,c
 15221  00274E  2215               	addwfc	i2___flmul@prod+1,f,c
 15222  002750  0E00               	movlw	0
 15223  002752  2216               	addwfc	i2___flmul@prod+2,f,c
 15224  002754  0E00               	movlw	0
 15225  002756  2217               	addwfc	i2___flmul@prod+3,f,c
 15226  002758  5007               	movf	i2___flmul@a+2,w,c
 15227  00275A  0203               	mulwf	i2___flmul@b+2,c
 15228  00275C  CFF3 F018          	movff	prodl,i2___flmul@temp
 15229  002760  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 15230  002764  5018               	movf	i2___flmul@temp,w,c
 15231  002766  6E09               	movwf	??i2___flmul& (0+255),c
 15232  002768  5019               	movf	i2___flmul@temp+1,w,c
 15233  00276A  6E0A               	movwf	(??i2___flmul+1)& (0+255),c
 15234  00276C  6A0B               	clrf	(??i2___flmul+2)& (0+255),c
 15235  00276E  6A0C               	clrf	(??i2___flmul+3)& (0+255),c
 15236  002770  C00B  F00C         	movff	??i2___flmul+2,??i2___flmul+3
 15237  002774  C00A  F00B         	movff	??i2___flmul+1,??i2___flmul+2
 15238  002778  C009  F00A         	movff	??i2___flmul,??i2___flmul+1
 15239  00277C  6A09               	clrf	??i2___flmul,c
 15240  00277E  5009               	movf	??i2___flmul,w,c
 15241  002780  2614               	addwf	i2___flmul@prod,f,c
 15242  002782  500A               	movf	??i2___flmul+1,w,c
 15243  002784  2215               	addwfc	i2___flmul@prod+1,f,c
 15244  002786  500B               	movf	??i2___flmul+2,w,c
 15245  002788  2216               	addwfc	i2___flmul@prod+2,f,c
 15246  00278A  500C               	movf	??i2___flmul+3,w,c
 15247  00278C  2217               	addwfc	i2___flmul@prod+3,f,c
 15248  00278E  C00E  F009         	movff	i2___flmul@grs,??i2___flmul
 15249  002792  C00F  F00A         	movff	i2___flmul@grs+1,??i2___flmul+1
 15250  002796  C010  F00B         	movff	i2___flmul@grs+2,??i2___flmul+2
 15251  00279A  C011  F00C         	movff	i2___flmul@grs+3,??i2___flmul+3
 15252  00279E  0E19               	movlw	25
 15253  0027A0  D005               	goto	i2u580_40
 15254  0027A2                     i2u580_45:
 15255  0027A2  90D8               	bcf	status,0,c
 15256  0027A4  320C               	rrcf	??i2___flmul+3,f,c
 15257  0027A6  320B               	rrcf	??i2___flmul+2,f,c
 15258  0027A8  320A               	rrcf	??i2___flmul+1,f,c
 15259  0027AA  3209               	rrcf	??i2___flmul,f,c
 15260  0027AC                     i2u580_40:
 15261  0027AC  2EE8               	decfsz	wreg,f,c
 15262  0027AE  D7F9               	goto	i2u580_45
 15263  0027B0  5009               	movf	??i2___flmul,w,c
 15264  0027B2  2614               	addwf	i2___flmul@prod,f,c
 15265  0027B4  500A               	movf	??i2___flmul+1,w,c
 15266  0027B6  2215               	addwfc	i2___flmul@prod+1,f,c
 15267  0027B8  500B               	movf	??i2___flmul+2,w,c
 15268  0027BA  2216               	addwfc	i2___flmul@prod+2,f,c
 15269  0027BC  500C               	movf	??i2___flmul+3,w,c
 15270  0027BE  2217               	addwfc	i2___flmul@prod+3,f,c
 15271  0027C0  C010  F011         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 15272  0027C4  C00F  F010         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 15273  0027C8  C00E  F00F         	movff	i2___flmul@grs,i2___flmul@grs+1
 15274  0027CC  6A0E               	clrf	i2___flmul@grs,c
 15275  0027CE  5012               	movf	i2___flmul@aexp,w,c
 15276  0027D0  C013  F009         	movff	i2___flmul@bexp,??i2___flmul
 15277  0027D4  6A0A               	clrf	(??i2___flmul+1)& (0+255),c
 15278  0027D6  2609               	addwf	??i2___flmul,f,c
 15279  0027D8  0E00               	movlw	0
 15280  0027DA  220A               	addwfc	??i2___flmul+1,f,c
 15281  0027DC  0E82               	movlw	130
 15282  0027DE  2409               	addwf	??i2___flmul,w,c
 15283  0027E0  6E18               	movwf	i2___flmul@temp,c
 15284  0027E2  0EFF               	movlw	255
 15285  0027E4  200A               	addwfc	??i2___flmul+1,w,c
 15286  0027E6  6E19               	movwf	i2___flmul@temp+1,c
 15287  0027E8  D00F               	goto	i2l4823
 15288  0027EA                     i2l4817:
 15289  0027EA  90D8               	bcf	status,0,c
 15290  0027EC  3614               	rlcf	i2___flmul@prod,f,c
 15291  0027EE  3615               	rlcf	i2___flmul@prod+1,f,c
 15292  0027F0  3616               	rlcf	i2___flmul@prod+2,f,c
 15293  0027F2  3617               	rlcf	i2___flmul@prod+3,f,c
 15294  0027F4  BE11               	btfsc	i2___flmul@grs+3,7,c
 15295  0027F6  8014               	bsf	i2___flmul@prod,0,c
 15296  0027F8  90D8               	bcf	status,0,c
 15297  0027FA  360E               	rlcf	i2___flmul@grs,f,c
 15298  0027FC  360F               	rlcf	i2___flmul@grs+1,f,c
 15299  0027FE  3610               	rlcf	i2___flmul@grs+2,f,c
 15300  002800  3611               	rlcf	i2___flmul@grs+3,f,c
 15301  002802  0618               	decf	i2___flmul@temp,f,c
 15302  002804  A0D8               	btfss	status,0,c
 15303  002806  0619               	decf	i2___flmul@temp+1,f,c
 15304  002808                     i2l4823:
 15305  002808  AE16               	btfss	i2___flmul@prod+2,7,c
 15306  00280A  D7EF               	goto	i2l4817
 15307  00280C  0E00               	movlw	0
 15308  00280E  6E12               	movwf	i2___flmul@aexp,c
 15309  002810  AE11               	btfss	i2___flmul@grs+3,7,c
 15310  002812  D016               	goto	i2l1084
 15311  002814  0EFF               	movlw	255
 15312  002816  140E               	andwf	i2___flmul@grs,w,c
 15313  002818  6E09               	movwf	??i2___flmul& (0+255),c
 15314  00281A  0EFF               	movlw	255
 15315  00281C  140F               	andwf	i2___flmul@grs+1,w,c
 15316  00281E  6E0A               	movwf	(??i2___flmul+1)& (0+255),c
 15317  002820  0EFF               	movlw	255
 15318  002822  1410               	andwf	i2___flmul@grs+2,w,c
 15319  002824  6E0B               	movwf	(??i2___flmul+2)& (0+255),c
 15320  002826  0E7F               	movlw	127
 15321  002828  1411               	andwf	i2___flmul@grs+3,w,c
 15322  00282A  6E0C               	movwf	(??i2___flmul+3)& (0+255),c
 15323  00282C  5009               	movf	??i2___flmul,w,c
 15324  00282E  100A               	iorwf	??i2___flmul+1,w,c
 15325  002830  100B               	iorwf	??i2___flmul+2,w,c
 15326  002832  100C               	iorwf	??i2___flmul+3,w,c
 15327  002834  A4D8               	btfss	status,2,c
 15328  002836  D002               	goto	i2l4833
 15329  002838  A014               	btfss	i2___flmul@prod,0,c
 15330  00283A  D002               	goto	i2l1084
 15331  00283C                     i2l4833:
 15332  00283C  0E01               	movlw	1
 15333  00283E  6E12               	movwf	i2___flmul@aexp,c
 15334  002840                     i2l1084:
 15335  002840  5012               	movf	i2___flmul@aexp,w,c
 15336  002842  B4D8               	btfsc	status,2,c
 15337  002844  D01F               	goto	i2l4843
 15338  002846  0E01               	movlw	1
 15339  002848  2614               	addwf	i2___flmul@prod,f,c
 15340  00284A  0E00               	movlw	0
 15341  00284C  2215               	addwfc	i2___flmul@prod+1,f,c
 15342  00284E  2216               	addwfc	i2___flmul@prod+2,f,c
 15343  002850  2217               	addwfc	i2___flmul@prod+3,f,c
 15344  002852  A017               	btfss	i2___flmul@prod+3,0,c
 15345  002854  D017               	goto	i2l4843
 15346  002856  C014  F009         	movff	i2___flmul@prod,??i2___flmul
 15347  00285A  C015  F00A         	movff	i2___flmul@prod+1,??i2___flmul+1
 15348  00285E  C016  F00B         	movff	i2___flmul@prod+2,??i2___flmul+2
 15349  002862  C017  F00C         	movff	i2___flmul@prod+3,??i2___flmul+3
 15350  002866  340C               	rlcf	??i2___flmul+3,w,c
 15351  002868  320C               	rrcf	??i2___flmul+3,f,c
 15352  00286A  320B               	rrcf	??i2___flmul+2,f,c
 15353  00286C  320A               	rrcf	??i2___flmul+1,f,c
 15354  00286E  3209               	rrcf	??i2___flmul,f,c
 15355  002870  C009  F014         	movff	??i2___flmul,i2___flmul@prod
 15356  002874  C00A  F015         	movff	??i2___flmul+1,i2___flmul@prod+1
 15357  002878  C00B  F016         	movff	??i2___flmul+2,i2___flmul@prod+2
 15358  00287C  C00C  F017         	movff	??i2___flmul+3,i2___flmul@prod+3
 15359  002880  4A18               	infsnz	i2___flmul@temp,f,c
 15360  002882  2A19               	incf	i2___flmul@temp+1,f,c
 15361  002884                     i2l4843:
 15362  002884  BE19               	btfsc	i2___flmul@temp+1,7,c
 15363  002886  D00D               	goto	i2l4847
 15364  002888  5019               	movf	i2___flmul@temp+1,w,c
 15365  00288A  E103               	bnz	i2u588_40
 15366  00288C  2818               	incf	i2___flmul@temp,w,c
 15367  00288E  A0D8               	btfss	status,0,c
 15368  002890  D008               	goto	i2l4847
 15369  002892                     i2u588_40:
 15370  002892  0E00               	movlw	0
 15371  002894  6E14               	movwf	i2___flmul@prod,c
 15372  002896  0E00               	movlw	0
 15373  002898  6E15               	movwf	i2___flmul@prod+1,c
 15374  00289A  0E80               	movlw	128
 15375  00289C  6E16               	movwf	i2___flmul@prod+2,c
 15376  00289E  0E7F               	movlw	127
 15377  0028A0  D020               	goto	L26
 15378  0028A2                     i2l4847:
 15379  0028A2  BE19               	btfsc	i2___flmul@temp+1,7,c
 15380  0028A4  D005               	goto	i2l4849
 15381  0028A6  5019               	movf	i2___flmul@temp+1,w,c
 15382  0028A8  E10E               	bnz	i2l1092
 15383  0028AA  0418               	decf	i2___flmul@temp,w,c
 15384  0028AC  B0D8               	btfsc	status,0,c
 15385  0028AE  D00B               	goto	i2l1092
 15386  0028B0                     i2l4849:
 15387  0028B0  0E00               	movlw	0
 15388  0028B2  6E14               	movwf	i2___flmul@prod,c
 15389  0028B4  0E00               	movlw	0
 15390  0028B6  6E15               	movwf	i2___flmul@prod+1,c
 15391  0028B8  0E00               	movlw	0
 15392  0028BA  6E16               	movwf	i2___flmul@prod+2,c
 15393  0028BC  0E00               	movlw	0
 15394  0028BE  6E17               	movwf	i2___flmul@prod+3,c
 15395  0028C0  0E00               	movlw	0
 15396  0028C2  6E0D               	movwf	i2___flmul@sign,c
 15397  0028C4  D00F               	goto	i2l4859
 15398  0028C6                     i2l1092:
 15399  0028C6  C018  F013         	movff	i2___flmul@temp,i2___flmul@bexp
 15400  0028CA  0EFF               	movlw	255
 15401  0028CC  1614               	andwf	i2___flmul@prod,f,c
 15402  0028CE  0EFF               	movlw	255
 15403  0028D0  1615               	andwf	i2___flmul@prod+1,f,c
 15404  0028D2  0E7F               	movlw	127
 15405  0028D4  1616               	andwf	i2___flmul@prod+2,f,c
 15406  0028D6  0E00               	movlw	0
 15407  0028D8  1617               	andwf	i2___flmul@prod+3,f,c
 15408  0028DA  B013               	btfsc	i2___flmul@bexp,0,c
 15409  0028DC  8E16               	bsf	i2___flmul@prod+2,7,c
 15410  0028DE  90D8               	bcf	status,0,c
 15411  0028E0  3013               	rrcf	i2___flmul@bexp,w,c
 15412  0028E2                     L26:
 15413  0028E2  6E17               	movwf	i2___flmul@prod+3,c
 15414  0028E4                     i2l4859:
 15415  0028E4  500D               	movf	i2___flmul@sign,w,c
 15416  0028E6  1217               	iorwf	i2___flmul@prod+3,f,c
 15417  0028E8  C014  F001         	movff	i2___flmul@prod,?i2___flmul
 15418  0028EC  C015  F002         	movff	i2___flmul@prod+1,?i2___flmul+1
 15419  0028F0  C016  F003         	movff	i2___flmul@prod+2,?i2___flmul+2
 15420  0028F4  C017  F004         	movff	i2___flmul@prod+3,?i2___flmul+3
 15421  0028F8  0012               	return	
 15422  0028FA                     __end_ofi2___flmul:
 15423                           	opt stack 0
 15424                           pclatu	equ	0xFFB
 15425                           pclath	equ	0xFFA
 15426                           tblptru	equ	0xFF8
 15427                           tblptrh	equ	0xFF7
 15428                           tblptrl	equ	0xFF6
 15429                           tablat	equ	0xFF5
 15430                           prodh	equ	0xFF4
 15431                           prodl	equ	0xFF3
 15432                           intcon	equ	0xFF2
 15433                           intcon2	equ	0xFF1
 15434                           intcon3	equ	0xFF0
 15435                           postinc0	equ	0xFEE
 15436                           fsr0h	equ	0xFEA
 15437                           fsr0l	equ	0xFE9
 15438                           wreg	equ	0xFE8
 15439                           indf1	equ	0xFE7
 15440                           postdec1	equ	0xFE5
 15441                           fsr1h	equ	0xFE2
 15442                           fsr1l	equ	0xFE1
 15443                           indf2	equ	0xFDF
 15444                           postinc2	equ	0xFDE
 15445                           postdec2	equ	0xFDD
 15446                           fsr2h	equ	0xFDA
 15447                           fsr2l	equ	0xFD9
 15448                           status	equ	0xFD8
 15449                           
 15450 ;; *************** function i2___fldiv *****************
 15451 ;; Defined at:
 15452 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
 15453 ;; Parameters:    Size  Location     Type
 15454 ;;  b               4   25[COMRAM] unsigned char 
 15455 ;;  a               4   29[COMRAM] unsigned char 
 15456 ;; Auto vars:     Size  Location     Type
 15457 ;;  __fldiv         4   44[COMRAM] unsigned long 
 15458 ;;  __fldiv         4   38[COMRAM] unsigned long 
 15459 ;;  __fldiv         2   42[COMRAM] int 
 15460 ;;  __fldiv         1   49[COMRAM] unsigned char 
 15461 ;;  __fldiv         1   48[COMRAM] unsigned char 
 15462 ;;  __fldiv         1   37[COMRAM] unsigned char 
 15463 ;; Return value:  Size  Location     Type
 15464 ;;                  4   25[COMRAM] unsigned char 
 15465 ;; Registers used:
 15466 ;;		wreg, status,2, status,0
 15467 ;; Tracked objects:
 15468 ;;		On entry : 0/0
 15469 ;;		On exit  : 0/0
 15470 ;;		Unchanged: 0/0
 15471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15472 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15473 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15474 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15475 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15476 ;;Total ram usage:       25 bytes
 15477 ;; Hardware stack levels used:    1
 15478 ;; This function calls:
 15479 ;;		Nothing
 15480 ;; This function is called by:
 15481 ;;		i2_set_pwm1_percent
 15482 ;; This function uses a non-reentrant model
 15483 ;;
 15484                           
 15485                           	psect	text53
 15486  002F2C                     __ptext53:
 15487                           	opt stack 0
 15488  002F2C                     i2___fldiv:
 15489                           	opt stack 21
 15490                           
 15491                           ;incstack = 0
 15492  002F2C  501D               	movf	i2___fldiv@b+3,w,c
 15493  002F2E  0B80               	andlw	128
 15494  002F30  6E26               	movwf	i2___fldiv@sign,c
 15495  002F32  501D               	movf	i2___fldiv@b+3,w,c
 15496  002F34  241D               	addwf	i2___fldiv@b+3,w,c
 15497  002F36  6E31               	movwf	i2___fldiv@bexp,c
 15498  002F38  BE1C               	btfsc	i2___fldiv@b+2,7,c
 15499  002F3A  8031               	bsf	i2___fldiv@bexp,0,c
 15500  002F3C  5031               	movf	i2___fldiv@bexp,w,c
 15501  002F3E  B4D8               	btfsc	status,2,c
 15502  002F40  D00D               	goto	i2l4615
 15503  002F42  2831               	incf	i2___fldiv@bexp,w,c
 15504  002F44  A4D8               	btfss	status,2,c
 15505  002F46  D008               	goto	i2l4611
 15506  002F48  0E00               	movlw	0
 15507  002F4A  6E1A               	movwf	i2___fldiv@b,c
 15508  002F4C  0E00               	movlw	0
 15509  002F4E  6E1B               	movwf	i2___fldiv@b+1,c
 15510  002F50  0E00               	movlw	0
 15511  002F52  6E1C               	movwf	i2___fldiv@b+2,c
 15512  002F54  0E00               	movlw	0
 15513  002F56  6E1D               	movwf	i2___fldiv@b+3,c
 15514  002F58                     i2l4611:
 15515  002F58  8E1C               	bsf	i2___fldiv@b+2,7,c
 15516  002F5A  D006               	goto	L27
 15517  002F5C                     i2l4615:
 15518  002F5C  0E00               	movlw	0
 15519  002F5E  6E1A               	movwf	i2___fldiv@b,c
 15520  002F60  0E00               	movlw	0
 15521  002F62  6E1B               	movwf	i2___fldiv@b+1,c
 15522  002F64  0E00               	movlw	0
 15523  002F66  6E1C               	movwf	i2___fldiv@b+2,c
 15524  002F68                     L27:
 15525  002F68  0E00               	movlw	0
 15526  002F6A  6E1D               	movwf	i2___fldiv@b+3,c
 15527  002F6C  5021               	movf	i2___fldiv@a+3,w,c
 15528  002F6E  0B80               	andlw	128
 15529  002F70  1A26               	xorwf	i2___fldiv@sign,f,c
 15530  002F72  5021               	movf	i2___fldiv@a+3,w,c
 15531  002F74  2421               	addwf	i2___fldiv@a+3,w,c
 15532  002F76  6E32               	movwf	i2___fldiv@aexp,c
 15533  002F78  BE20               	btfsc	i2___fldiv@a+2,7,c
 15534  002F7A  8032               	bsf	i2___fldiv@aexp,0,c
 15535  002F7C  5032               	movf	i2___fldiv@aexp,w,c
 15536  002F7E  B4D8               	btfsc	status,2,c
 15537  002F80  D00D               	goto	i2l4635
 15538  002F82  2832               	incf	i2___fldiv@aexp,w,c
 15539  002F84  A4D8               	btfss	status,2,c
 15540  002F86  D008               	goto	i2l4631
 15541  002F88  0E00               	movlw	0
 15542  002F8A  6E1E               	movwf	i2___fldiv@a,c
 15543  002F8C  0E00               	movlw	0
 15544  002F8E  6E1F               	movwf	i2___fldiv@a+1,c
 15545  002F90  0E00               	movlw	0
 15546  002F92  6E20               	movwf	i2___fldiv@a+2,c
 15547  002F94  0E00               	movlw	0
 15548  002F96  6E21               	movwf	i2___fldiv@a+3,c
 15549  002F98                     i2l4631:
 15550  002F98  8E20               	bsf	i2___fldiv@a+2,7,c
 15551  002F9A  D006               	goto	L28
 15552  002F9C                     i2l4635:
 15553  002F9C  0E00               	movlw	0
 15554  002F9E  6E1E               	movwf	i2___fldiv@a,c
 15555  002FA0  0E00               	movlw	0
 15556  002FA2  6E1F               	movwf	i2___fldiv@a+1,c
 15557  002FA4  0E00               	movlw	0
 15558  002FA6  6E20               	movwf	i2___fldiv@a+2,c
 15559  002FA8                     L28:
 15560  002FA8  0E00               	movlw	0
 15561  002FAA  6E21               	movwf	i2___fldiv@a+3,c
 15562  002FAC  501E               	movf	i2___fldiv@a,w,c
 15563  002FAE  101F               	iorwf	i2___fldiv@a+1,w,c
 15564  002FB0  1020               	iorwf	i2___fldiv@a+2,w,c
 15565  002FB2  1021               	iorwf	i2___fldiv@a+3,w,c
 15566  002FB4  A4D8               	btfss	status,2,c
 15567  002FB6  D015               	goto	i2l4647
 15568  002FB8  0E00               	movlw	0
 15569  002FBA  6E1A               	movwf	i2___fldiv@b,c
 15570  002FBC  0E00               	movlw	0
 15571  002FBE  6E1B               	movwf	i2___fldiv@b+1,c
 15572  002FC0  0E00               	movlw	0
 15573  002FC2  6E1C               	movwf	i2___fldiv@b+2,c
 15574  002FC4  0E00               	movlw	0
 15575  002FC6  6E1D               	movwf	i2___fldiv@b+3,c
 15576  002FC8  0E80               	movlw	128
 15577  002FCA  121C               	iorwf	i2___fldiv@b+2,f,c
 15578  002FCC  0E7F               	movlw	127
 15579  002FCE  121D               	iorwf	i2___fldiv@b+3,f,c
 15580  002FD0  C01A  F01A         	movff	i2___fldiv@b,?i2___fldiv
 15581  002FD4  C01B  F01B         	movff	i2___fldiv@b+1,?i2___fldiv+1
 15582  002FD8  C01C  F01C         	movff	i2___fldiv@b+2,?i2___fldiv+2
 15583  002FDC  C01D  F01D         	movff	i2___fldiv@b+3,?i2___fldiv+3
 15584  002FE0  0012               	return	
 15585  002FE2                     i2l4647:
 15586  002FE2  5031               	movf	i2___fldiv@bexp,w,c
 15587  002FE4  A4D8               	btfss	status,2,c
 15588  002FE6  D011               	goto	i2l4655
 15589  002FE8  0E00               	movlw	0
 15590  002FEA  6E1A               	movwf	i2___fldiv@b,c
 15591  002FEC  0E00               	movlw	0
 15592  002FEE  6E1B               	movwf	i2___fldiv@b+1,c
 15593  002FF0  0E00               	movlw	0
 15594  002FF2  6E1C               	movwf	i2___fldiv@b+2,c
 15595  002FF4  0E00               	movlw	0
 15596  002FF6  6E1D               	movwf	i2___fldiv@b+3,c
 15597  002FF8  C01A  F01A         	movff	i2___fldiv@b,?i2___fldiv
 15598  002FFC  C01B  F01B         	movff	i2___fldiv@b+1,?i2___fldiv+1
 15599  003000  C01C  F01C         	movff	i2___fldiv@b+2,?i2___fldiv+2
 15600  003004  C01D  F01D         	movff	i2___fldiv@b+3,?i2___fldiv+3
 15601  003008  0012               	return	
 15602  00300A                     i2l4655:
 15603  00300A  5032               	movf	i2___fldiv@aexp,w,c
 15604  00300C  6E22               	movwf	??i2___fldiv& (0+255),c
 15605  00300E  6A23               	clrf	(??i2___fldiv+1)& (0+255),c
 15606  003010  1E22               	comf	??i2___fldiv,f,c
 15607  003012  1E23               	comf	??i2___fldiv+1,f,c
 15608  003014  4A22               	infsnz	??i2___fldiv,f,c
 15609  003016  2A23               	incf	??i2___fldiv+1,f,c
 15610  003018  5031               	movf	i2___fldiv@bexp,w,c
 15611  00301A  6E24               	movwf	(??i2___fldiv+2)& (0+255),c
 15612  00301C  6A25               	clrf	(??i2___fldiv+3)& (0+255),c
 15613  00301E  5022               	movf	??i2___fldiv,w,c
 15614  003020  2624               	addwf	??i2___fldiv+2,f,c
 15615  003022  5023               	movf	??i2___fldiv+1,w,c
 15616  003024  2225               	addwfc	??i2___fldiv+3,f,c
 15617  003026  0E7F               	movlw	127
 15618  003028  2424               	addwf	??i2___fldiv+2,w,c
 15619  00302A  6E2B               	movwf	i2___fldiv@new_exp,c
 15620  00302C  0E00               	movlw	0
 15621  00302E  2025               	addwfc	??i2___fldiv+3,w,c
 15622  003030  6E2C               	movwf	i2___fldiv@new_exp+1,c
 15623  003032  C01A  F027         	movff	i2___fldiv@b,i2___fldiv@rem
 15624  003036  C01B  F028         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 15625  00303A  C01C  F029         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 15626  00303E  C01D  F02A         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 15627  003042  0E00               	movlw	0
 15628  003044  6E1A               	movwf	i2___fldiv@b,c
 15629  003046  0E00               	movlw	0
 15630  003048  6E1B               	movwf	i2___fldiv@b+1,c
 15631  00304A  0E00               	movlw	0
 15632  00304C  6E1C               	movwf	i2___fldiv@b+2,c
 15633  00304E  0E00               	movlw	0
 15634  003050  6E1D               	movwf	i2___fldiv@b+3,c
 15635  003052  0E00               	movlw	0
 15636  003054  6E2D               	movwf	i2___fldiv@grs,c
 15637  003056  0E00               	movlw	0
 15638  003058  6E2E               	movwf	i2___fldiv@grs+1,c
 15639  00305A  0E00               	movlw	0
 15640  00305C  6E2F               	movwf	i2___fldiv@grs+2,c
 15641  00305E  0E00               	movlw	0
 15642  003060  6E30               	movwf	i2___fldiv@grs+3,c
 15643  003062  0E00               	movlw	0
 15644  003064  6E32               	movwf	i2___fldiv@aexp,c
 15645  003066  D028               	goto	i2l1045
 15646  003068                     i2l4665:
 15647  003068  5032               	movf	i2___fldiv@aexp,w,c
 15648  00306A  B4D8               	btfsc	status,2,c
 15649  00306C  D011               	goto	i2l4673
 15650  00306E  90D8               	bcf	status,0,c
 15651  003070  3627               	rlcf	i2___fldiv@rem,f,c
 15652  003072  3628               	rlcf	i2___fldiv@rem+1,f,c
 15653  003074  3629               	rlcf	i2___fldiv@rem+2,f,c
 15654  003076  362A               	rlcf	i2___fldiv@rem+3,f,c
 15655  003078  90D8               	bcf	status,0,c
 15656  00307A  361A               	rlcf	i2___fldiv@b,f,c
 15657  00307C  361B               	rlcf	i2___fldiv@b+1,f,c
 15658  00307E  361C               	rlcf	i2___fldiv@b+2,f,c
 15659  003080  361D               	rlcf	i2___fldiv@b+3,f,c
 15660  003082  BE30               	btfsc	i2___fldiv@grs+3,7,c
 15661  003084  801A               	bsf	i2___fldiv@b,0,c
 15662  003086  90D8               	bcf	status,0,c
 15663  003088  362D               	rlcf	i2___fldiv@grs,f,c
 15664  00308A  362E               	rlcf	i2___fldiv@grs+1,f,c
 15665  00308C  362F               	rlcf	i2___fldiv@grs+2,f,c
 15666  00308E  3630               	rlcf	i2___fldiv@grs+3,f,c
 15667  003090                     i2l4673:
 15668  003090  501E               	movf	i2___fldiv@a,w,c
 15669  003092  5C27               	subwf	i2___fldiv@rem,w,c
 15670  003094  501F               	movf	i2___fldiv@a+1,w,c
 15671  003096  5828               	subwfb	i2___fldiv@rem+1,w,c
 15672  003098  5020               	movf	i2___fldiv@a+2,w,c
 15673  00309A  5829               	subwfb	i2___fldiv@rem+2,w,c
 15674  00309C  5021               	movf	i2___fldiv@a+3,w,c
 15675  00309E  582A               	subwfb	i2___fldiv@rem+3,w,c
 15676  0030A0  A0D8               	btfss	status,0,c
 15677  0030A2  D009               	goto	i2l4679
 15678  0030A4  8C30               	bsf	i2___fldiv@grs+3,6,c
 15679  0030A6  501E               	movf	i2___fldiv@a,w,c
 15680  0030A8  5E27               	subwf	i2___fldiv@rem,f,c
 15681  0030AA  501F               	movf	i2___fldiv@a+1,w,c
 15682  0030AC  5A28               	subwfb	i2___fldiv@rem+1,f,c
 15683  0030AE  5020               	movf	i2___fldiv@a+2,w,c
 15684  0030B0  5A29               	subwfb	i2___fldiv@rem+2,f,c
 15685  0030B2  5021               	movf	i2___fldiv@a+3,w,c
 15686  0030B4  5A2A               	subwfb	i2___fldiv@rem+3,f,c
 15687  0030B6                     i2l4679:
 15688  0030B6  2A32               	incf	i2___fldiv@aexp,f,c
 15689  0030B8                     i2l1045:
 15690  0030B8  0E19               	movlw	25
 15691  0030BA  6432               	cpfsgt	i2___fldiv@aexp,c
 15692  0030BC  D7D5               	goto	i2l4665
 15693  0030BE  5027               	movf	i2___fldiv@rem,w,c
 15694  0030C0  1028               	iorwf	i2___fldiv@rem+1,w,c
 15695  0030C2  1029               	iorwf	i2___fldiv@rem+2,w,c
 15696  0030C4  102A               	iorwf	i2___fldiv@rem+3,w,c
 15697  0030C6  B4D8               	btfsc	status,2,c
 15698  0030C8  D011               	goto	i2l4691
 15699  0030CA  802D               	bsf	i2___fldiv@grs,0,c
 15700  0030CC  D00F               	goto	i2l4691
 15701  0030CE                     i2l4685:
 15702  0030CE  90D8               	bcf	status,0,c
 15703  0030D0  361A               	rlcf	i2___fldiv@b,f,c
 15704  0030D2  361B               	rlcf	i2___fldiv@b+1,f,c
 15705  0030D4  361C               	rlcf	i2___fldiv@b+2,f,c
 15706  0030D6  361D               	rlcf	i2___fldiv@b+3,f,c
 15707  0030D8  BE30               	btfsc	i2___fldiv@grs+3,7,c
 15708  0030DA  801A               	bsf	i2___fldiv@b,0,c
 15709  0030DC  90D8               	bcf	status,0,c
 15710  0030DE  362D               	rlcf	i2___fldiv@grs,f,c
 15711  0030E0  362E               	rlcf	i2___fldiv@grs+1,f,c
 15712  0030E2  362F               	rlcf	i2___fldiv@grs+2,f,c
 15713  0030E4  3630               	rlcf	i2___fldiv@grs+3,f,c
 15714  0030E6  062B               	decf	i2___fldiv@new_exp,f,c
 15715  0030E8  A0D8               	btfss	status,0,c
 15716  0030EA  062C               	decf	i2___fldiv@new_exp+1,f,c
 15717  0030EC                     i2l4691:
 15718  0030EC  AE1C               	btfss	i2___fldiv@b+2,7,c
 15719  0030EE  D7EF               	goto	i2l4685
 15720  0030F0  0E00               	movlw	0
 15721  0030F2  6E32               	movwf	i2___fldiv@aexp,c
 15722  0030F4  AE30               	btfss	i2___fldiv@grs+3,7,c
 15723  0030F6  D016               	goto	i2l1056
 15724  0030F8  0EFF               	movlw	255
 15725  0030FA  142D               	andwf	i2___fldiv@grs,w,c
 15726  0030FC  6E22               	movwf	??i2___fldiv& (0+255),c
 15727  0030FE  0EFF               	movlw	255
 15728  003100  142E               	andwf	i2___fldiv@grs+1,w,c
 15729  003102  6E23               	movwf	(??i2___fldiv+1)& (0+255),c
 15730  003104  0EFF               	movlw	255
 15731  003106  142F               	andwf	i2___fldiv@grs+2,w,c
 15732  003108  6E24               	movwf	(??i2___fldiv+2)& (0+255),c
 15733  00310A  0E7F               	movlw	127
 15734  00310C  1430               	andwf	i2___fldiv@grs+3,w,c
 15735  00310E  6E25               	movwf	(??i2___fldiv+3)& (0+255),c
 15736  003110  5022               	movf	??i2___fldiv,w,c
 15737  003112  1023               	iorwf	??i2___fldiv+1,w,c
 15738  003114  1024               	iorwf	??i2___fldiv+2,w,c
 15739  003116  1025               	iorwf	??i2___fldiv+3,w,c
 15740  003118  A4D8               	btfss	status,2,c
 15741  00311A  D002               	goto	i2l4701
 15742  00311C  A01A               	btfss	i2___fldiv@b,0,c
 15743  00311E  D002               	goto	i2l1056
 15744  003120                     i2l4701:
 15745  003120  0E01               	movlw	1
 15746  003122  6E32               	movwf	i2___fldiv@aexp,c
 15747  003124                     i2l1056:
 15748  003124  5032               	movf	i2___fldiv@aexp,w,c
 15749  003126  B4D8               	btfsc	status,2,c
 15750  003128  D01F               	goto	i2l4711
 15751  00312A  0E01               	movlw	1
 15752  00312C  261A               	addwf	i2___fldiv@b,f,c
 15753  00312E  0E00               	movlw	0
 15754  003130  221B               	addwfc	i2___fldiv@b+1,f,c
 15755  003132  221C               	addwfc	i2___fldiv@b+2,f,c
 15756  003134  221D               	addwfc	i2___fldiv@b+3,f,c
 15757  003136  A01D               	btfss	i2___fldiv@b+3,0,c
 15758  003138  D017               	goto	i2l4711
 15759  00313A  C01A  F022         	movff	i2___fldiv@b,??i2___fldiv
 15760  00313E  C01B  F023         	movff	i2___fldiv@b+1,??i2___fldiv+1
 15761  003142  C01C  F024         	movff	i2___fldiv@b+2,??i2___fldiv+2
 15762  003146  C01D  F025         	movff	i2___fldiv@b+3,??i2___fldiv+3
 15763  00314A  3425               	rlcf	??i2___fldiv+3,w,c
 15764  00314C  3225               	rrcf	??i2___fldiv+3,f,c
 15765  00314E  3224               	rrcf	??i2___fldiv+2,f,c
 15766  003150  3223               	rrcf	??i2___fldiv+1,f,c
 15767  003152  3222               	rrcf	??i2___fldiv,f,c
 15768  003154  C022  F01A         	movff	??i2___fldiv,i2___fldiv@b
 15769  003158  C023  F01B         	movff	??i2___fldiv+1,i2___fldiv@b+1
 15770  00315C  C024  F01C         	movff	??i2___fldiv+2,i2___fldiv@b+2
 15771  003160  C025  F01D         	movff	??i2___fldiv+3,i2___fldiv@b+3
 15772  003164  4A2B               	infsnz	i2___fldiv@new_exp,f,c
 15773  003166  2A2C               	incf	i2___fldiv@new_exp+1,f,c
 15774  003168                     i2l4711:
 15775  003168  BE2C               	btfsc	i2___fldiv@new_exp+1,7,c
 15776  00316A  D010               	goto	i2l4715
 15777  00316C  502C               	movf	i2___fldiv@new_exp+1,w,c
 15778  00316E  E103               	bnz	i2u569_40
 15779  003170  282B               	incf	i2___fldiv@new_exp,w,c
 15780  003172  A0D8               	btfss	status,0,c
 15781  003174  D00B               	goto	i2l4715
 15782  003176                     i2u569_40:
 15783  003176  0E00               	movlw	0
 15784  003178  6E2C               	movwf	i2___fldiv@new_exp+1,c
 15785  00317A  682B               	setf	i2___fldiv@new_exp,c
 15786  00317C  0E00               	movlw	0
 15787  00317E  6E1A               	movwf	i2___fldiv@b,c
 15788  003180  0E00               	movlw	0
 15789  003182  6E1B               	movwf	i2___fldiv@b+1,c
 15790  003184  0E00               	movlw	0
 15791  003186  6E1C               	movwf	i2___fldiv@b+2,c
 15792  003188  0E00               	movlw	0
 15793  00318A  6E1D               	movwf	i2___fldiv@b+3,c
 15794  00318C                     i2l4715:
 15795  00318C  BE2C               	btfsc	i2___fldiv@new_exp+1,7,c
 15796  00318E  D005               	goto	i2l4717
 15797  003190  502C               	movf	i2___fldiv@new_exp+1,w,c
 15798  003192  E111               	bnz	i2l4719
 15799  003194  042B               	decf	i2___fldiv@new_exp,w,c
 15800  003196  B0D8               	btfsc	status,0,c
 15801  003198  D00E               	goto	i2l4719
 15802  00319A                     i2l4717:
 15803  00319A  0E00               	movlw	0
 15804  00319C  6E2C               	movwf	i2___fldiv@new_exp+1,c
 15805  00319E  0E00               	movlw	0
 15806  0031A0  6E2B               	movwf	i2___fldiv@new_exp,c
 15807  0031A2  0E00               	movlw	0
 15808  0031A4  6E1A               	movwf	i2___fldiv@b,c
 15809  0031A6  0E00               	movlw	0
 15810  0031A8  6E1B               	movwf	i2___fldiv@b+1,c
 15811  0031AA  0E00               	movlw	0
 15812  0031AC  6E1C               	movwf	i2___fldiv@b+2,c
 15813  0031AE  0E00               	movlw	0
 15814  0031B0  6E1D               	movwf	i2___fldiv@b+3,c
 15815  0031B2  0E00               	movlw	0
 15816  0031B4  6E26               	movwf	i2___fldiv@sign,c
 15817  0031B6                     i2l4719:
 15818  0031B6  C02B  F031         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 15819  0031BA  A031               	btfss	i2___fldiv@bexp,0,c
 15820  0031BC  D002               	goto	i2l4725
 15821  0031BE  8E1C               	bsf	i2___fldiv@b+2,7,c
 15822  0031C0  D001               	goto	i2l4727
 15823  0031C2                     i2l4725:
 15824  0031C2  9E1C               	bcf	i2___fldiv@b+2,7,c
 15825  0031C4                     i2l4727:
 15826  0031C4  90D8               	bcf	status,0,c
 15827  0031C6  3031               	rrcf	i2___fldiv@bexp,w,c
 15828  0031C8  6E1D               	movwf	i2___fldiv@b+3,c
 15829  0031CA  5026               	movf	i2___fldiv@sign,w,c
 15830  0031CC  121D               	iorwf	i2___fldiv@b+3,f,c
 15831  0031CE  C01A  F01A         	movff	i2___fldiv@b,?i2___fldiv
 15832  0031D2  C01B  F01B         	movff	i2___fldiv@b+1,?i2___fldiv+1
 15833  0031D6  C01C  F01C         	movff	i2___fldiv@b+2,?i2___fldiv+2
 15834  0031DA  C01D  F01D         	movff	i2___fldiv@b+3,?i2___fldiv+3
 15835  0031DE  0012               	return	
 15836  0031E0                     __end_ofi2___fldiv:
 15837                           	opt stack 0
 15838                           pclatu	equ	0xFFB
 15839                           pclath	equ	0xFFA
 15840                           tblptru	equ	0xFF8
 15841                           tblptrh	equ	0xFF7
 15842                           tblptrl	equ	0xFF6
 15843                           tablat	equ	0xFF5
 15844                           prodh	equ	0xFF4
 15845                           prodl	equ	0xFF3
 15846                           intcon	equ	0xFF2
 15847                           intcon2	equ	0xFF1
 15848                           intcon3	equ	0xFF0
 15849                           postinc0	equ	0xFEE
 15850                           fsr0h	equ	0xFEA
 15851                           fsr0l	equ	0xFE9
 15852                           wreg	equ	0xFE8
 15853                           indf1	equ	0xFE7
 15854                           postdec1	equ	0xFE5
 15855                           fsr1h	equ	0xFE2
 15856                           fsr1l	equ	0xFE1
 15857                           indf2	equ	0xFDF
 15858                           postinc2	equ	0xFDE
 15859                           postdec2	equ	0xFDD
 15860                           fsr2h	equ	0xFDA
 15861                           fsr2l	equ	0xFD9
 15862                           status	equ	0xFD8
 15863                           
 15864 ;; *************** function i2___fladd *****************
 15865 ;; Defined at:
 15866 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
 15867 ;; Parameters:    Size  Location     Type
 15868 ;;  b               4    0[COMRAM] unsigned char 
 15869 ;;  a               4    4[COMRAM] unsigned char 
 15870 ;; Auto vars:     Size  Location     Type
 15871 ;;  __fladd         1   19[COMRAM] unsigned char 
 15872 ;;  __fladd         1   18[COMRAM] unsigned char 
 15873 ;;  __fladd         1   17[COMRAM] unsigned char 
 15874 ;;  __fladd         1   16[COMRAM] unsigned char 
 15875 ;; Return value:  Size  Location     Type
 15876 ;;                  4    0[COMRAM] unsigned char 
 15877 ;; Registers used:
 15878 ;;		wreg, status,2, status,0
 15879 ;; Tracked objects:
 15880 ;;		On entry : 0/0
 15881 ;;		On exit  : 0/0
 15882 ;;		Unchanged: 0/0
 15883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15884 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15885 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15886 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15887 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15888 ;;Total ram usage:       20 bytes
 15889 ;; Hardware stack levels used:    1
 15890 ;; This function calls:
 15891 ;;		Nothing
 15892 ;; This function is called by:
 15893 ;;		i2_set_pwm1_percent
 15894 ;; This function uses a non-reentrant model
 15895 ;;
 15896                           
 15897                           	psect	text54
 15898  0028FA                     __ptext54:
 15899                           	opt stack 0
 15900  0028FA                     i2___fladd:
 15901                           	opt stack 21
 15902                           
 15903                           ;incstack = 0
 15904  0028FA  5004               	movf	i2___fladd@b+3,w,c
 15905  0028FC  0B80               	andlw	128
 15906  0028FE  6E11               	movwf	i2___fladd@signs,c
 15907  002900  5004               	movf	i2___fladd@b+3,w,c
 15908  002902  2404               	addwf	i2___fladd@b+3,w,c
 15909  002904  6E13               	movwf	i2___fladd@bexp,c
 15910  002906  BE03               	btfsc	i2___fladd@b+2,7,c
 15911  002908  8013               	bsf	i2___fladd@bexp,0,c
 15912  00290A  5013               	movf	i2___fladd@bexp,w,c
 15913  00290C  B4D8               	btfsc	status,2,c
 15914  00290E  D00D               	goto	i2l4413
 15915  002910  2813               	incf	i2___fladd@bexp,w,c
 15916  002912  A4D8               	btfss	status,2,c
 15917  002914  D008               	goto	i2l4409
 15918  002916  0E00               	movlw	0
 15919  002918  6E01               	movwf	i2___fladd@b,c
 15920  00291A  0E00               	movlw	0
 15921  00291C  6E02               	movwf	i2___fladd@b+1,c
 15922  00291E  0E00               	movlw	0
 15923  002920  6E03               	movwf	i2___fladd@b+2,c
 15924  002922  0E00               	movlw	0
 15925  002924  6E04               	movwf	i2___fladd@b+3,c
 15926  002926                     i2l4409:
 15927  002926  8E03               	bsf	i2___fladd@b+2,7,c
 15928  002928  D006               	goto	L29
 15929  00292A                     i2l4413:
 15930  00292A  0E00               	movlw	0
 15931  00292C  6E01               	movwf	i2___fladd@b,c
 15932  00292E  0E00               	movlw	0
 15933  002930  6E02               	movwf	i2___fladd@b+1,c
 15934  002932  0E00               	movlw	0
 15935  002934  6E03               	movwf	i2___fladd@b+2,c
 15936  002936                     L29:
 15937  002936  0E00               	movlw	0
 15938  002938  6E04               	movwf	i2___fladd@b+3,c
 15939  00293A  5008               	movf	i2___fladd@a+3,w,c
 15940  00293C  0B80               	andlw	128
 15941  00293E  6E12               	movwf	i2___fladd@aexp,c
 15942  002940  5011               	movf	i2___fladd@signs,w,c
 15943  002942  1812               	xorwf	i2___fladd@aexp,w,c
 15944  002944  A4D8               	btfss	status,2,c
 15945  002946  8C11               	bsf	i2___fladd@signs,6,c
 15946  002948  5008               	movf	i2___fladd@a+3,w,c
 15947  00294A  2408               	addwf	i2___fladd@a+3,w,c
 15948  00294C  6E12               	movwf	i2___fladd@aexp,c
 15949  00294E  BE07               	btfsc	i2___fladd@a+2,7,c
 15950  002950  8012               	bsf	i2___fladd@aexp,0,c
 15951  002952  5012               	movf	i2___fladd@aexp,w,c
 15952  002954  B4D8               	btfsc	status,2,c
 15953  002956  D00D               	goto	i2l4437
 15954  002958  2812               	incf	i2___fladd@aexp,w,c
 15955  00295A  A4D8               	btfss	status,2,c
 15956  00295C  D008               	goto	i2l4433
 15957  00295E  0E00               	movlw	0
 15958  002960  6E05               	movwf	i2___fladd@a,c
 15959  002962  0E00               	movlw	0
 15960  002964  6E06               	movwf	i2___fladd@a+1,c
 15961  002966  0E00               	movlw	0
 15962  002968  6E07               	movwf	i2___fladd@a+2,c
 15963  00296A  0E00               	movlw	0
 15964  00296C  6E08               	movwf	i2___fladd@a+3,c
 15965  00296E                     i2l4433:
 15966  00296E  8E07               	bsf	i2___fladd@a+2,7,c
 15967  002970  D006               	goto	L30
 15968  002972                     i2l4437:
 15969  002972  0E00               	movlw	0
 15970  002974  6E05               	movwf	i2___fladd@a,c
 15971  002976  0E00               	movlw	0
 15972  002978  6E06               	movwf	i2___fladd@a+1,c
 15973  00297A  0E00               	movlw	0
 15974  00297C  6E07               	movwf	i2___fladd@a+2,c
 15975  00297E                     L30:
 15976  00297E  0E00               	movlw	0
 15977  002980  6E08               	movwf	i2___fladd@a+3,c
 15978  002982  5013               	movf	i2___fladd@bexp,w,c
 15979  002984  5C12               	subwf	i2___fladd@aexp,w,c
 15980  002986  B0D8               	btfsc	status,0,c
 15981  002988  D022               	goto	i2l4475
 15982  00298A  AC11               	btfss	i2___fladd@signs,6,c
 15983  00298C  D002               	goto	i2l4445
 15984  00298E  0E80               	movlw	128
 15985  002990  1A11               	xorwf	i2___fladd@signs,f,c
 15986  002992                     i2l4445:
 15987  002992  C013  F014         	movff	i2___fladd@bexp,i2___fladd@grs
 15988  002996  C012  F013         	movff	i2___fladd@aexp,i2___fladd@bexp
 15989  00299A  C014  F012         	movff	i2___fladd@grs,i2___fladd@aexp
 15990  00299E  C001  F014         	movff	i2___fladd@b,i2___fladd@grs
 15991  0029A2  C005  F001         	movff	i2___fladd@a,i2___fladd@b
 15992  0029A6  C014  F005         	movff	i2___fladd@grs,i2___fladd@a
 15993  0029AA  C002  F014         	movff	i2___fladd@b+1,i2___fladd@grs
 15994  0029AE  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
 15995  0029B2  C014  F006         	movff	i2___fladd@grs,i2___fladd@a+1
 15996  0029B6  C003  F014         	movff	i2___fladd@b+2,i2___fladd@grs
 15997  0029BA  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
 15998  0029BE  C014  F007         	movff	i2___fladd@grs,i2___fladd@a+2
 15999  0029C2  C004  F014         	movff	i2___fladd@b+3,i2___fladd@grs
 16000  0029C6  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
 16001  0029CA  C014  F008         	movff	i2___fladd@grs,i2___fladd@a+3
 16002  0029CE                     i2l4475:
 16003  0029CE  0E00               	movlw	0
 16004  0029D0  6E14               	movwf	i2___fladd@grs,c
 16005  0029D2  5013               	movf	i2___fladd@bexp,w,c
 16006  0029D4  6E09               	movwf	??i2___fladd& (0+255),c
 16007  0029D6  6A0A               	clrf	(??i2___fladd+1)& (0+255),c
 16008  0029D8  1E09               	comf	??i2___fladd,f,c
 16009  0029DA  1E0A               	comf	??i2___fladd+1,f,c
 16010  0029DC  4A09               	infsnz	??i2___fladd,f,c
 16011  0029DE  2A0A               	incf	??i2___fladd+1,f,c
 16012  0029E0  5012               	movf	i2___fladd@aexp,w,c
 16013  0029E2  6E0B               	movwf	(??i2___fladd+2)& (0+255),c
 16014  0029E4  6A0C               	clrf	(??i2___fladd+3)& (0+255),c
 16015  0029E6  5009               	movf	??i2___fladd,w,c
 16016  0029E8  260B               	addwf	??i2___fladd+2,f,c
 16017  0029EA  500A               	movf	??i2___fladd+1,w,c
 16018  0029EC  220C               	addwfc	??i2___fladd+3,f,c
 16019  0029EE  BE0C               	btfsc	??i2___fladd+3,7,c
 16020  0029F0  D02C               	goto	i2l990
 16021  0029F2  500C               	movf	??i2___fladd+3,w,c
 16022  0029F4  E104               	bnz	i2u519_40
 16023  0029F6  0E1A               	movlw	26
 16024  0029F8  5C0B               	subwf	??i2___fladd+2,w,c
 16025  0029FA  A0D8               	btfss	status,0,c
 16026  0029FC  D026               	goto	i2l990
 16027  0029FE                     i2u519_40:
 16028  0029FE  5001               	movf	i2___fladd@b,w,c
 16029  002A00  1002               	iorwf	i2___fladd@b+1,w,c
 16030  002A02  1003               	iorwf	i2___fladd@b+2,w,c
 16031  002A04  1004               	iorwf	i2___fladd@b+3,w,c
 16032  002A06  B4D8               	btfsc	status,2,c
 16033  002A08  D002               	goto	i2u520_40
 16034  002A0A  0E01               	movlw	1
 16035  002A0C  D001               	goto	i2u521_40
 16036  002A0E                     i2u520_40:
 16037  002A0E  0E00               	movlw	0
 16038  002A10                     i2u521_40:
 16039  002A10  6E14               	movwf	i2___fladd@grs,c
 16040  002A12  0E00               	movlw	0
 16041  002A14  6E01               	movwf	i2___fladd@b,c
 16042  002A16  0E00               	movlw	0
 16043  002A18  6E02               	movwf	i2___fladd@b+1,c
 16044  002A1A  0E00               	movlw	0
 16045  002A1C  6E03               	movwf	i2___fladd@b+2,c
 16046  002A1E  0E00               	movlw	0
 16047  002A20  6E04               	movwf	i2___fladd@b+3,c
 16048  002A22  C012  F013         	movff	i2___fladd@aexp,i2___fladd@bexp
 16049  002A26  D015               	goto	i2l989
 16050  002A28                     i2l991:
 16051  002A28  A014               	btfss	i2___fladd@grs,0,c
 16052  002A2A  D005               	goto	i2l4487
 16053  002A2C  90D8               	bcf	status,0,c
 16054  002A2E  3014               	rrcf	i2___fladd@grs,w,c
 16055  002A30  0901               	iorlw	1
 16056  002A32  6E14               	movwf	i2___fladd@grs,c
 16057  002A34  D002               	goto	i2l4489
 16058  002A36                     i2l4487:
 16059  002A36  90D8               	bcf	status,0,c
 16060  002A38  3214               	rrcf	i2___fladd@grs,f,c
 16061  002A3A                     i2l4489:
 16062  002A3A  B001               	btfsc	i2___fladd@b,0,c
 16063  002A3C  8E14               	bsf	i2___fladd@grs,7,c
 16064  002A3E  3404               	rlcf	i2___fladd@b+3,w,c
 16065  002A40  3204               	rrcf	i2___fladd@b+3,f,c
 16066  002A42  3203               	rrcf	i2___fladd@b+2,f,c
 16067  002A44  3202               	rrcf	i2___fladd@b+1,f,c
 16068  002A46  3201               	rrcf	i2___fladd@b,f,c
 16069  002A48  2A13               	incf	i2___fladd@bexp,f,c
 16070  002A4A                     i2l990:
 16071  002A4A  5012               	movf	i2___fladd@aexp,w,c
 16072  002A4C  5C13               	subwf	i2___fladd@bexp,w,c
 16073  002A4E  A0D8               	btfss	status,0,c
 16074  002A50  D7EB               	goto	i2l991
 16075  002A52                     i2l989:
 16076  002A52  BC11               	btfsc	i2___fladd@signs,6,c
 16077  002A54  D029               	goto	i2l4521
 16078  002A56  5013               	movf	i2___fladd@bexp,w,c
 16079  002A58  A4D8               	btfss	status,2,c
 16080  002A5A  D009               	goto	i2l4503
 16081  002A5C  0E00               	movlw	0
 16082  002A5E  6E01               	movwf	?i2___fladd,c
 16083  002A60  0E00               	movlw	0
 16084  002A62  6E02               	movwf	?i2___fladd+1,c
 16085  002A64  0E00               	movlw	0
 16086  002A66  6E03               	movwf	?i2___fladd+2,c
 16087  002A68  0E00               	movlw	0
 16088  002A6A  6E04               	movwf	?i2___fladd+3,c
 16089  002A6C  0012               	return	
 16090  002A6E                     i2l4503:
 16091  002A6E  5005               	movf	i2___fladd@a,w,c
 16092  002A70  2601               	addwf	i2___fladd@b,f,c
 16093  002A72  5006               	movf	i2___fladd@a+1,w,c
 16094  002A74  2202               	addwfc	i2___fladd@b+1,f,c
 16095  002A76  5007               	movf	i2___fladd@a+2,w,c
 16096  002A78  2203               	addwfc	i2___fladd@b+2,f,c
 16097  002A7A  5008               	movf	i2___fladd@a+3,w,c
 16098  002A7C  2204               	addwfc	i2___fladd@b+3,f,c
 16099  002A7E  A004               	btfss	i2___fladd@b+3,0,c
 16100  002A80  D083               	goto	i2l4557
 16101  002A82  A014               	btfss	i2___fladd@grs,0,c
 16102  002A84  D006               	goto	i2l4511
 16103  002A86  90D8               	bcf	status,0,c
 16104  002A88  3214               	rrcf	i2___fladd@grs,f,c
 16105  002A8A  5014               	movf	i2___fladd@grs,w,c
 16106  002A8C  0901               	iorlw	1
 16107  002A8E  6E14               	movwf	i2___fladd@grs,c
 16108  002A90  D002               	goto	i2l4513
 16109  002A92                     i2l4511:
 16110  002A92  90D8               	bcf	status,0,c
 16111  002A94  3214               	rrcf	i2___fladd@grs,f,c
 16112  002A96                     i2l4513:
 16113  002A96  B001               	btfsc	i2___fladd@b,0,c
 16114  002A98  8E14               	bsf	i2___fladd@grs,7,c
 16115  002A9A  3404               	rlcf	i2___fladd@b+3,w,c
 16116  002A9C  3204               	rrcf	i2___fladd@b+3,f,c
 16117  002A9E  3203               	rrcf	i2___fladd@b+2,f,c
 16118  002AA0  3202               	rrcf	i2___fladd@b+1,f,c
 16119  002AA2  3201               	rrcf	i2___fladd@b,f,c
 16120  002AA4  2A13               	incf	i2___fladd@bexp,f,c
 16121  002AA6  D070               	goto	i2l4557
 16122  002AA8                     i2l4521:
 16123  002AA8  5005               	movf	i2___fladd@a,w,c
 16124  002AAA  5C01               	subwf	i2___fladd@b,w,c
 16125  002AAC  5006               	movf	i2___fladd@a+1,w,c
 16126  002AAE  5802               	subwfb	i2___fladd@b+1,w,c
 16127  002AB0  5007               	movf	i2___fladd@a+2,w,c
 16128  002AB2  5803               	subwfb	i2___fladd@b+2,w,c
 16129  002AB4  5004               	movf	i2___fladd@b+3,w,c
 16130  002AB6  0A80               	xorlw	128
 16131  002AB8  6E09               	movwf	??i2___fladd& (0+255),c
 16132  002ABA  5008               	movf	i2___fladd@a+3,w,c
 16133  002ABC  0A80               	xorlw	128
 16134  002ABE  5809               	subwfb	??i2___fladd& (0+255),w,c
 16135  002AC0  B0D8               	btfsc	status,0,c
 16136  002AC2  D036               	goto	i2l4531
 16137  002AC4  C001  F009         	movff	i2___fladd@b,??i2___fladd
 16138  002AC8  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
 16139  002ACC  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
 16140  002AD0  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
 16141  002AD4  1E09               	comf	??i2___fladd,f,c
 16142  002AD6  1E0A               	comf	??i2___fladd+1,f,c
 16143  002AD8  1E0B               	comf	??i2___fladd+2,f,c
 16144  002ADA  1E0C               	comf	??i2___fladd+3,f,c
 16145  002ADC  2A09               	incf	??i2___fladd,f,c
 16146  002ADE  0E00               	movlw	0
 16147  002AE0  220A               	addwfc	??i2___fladd+1,f,c
 16148  002AE2  220B               	addwfc	??i2___fladd+2,f,c
 16149  002AE4  220C               	addwfc	??i2___fladd+3,f,c
 16150  002AE6  5005               	movf	i2___fladd@a,w,c
 16151  002AE8  2409               	addwf	??i2___fladd,w,c
 16152  002AEA  6E0D               	movwf	(??i2___fladd+4)& (0+255),c
 16153  002AEC  5006               	movf	i2___fladd@a+1,w,c
 16154  002AEE  200A               	addwfc	??i2___fladd+1,w,c
 16155  002AF0  6E0E               	movwf	(??i2___fladd+5)& (0+255),c
 16156  002AF2  5007               	movf	i2___fladd@a+2,w,c
 16157  002AF4  200B               	addwfc	??i2___fladd+2,w,c
 16158  002AF6  6E0F               	movwf	(??i2___fladd+6)& (0+255),c
 16159  002AF8  5008               	movf	i2___fladd@a+3,w,c
 16160  002AFA  200C               	addwfc	??i2___fladd+3,w,c
 16161  002AFC  6E10               	movwf	(??i2___fladd+7)& (0+255),c
 16162  002AFE  0EFF               	movlw	255
 16163  002B00  240D               	addwf	??i2___fladd+4,w,c
 16164  002B02  6E01               	movwf	i2___fladd@b,c
 16165  002B04  0EFF               	movlw	255
 16166  002B06  200E               	addwfc	??i2___fladd+5,w,c
 16167  002B08  6E02               	movwf	i2___fladd@b+1,c
 16168  002B0A  0EFF               	movlw	255
 16169  002B0C  200F               	addwfc	??i2___fladd+6,w,c
 16170  002B0E  6E03               	movwf	i2___fladd@b+2,c
 16171  002B10  0EFF               	movlw	255
 16172  002B12  2010               	addwfc	??i2___fladd+7,w,c
 16173  002B14  6E04               	movwf	i2___fladd@b+3,c
 16174  002B16  0E80               	movlw	128
 16175  002B18  1A11               	xorwf	i2___fladd@signs,f,c
 16176  002B1A  6C14               	negf	i2___fladd@grs,c
 16177  002B1C  5014               	movf	i2___fladd@grs,w,c
 16178  002B1E  A4D8               	btfss	status,2,c
 16179  002B20  D00F               	goto	i2l1006
 16180  002B22  0E01               	movlw	1
 16181  002B24  2601               	addwf	i2___fladd@b,f,c
 16182  002B26  0E00               	movlw	0
 16183  002B28  2202               	addwfc	i2___fladd@b+1,f,c
 16184  002B2A  2203               	addwfc	i2___fladd@b+2,f,c
 16185  002B2C  2204               	addwfc	i2___fladd@b+3,f,c
 16186  002B2E  D008               	goto	i2l1006
 16187  002B30                     i2l4531:
 16188  002B30  5005               	movf	i2___fladd@a,w,c
 16189  002B32  5E01               	subwf	i2___fladd@b,f,c
 16190  002B34  5006               	movf	i2___fladd@a+1,w,c
 16191  002B36  5A02               	subwfb	i2___fladd@b+1,f,c
 16192  002B38  5007               	movf	i2___fladd@a+2,w,c
 16193  002B3A  5A03               	subwfb	i2___fladd@b+2,f,c
 16194  002B3C  5008               	movf	i2___fladd@a+3,w,c
 16195  002B3E  5A04               	subwfb	i2___fladd@b+3,f,c
 16196  002B40                     i2l1006:
 16197  002B40  5001               	movf	i2___fladd@b,w,c
 16198  002B42  1002               	iorwf	i2___fladd@b+1,w,c
 16199  002B44  1003               	iorwf	i2___fladd@b+2,w,c
 16200  002B46  1004               	iorwf	i2___fladd@b+3,w,c
 16201  002B48  A4D8               	btfss	status,2,c
 16202  002B4A  D01C               	goto	i2l4555
 16203  002B4C  5014               	movf	i2___fladd@grs,w,c
 16204  002B4E  A4D8               	btfss	status,2,c
 16205  002B50  D019               	goto	i2l4555
 16206  002B52  0E00               	movlw	0
 16207  002B54  6E01               	movwf	?i2___fladd,c
 16208  002B56  0E00               	movlw	0
 16209  002B58  6E02               	movwf	?i2___fladd+1,c
 16210  002B5A  0E00               	movlw	0
 16211  002B5C  6E03               	movwf	?i2___fladd+2,c
 16212  002B5E  0E00               	movlw	0
 16213  002B60  6E04               	movwf	?i2___fladd+3,c
 16214  002B62  0012               	return	
 16215  002B64                     i2l4539:
 16216  002B64  90D8               	bcf	status,0,c
 16217  002B66  3601               	rlcf	i2___fladd@b,f,c
 16218  002B68  3602               	rlcf	i2___fladd@b+1,f,c
 16219  002B6A  3603               	rlcf	i2___fladd@b+2,f,c
 16220  002B6C  3604               	rlcf	i2___fladd@b+3,f,c
 16221  002B6E  BE14               	btfsc	i2___fladd@grs,7,c
 16222  002B70  8001               	bsf	i2___fladd@b,0,c
 16223  002B72  A014               	btfss	i2___fladd@grs,0,c
 16224  002B74  D002               	goto	i2l4549
 16225  002B76  80D8               	bsf	status,0,c
 16226  002B78  D001               	goto	L31
 16227  002B7A                     i2l4549:
 16228  002B7A  90D8               	bcf	status,0,c
 16229  002B7C                     L31:
 16230  002B7C  3614               	rlcf	i2___fladd@grs,f,c
 16231  002B7E  5013               	movf	i2___fladd@bexp,w,c
 16232  002B80  A4D8               	btfss	status,2,c
 16233  002B82  0613               	decf	i2___fladd@bexp,f,c
 16234  002B84                     i2l4555:
 16235  002B84  AE03               	btfss	i2___fladd@b+2,7,c
 16236  002B86  D7EE               	goto	i2l4539
 16237  002B88                     i2l4557:
 16238  002B88  0E00               	movlw	0
 16239  002B8A  6E12               	movwf	i2___fladd@aexp,c
 16240  002B8C  AE14               	btfss	i2___fladd@grs,7,c
 16241  002B8E  D00A               	goto	i2l1015
 16242  002B90  C014  F009         	movff	i2___fladd@grs,??i2___fladd
 16243  002B94  0E7F               	movlw	127
 16244  002B96  1609               	andwf	??i2___fladd,f,c
 16245  002B98  A4D8               	btfss	status,2,c
 16246  002B9A  D002               	goto	i2l4565
 16247  002B9C  A001               	btfss	i2___fladd@b,0,c
 16248  002B9E  D002               	goto	i2l1015
 16249  002BA0                     i2l4565:
 16250  002BA0  0E01               	movlw	1
 16251  002BA2  6E12               	movwf	i2___fladd@aexp,c
 16252  002BA4                     i2l1015:
 16253  002BA4  5012               	movf	i2___fladd@aexp,w,c
 16254  002BA6  B4D8               	btfsc	status,2,c
 16255  002BA8  D020               	goto	i2l4575
 16256  002BAA  0E01               	movlw	1
 16257  002BAC  2601               	addwf	i2___fladd@b,f,c
 16258  002BAE  0E00               	movlw	0
 16259  002BB0  2202               	addwfc	i2___fladd@b+1,f,c
 16260  002BB2  2203               	addwfc	i2___fladd@b+2,f,c
 16261  002BB4  2204               	addwfc	i2___fladd@b+3,f,c
 16262  002BB6  A004               	btfss	i2___fladd@b+3,0,c
 16263  002BB8  D018               	goto	i2l4575
 16264  002BBA  C001  F009         	movff	i2___fladd@b,??i2___fladd
 16265  002BBE  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
 16266  002BC2  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
 16267  002BC6  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
 16268  002BCA  340C               	rlcf	??i2___fladd+3,w,c
 16269  002BCC  320C               	rrcf	??i2___fladd+3,f,c
 16270  002BCE  320B               	rrcf	??i2___fladd+2,f,c
 16271  002BD0  320A               	rrcf	??i2___fladd+1,f,c
 16272  002BD2  3209               	rrcf	??i2___fladd,f,c
 16273  002BD4  C009  F001         	movff	??i2___fladd,i2___fladd@b
 16274  002BD8  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
 16275  002BDC  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
 16276  002BE0  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
 16277  002BE4  2813               	incf	i2___fladd@bexp,w,c
 16278  002BE6  A4D8               	btfss	status,2,c
 16279  002BE8  2A13               	incf	i2___fladd@bexp,f,c
 16280  002BEA                     i2l4575:
 16281  002BEA  2813               	incf	i2___fladd@bexp,w,c
 16282  002BEC  B4D8               	btfsc	status,2,c
 16283  002BEE  D003               	goto	i2l4579
 16284  002BF0  5013               	movf	i2___fladd@bexp,w,c
 16285  002BF2  A4D8               	btfss	status,2,c
 16286  002BF4  D00D               	goto	i2l4583
 16287  002BF6                     i2l4579:
 16288  002BF6  0E00               	movlw	0
 16289  002BF8  6E01               	movwf	i2___fladd@b,c
 16290  002BFA  0E00               	movlw	0
 16291  002BFC  6E02               	movwf	i2___fladd@b+1,c
 16292  002BFE  0E00               	movlw	0
 16293  002C00  6E03               	movwf	i2___fladd@b+2,c
 16294  002C02  0E00               	movlw	0
 16295  002C04  6E04               	movwf	i2___fladd@b+3,c
 16296  002C06  5013               	movf	i2___fladd@bexp,w,c
 16297  002C08  A4D8               	btfss	status,2,c
 16298  002C0A  D002               	goto	i2l4583
 16299  002C0C  0E00               	movlw	0
 16300  002C0E  6E11               	movwf	i2___fladd@signs,c
 16301  002C10                     i2l4583:
 16302  002C10  A013               	btfss	i2___fladd@bexp,0,c
 16303  002C12  D002               	goto	i2l4587
 16304  002C14  8E03               	bsf	i2___fladd@b+2,7,c
 16305  002C16  D001               	goto	i2l4589
 16306  002C18                     i2l4587:
 16307  002C18  9E03               	bcf	i2___fladd@b+2,7,c
 16308  002C1A                     i2l4589:
 16309  002C1A  90D8               	bcf	status,0,c
 16310  002C1C  3013               	rrcf	i2___fladd@bexp,w,c
 16311  002C1E  6E04               	movwf	i2___fladd@b+3,c
 16312  002C20  BE11               	btfsc	i2___fladd@signs,7,c
 16313  002C22  8E04               	bsf	i2___fladd@b+3,7,c
 16314  002C24  C001  F001         	movff	i2___fladd@b,?i2___fladd
 16315  002C28  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
 16316  002C2C  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
 16317  002C30  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
 16318  002C34  0012               	return	
 16319  002C36                     __end_ofi2___fladd:
 16320                           	opt stack 0
 16321                           pclatu	equ	0xFFB
 16322                           pclath	equ	0xFFA
 16323                           tblptru	equ	0xFF8
 16324                           tblptrh	equ	0xFF7
 16325                           tblptrl	equ	0xFF6
 16326                           tablat	equ	0xFF5
 16327                           prodh	equ	0xFF4
 16328                           prodl	equ	0xFF3
 16329                           intcon	equ	0xFF2
 16330                           intcon2	equ	0xFF1
 16331                           intcon3	equ	0xFF0
 16332                           postinc0	equ	0xFEE
 16333                           fsr0h	equ	0xFEA
 16334                           fsr0l	equ	0xFE9
 16335                           wreg	equ	0xFE8
 16336                           indf1	equ	0xFE7
 16337                           postdec1	equ	0xFE5
 16338                           fsr1h	equ	0xFE2
 16339                           fsr1l	equ	0xFE1
 16340                           indf2	equ	0xFDF
 16341                           postinc2	equ	0xFDE
 16342                           postdec2	equ	0xFDD
 16343                           fsr2h	equ	0xFDA
 16344                           fsr2l	equ	0xFD9
 16345                           status	equ	0xFD8
 16346                           
 16347 ;; *************** function i2_delay_ms *****************
 16348 ;; Defined at:
 16349 ;;		line 93 in file "Main.c"
 16350 ;; Parameters:    Size  Location     Type
 16351 ;;  n               2    0[COMRAM] unsigned int 
 16352 ;; Auto vars:     Size  Location     Type
 16353 ;;  delay_ms        2    2[COMRAM] int 
 16354 ;; Return value:  Size  Location     Type
 16355 ;;                  1    wreg      void 
 16356 ;; Registers used:
 16357 ;;		wreg, status,2, status,0
 16358 ;; Tracked objects:
 16359 ;;		On entry : 0/0
 16360 ;;		On exit  : 0/0
 16361 ;;		Unchanged: 0/0
 16362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16364 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16366 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16367 ;;Total ram usage:        4 bytes
 16368 ;; Hardware stack levels used:    1
 16369 ;; This function calls:
 16370 ;;		Nothing
 16371 ;; This function is called by:
 16372 ;;		_Timer3_int
 16373 ;;		_highIsr
 16374 ;; This function uses a non-reentrant model
 16375 ;;
 16376                           
 16377                           	psect	text55
 16378  004E42                     __ptext55:
 16379                           	opt stack 0
 16380  004E42                     i2_delay_ms:
 16381                           	opt stack 23
 16382                           
 16383                           ;Main.c: 94: int i;
 16384                           ;Main.c: 95: for (i=0; i < n; i++) _delaywdt((unsigned long)((1)*(4000000UL/4000.0))) ;
 16385                           
 16386                           ;incstack = 0
 16387  004E42  0E00               	movlw	0
 16388  004E44  6E04               	movwf	i2delay_ms@i+1,c
 16389  004E46  0E00               	movlw	0
 16390  004E48  6E03               	movwf	i2delay_ms@i,c
 16391  004E4A  D006               	goto	i2l95
 16392  004E4C                     i2l5235:
 16393  004E4C  0EFA               	movlw	250
 16394  004E4E                     i2u799_47:
 16395  004E4E  0004               	clrwdt	
 16396  004E50  2EE8               	decfsz	wreg,f,c
 16397  004E52  D7FD               	goto	i2u799_47
 16398  004E54  4A03               	infsnz	i2delay_ms@i,f,c
 16399  004E56  2A04               	incf	i2delay_ms@i+1,f,c
 16400  004E58                     i2l95:
 16401  004E58  5001               	movf	i2delay_ms@n,w,c
 16402  004E5A  5C03               	subwf	i2delay_ms@i,w,c
 16403  004E5C  5002               	movf	i2delay_ms@n+1,w,c
 16404  004E5E  5804               	subwfb	i2delay_ms@i+1,w,c
 16405  004E60  B0D8               	btfsc	status,0,c
 16406  004E62  0012               	return	
 16407  004E64  D7F3               	goto	i2l5235
 16408  004E66                     __end_ofi2_delay_ms:
 16409                           	opt stack 0
 16410                           pclatu	equ	0xFFB
 16411                           pclath	equ	0xFFA
 16412                           tblptru	equ	0xFF8
 16413                           tblptrh	equ	0xFF7
 16414                           tblptrl	equ	0xFF6
 16415                           tablat	equ	0xFF5
 16416                           prodh	equ	0xFF4
 16417                           prodl	equ	0xFF3
 16418                           intcon	equ	0xFF2
 16419                           intcon2	equ	0xFF1
 16420                           intcon3	equ	0xFF0
 16421                           postinc0	equ	0xFEE
 16422                           fsr0h	equ	0xFEA
 16423                           fsr0l	equ	0xFE9
 16424                           wreg	equ	0xFE8
 16425                           indf1	equ	0xFE7
 16426                           postdec1	equ	0xFE5
 16427                           fsr1h	equ	0xFE2
 16428                           fsr1l	equ	0xFE1
 16429                           indf2	equ	0xFDF
 16430                           postinc2	equ	0xFDE
 16431                           postdec2	equ	0xFDD
 16432                           fsr2h	equ	0xFDA
 16433                           fsr2l	equ	0xFD9
 16434                           status	equ	0xFD8
 16435                           
 16436 ;; *************** function i2___xxtofl *****************
 16437 ;; Defined at:
 16438 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
 16439 ;; Parameters:    Size  Location     Type
 16440 ;;  sign            1    wreg     unsigned char 
 16441 ;;  val             4    0[COMRAM] long 
 16442 ;; Auto vars:     Size  Location     Type
 16443 ;;  sign            1    8[COMRAM] unsigned char 
 16444 ;;  __xxtofl        4   10[COMRAM] unsigned long 
 16445 ;;  __xxtofl        1    9[COMRAM] unsigned char 
 16446 ;; Return value:  Size  Location     Type
 16447 ;;                  4    0[COMRAM] unsigned char 
 16448 ;; Registers used:
 16449 ;;		wreg, status,2, status,0
 16450 ;; Tracked objects:
 16451 ;;		On entry : 0/0
 16452 ;;		On exit  : 0/0
 16453 ;;		Unchanged: 0/0
 16454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16455 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16456 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16457 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16458 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16459 ;;Total ram usage:       14 bytes
 16460 ;; Hardware stack levels used:    1
 16461 ;; This function calls:
 16462 ;;		Nothing
 16463 ;; This function is called by:
 16464 ;;		_Timer3_int
 16465 ;; This function uses a non-reentrant model
 16466 ;;
 16467                           
 16468                           	psect	text56
 16469  0039BC                     __ptext56:
 16470                           	opt stack 0
 16471  0039BC                     i2___xxtofl:
 16472                           	opt stack 22
 16473                           
 16474                           ;incstack = 0
 16475                           ;i2___xxtofl@sign stored from wreg
 16476  0039BC  6E09               	movwf	i2___xxtofl@sign,c
 16477  0039BE  5009               	movf	i2___xxtofl@sign,w,c
 16478  0039C0  A4D8               	btfss	status,2,c
 16479  0039C2  AE04               	btfss	i2___xxtofl@val+3,7,c
 16480  0039C4  D01A               	goto	i2l1097
 16481  0039C6  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
 16482  0039CA  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 16483  0039CE  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 16484  0039D2  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 16485  0039D6  1E05               	comf	??i2___xxtofl,f,c
 16486  0039D8  1E06               	comf	??i2___xxtofl+1,f,c
 16487  0039DA  1E07               	comf	??i2___xxtofl+2,f,c
 16488  0039DC  1E08               	comf	??i2___xxtofl+3,f,c
 16489  0039DE  2A05               	incf	??i2___xxtofl,f,c
 16490  0039E0  0E00               	movlw	0
 16491  0039E2  2206               	addwfc	??i2___xxtofl+1,f,c
 16492  0039E4  2207               	addwfc	??i2___xxtofl+2,f,c
 16493  0039E6  2208               	addwfc	??i2___xxtofl+3,f,c
 16494  0039E8  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
 16495  0039EC  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 16496  0039F0  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 16497  0039F4  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 16498  0039F8  D008               	goto	i2l5329
 16499  0039FA                     i2l1097:
 16500  0039FA  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
 16501  0039FE  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 16502  003A02  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 16503  003A06  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 16504  003A0A                     i2l5329:
 16505  003A0A  5001               	movf	i2___xxtofl@val,w,c
 16506  003A0C  1002               	iorwf	i2___xxtofl@val+1,w,c
 16507  003A0E  1003               	iorwf	i2___xxtofl@val+2,w,c
 16508  003A10  1004               	iorwf	i2___xxtofl@val+3,w,c
 16509  003A12  A4D8               	btfss	status,2,c
 16510  003A14  D009               	goto	i2l5335
 16511  003A16  0E00               	movlw	0
 16512  003A18  6E01               	movwf	?i2___xxtofl,c
 16513  003A1A  0E00               	movlw	0
 16514  003A1C  6E02               	movwf	?i2___xxtofl+1,c
 16515  003A1E  0E00               	movlw	0
 16516  003A20  6E03               	movwf	?i2___xxtofl+2,c
 16517  003A22  0E00               	movlw	0
 16518  003A24  6E04               	movwf	?i2___xxtofl+3,c
 16519  003A26  0012               	return	
 16520  003A28                     i2l5335:
 16521  003A28  0E96               	movlw	150
 16522  003A2A  6E0A               	movwf	i2___xxtofl@exp,c
 16523  003A2C  D006               	goto	i2l5339
 16524  003A2E                     i2l5337:
 16525  003A2E  2A0A               	incf	i2___xxtofl@exp,f,c
 16526  003A30  90D8               	bcf	status,0,c
 16527  003A32  320E               	rrcf	i2___xxtofl@arg+3,f,c
 16528  003A34  320D               	rrcf	i2___xxtofl@arg+2,f,c
 16529  003A36  320C               	rrcf	i2___xxtofl@arg+1,f,c
 16530  003A38  320B               	rrcf	i2___xxtofl@arg,f,c
 16531  003A3A                     i2l5339:
 16532  003A3A  0E00               	movlw	0
 16533  003A3C  140B               	andwf	i2___xxtofl@arg,w,c
 16534  003A3E  6E05               	movwf	??i2___xxtofl& (0+255),c
 16535  003A40  0E00               	movlw	0
 16536  003A42  140C               	andwf	i2___xxtofl@arg+1,w,c
 16537  003A44  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
 16538  003A46  0E00               	movlw	0
 16539  003A48  140D               	andwf	i2___xxtofl@arg+2,w,c
 16540  003A4A  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
 16541  003A4C  0EFE               	movlw	254
 16542  003A4E  140E               	andwf	i2___xxtofl@arg+3,w,c
 16543  003A50  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
 16544  003A52  5005               	movf	??i2___xxtofl,w,c
 16545  003A54  1006               	iorwf	??i2___xxtofl+1,w,c
 16546  003A56  1007               	iorwf	??i2___xxtofl+2,w,c
 16547  003A58  1008               	iorwf	??i2___xxtofl+3,w,c
 16548  003A5A  B4D8               	btfsc	status,2,c
 16549  003A5C  D00D               	goto	i2l1104
 16550  003A5E  D7E7               	goto	i2l5337
 16551  003A60                     i2l5341:
 16552  003A60  2A0A               	incf	i2___xxtofl@exp,f,c
 16553  003A62  0E01               	movlw	1
 16554  003A64  260B               	addwf	i2___xxtofl@arg,f,c
 16555  003A66  0E00               	movlw	0
 16556  003A68  220C               	addwfc	i2___xxtofl@arg+1,f,c
 16557  003A6A  220D               	addwfc	i2___xxtofl@arg+2,f,c
 16558  003A6C  220E               	addwfc	i2___xxtofl@arg+3,f,c
 16559  003A6E  90D8               	bcf	status,0,c
 16560  003A70  320E               	rrcf	i2___xxtofl@arg+3,f,c
 16561  003A72  320D               	rrcf	i2___xxtofl@arg+2,f,c
 16562  003A74  320C               	rrcf	i2___xxtofl@arg+1,f,c
 16563  003A76  320B               	rrcf	i2___xxtofl@arg,f,c
 16564  003A78                     i2l1104:
 16565  003A78  0E00               	movlw	0
 16566  003A7A  140B               	andwf	i2___xxtofl@arg,w,c
 16567  003A7C  6E05               	movwf	??i2___xxtofl& (0+255),c
 16568  003A7E  0E00               	movlw	0
 16569  003A80  140C               	andwf	i2___xxtofl@arg+1,w,c
 16570  003A82  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
 16571  003A84  0E00               	movlw	0
 16572  003A86  140D               	andwf	i2___xxtofl@arg+2,w,c
 16573  003A88  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
 16574  003A8A  0EFF               	movlw	255
 16575  003A8C  140E               	andwf	i2___xxtofl@arg+3,w,c
 16576  003A8E  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
 16577  003A90  5005               	movf	??i2___xxtofl,w,c
 16578  003A92  1006               	iorwf	??i2___xxtofl+1,w,c
 16579  003A94  1007               	iorwf	??i2___xxtofl+2,w,c
 16580  003A96  1008               	iorwf	??i2___xxtofl+3,w,c
 16581  003A98  B4D8               	btfsc	status,2,c
 16582  003A9A  D007               	goto	i2l5349
 16583  003A9C  D7E1               	goto	i2l5341
 16584  003A9E                     i2l5347:
 16585  003A9E  060A               	decf	i2___xxtofl@exp,f,c
 16586  003AA0  90D8               	bcf	status,0,c
 16587  003AA2  360B               	rlcf	i2___xxtofl@arg,f,c
 16588  003AA4  360C               	rlcf	i2___xxtofl@arg+1,f,c
 16589  003AA6  360D               	rlcf	i2___xxtofl@arg+2,f,c
 16590  003AA8  360E               	rlcf	i2___xxtofl@arg+3,f,c
 16591  003AAA                     i2l5349:
 16592  003AAA  BE0D               	btfsc	i2___xxtofl@arg+2,7,c
 16593  003AAC  D003               	goto	i2l1111
 16594  003AAE  0E02               	movlw	2
 16595  003AB0  600A               	cpfslt	i2___xxtofl@exp,c
 16596  003AB2  D7F5               	goto	i2l5347
 16597  003AB4                     i2l1111:
 16598  003AB4  B00A               	btfsc	i2___xxtofl@exp,0,c
 16599  003AB6  D008               	goto	i2l1112
 16600  003AB8  0EFF               	movlw	255
 16601  003ABA  160B               	andwf	i2___xxtofl@arg,f,c
 16602  003ABC  0EFF               	movlw	255
 16603  003ABE  160C               	andwf	i2___xxtofl@arg+1,f,c
 16604  003AC0  0E7F               	movlw	127
 16605  003AC2  160D               	andwf	i2___xxtofl@arg+2,f,c
 16606  003AC4  0EFF               	movlw	255
 16607  003AC6  160E               	andwf	i2___xxtofl@arg+3,f,c
 16608  003AC8                     i2l1112:
 16609  003AC8  90D8               	bcf	status,0,c
 16610  003ACA  320A               	rrcf	i2___xxtofl@exp,f,c
 16611  003ACC  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
 16612  003AD0  6A06               	clrf	(??i2___xxtofl+1)& (0+255),c
 16613  003AD2  6A07               	clrf	(??i2___xxtofl+2)& (0+255),c
 16614  003AD4  6A08               	clrf	(??i2___xxtofl+3)& (0+255),c
 16615  003AD6  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
 16616  003ADA  6A07               	clrf	??i2___xxtofl+2,c
 16617  003ADC  6A06               	clrf	??i2___xxtofl+1,c
 16618  003ADE  6A05               	clrf	??i2___xxtofl,c
 16619  003AE0  5005               	movf	??i2___xxtofl,w,c
 16620  003AE2  120B               	iorwf	i2___xxtofl@arg,f,c
 16621  003AE4  5006               	movf	??i2___xxtofl+1,w,c
 16622  003AE6  120C               	iorwf	i2___xxtofl@arg+1,f,c
 16623  003AE8  5007               	movf	??i2___xxtofl+2,w,c
 16624  003AEA  120D               	iorwf	i2___xxtofl@arg+2,f,c
 16625  003AEC  5008               	movf	??i2___xxtofl+3,w,c
 16626  003AEE  120E               	iorwf	i2___xxtofl@arg+3,f,c
 16627  003AF0  5009               	movf	i2___xxtofl@sign,w,c
 16628  003AF2  A4D8               	btfss	status,2,c
 16629  003AF4  AE04               	btfss	i2___xxtofl@val+3,7,c
 16630  003AF6  D001               	goto	i2l5361
 16631  003AF8  8E0E               	bsf	i2___xxtofl@arg+3,7,c
 16632  003AFA                     i2l5361:
 16633  003AFA  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
 16634  003AFE  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 16635  003B02  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 16636  003B06  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 16637  003B0A  0012               	return	
 16638  003B0C                     __end_ofi2___xxtofl:
 16639                           	opt stack 0
 16640                           pclatu	equ	0xFFB
 16641                           pclath	equ	0xFFA
 16642                           tblptru	equ	0xFF8
 16643                           tblptrh	equ	0xFF7
 16644                           tblptrl	equ	0xFF6
 16645                           tablat	equ	0xFF5
 16646                           prodh	equ	0xFF4
 16647                           prodl	equ	0xFF3
 16648                           intcon	equ	0xFF2
 16649                           intcon2	equ	0xFF1
 16650                           intcon3	equ	0xFF0
 16651                           postinc0	equ	0xFEE
 16652                           fsr0h	equ	0xFEA
 16653                           fsr0l	equ	0xFE9
 16654                           wreg	equ	0xFE8
 16655                           indf1	equ	0xFE7
 16656                           postdec1	equ	0xFE5
 16657                           fsr1h	equ	0xFE2
 16658                           fsr1l	equ	0xFE1
 16659                           indf2	equ	0xFDF
 16660                           postinc2	equ	0xFDE
 16661                           postdec2	equ	0xFDD
 16662                           fsr2h	equ	0xFDA
 16663                           fsr2l	equ	0xFD9
 16664                           status	equ	0xFD8
 16665                           
 16666 ;; *************** function _reloadTimer3 *****************
 16667 ;; Defined at:
 16668 ;;		line 251 in file "Main.c"
 16669 ;; Parameters:    Size  Location     Type
 16670 ;;		None
 16671 ;; Auto vars:     Size  Location     Type
 16672 ;;		None
 16673 ;; Return value:  Size  Location     Type
 16674 ;;                  1    wreg      void 
 16675 ;; Registers used:
 16676 ;;		wreg, status,2
 16677 ;; Tracked objects:
 16678 ;;		On entry : 0/0
 16679 ;;		On exit  : 0/0
 16680 ;;		Unchanged: 0/0
 16681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16686 ;;Total ram usage:        0 bytes
 16687 ;; Hardware stack levels used:    1
 16688 ;; This function calls:
 16689 ;;		Nothing
 16690 ;; This function is called by:
 16691 ;;		_Timer3_int
 16692 ;; This function uses a non-reentrant model
 16693 ;;
 16694                           
 16695                           	psect	text57
 16696  004E86                     __ptext57:
 16697                           	opt stack 0
 16698  004E86                     _reloadTimer3:
 16699                           	opt stack 22
 16700                           
 16701                           ;Main.c: 253: TMR3H = (unsigned char)((3036 >> 8) & 0x00FF);
 16702                           
 16703                           ;incstack = 0
 16704  004E86  0E0B               	movlw	11
 16705  004E88  6EB3               	movwf	4019,c	;volatile
 16706                           
 16707                           ;Main.c: 254: TMR3L = (unsigned char)(3036 & 0x00FF );
 16708  004E8A  0EDC               	movlw	220
 16709  004E8C  6EB2               	movwf	4018,c	;volatile
 16710  004E8E  0012               	return		;funcret
 16711  004E90                     __end_of_reloadTimer3:
 16712                           	opt stack 0
 16713                           pclatu	equ	0xFFB
 16714                           pclath	equ	0xFFA
 16715                           tblptru	equ	0xFF8
 16716                           tblptrh	equ	0xFF7
 16717                           tblptrl	equ	0xFF6
 16718                           tablat	equ	0xFF5
 16719                           prodh	equ	0xFF4
 16720                           prodl	equ	0xFF3
 16721                           intcon	equ	0xFF2
 16722                           intcon2	equ	0xFF1
 16723                           intcon3	equ	0xFF0
 16724                           postinc0	equ	0xFEE
 16725                           fsr0h	equ	0xFEA
 16726                           fsr0l	equ	0xFE9
 16727                           wreg	equ	0xFE8
 16728                           indf1	equ	0xFE7
 16729                           postdec1	equ	0xFE5
 16730                           fsr1h	equ	0xFE2
 16731                           fsr1l	equ	0xFE1
 16732                           indf2	equ	0xFDF
 16733                           postinc2	equ	0xFDE
 16734                           postdec2	equ	0xFDD
 16735                           fsr2h	equ	0xFDA
 16736                           fsr2l	equ	0xFD9
 16737                           status	equ	0xFD8
 16738                           pclatu	equ	0xFFB
 16739                           pclath	equ	0xFFA
 16740                           tblptru	equ	0xFF8
 16741                           tblptrh	equ	0xFF7
 16742                           tblptrl	equ	0xFF6
 16743                           tablat	equ	0xFF5
 16744                           prodh	equ	0xFF4
 16745                           prodl	equ	0xFF3
 16746                           intcon	equ	0xFF2
 16747                           intcon2	equ	0xFF1
 16748                           intcon3	equ	0xFF0
 16749                           postinc0	equ	0xFEE
 16750                           fsr0h	equ	0xFEA
 16751                           fsr0l	equ	0xFE9
 16752                           wreg	equ	0xFE8
 16753                           indf1	equ	0xFE7
 16754                           postdec1	equ	0xFE5
 16755                           fsr1h	equ	0xFE2
 16756                           fsr1l	equ	0xFE1
 16757                           indf2	equ	0xFDF
 16758                           postinc2	equ	0xFDE
 16759                           postdec2	equ	0xFDD
 16760                           fsr2h	equ	0xFDA
 16761                           fsr2l	equ	0xFD9
 16762                           status	equ	0xFD8
 16763                           
 16764                           	psect	rparam
 16765  0000                     pclatu	equ	0xFFB
 16766                           pclath	equ	0xFFA
 16767                           tblptru	equ	0xFF8
 16768                           tblptrh	equ	0xFF7
 16769                           tblptrl	equ	0xFF6
 16770                           tablat	equ	0xFF5
 16771                           prodh	equ	0xFF4
 16772                           prodl	equ	0xFF3
 16773                           intcon	equ	0xFF2
 16774                           intcon2	equ	0xFF1
 16775                           intcon3	equ	0xFF0
 16776                           postinc0	equ	0xFEE
 16777                           fsr0h	equ	0xFEA
 16778                           fsr0l	equ	0xFE9
 16779                           wreg	equ	0xFE8
 16780                           indf1	equ	0xFE7
 16781                           postdec1	equ	0xFE5
 16782                           fsr1h	equ	0xFE2
 16783                           fsr1l	equ	0xFE1
 16784                           indf2	equ	0xFDF
 16785                           postinc2	equ	0xFDE
 16786                           postdec2	equ	0xFDD
 16787                           fsr2h	equ	0xFDA
 16788                           fsr2l	equ	0xFD9
 16789                           status	equ	0xFD8
 16790                           
 16791                           	psect	temp
 16792  000060                     btemp:
 16793                           	opt stack 0
 16794  000060                     	ds	1
 16795  0000                     int$flags	set	btemp
 16796                           pclatu	equ	0xFFB
 16797                           pclath	equ	0xFFA
 16798                           tblptru	equ	0xFF8
 16799                           tblptrh	equ	0xFF7
 16800                           tblptrl	equ	0xFF6
 16801                           tablat	equ	0xFF5
 16802                           prodh	equ	0xFF4
 16803                           prodl	equ	0xFF3
 16804                           intcon	equ	0xFF2
 16805                           intcon2	equ	0xFF1
 16806                           intcon3	equ	0xFF0
 16807                           postinc0	equ	0xFEE
 16808                           fsr0h	equ	0xFEA
 16809                           fsr0l	equ	0xFE9
 16810                           wreg	equ	0xFE8
 16811                           indf1	equ	0xFE7
 16812                           postdec1	equ	0xFE5
 16813                           fsr1h	equ	0xFE2
 16814                           fsr1l	equ	0xFE1
 16815                           indf2	equ	0xFDF
 16816                           postinc2	equ	0xFDE
 16817                           postdec2	equ	0xFDD
 16818                           fsr2h	equ	0xFDA
 16819                           fsr2l	equ	0xFD9
 16820                           status	equ	0xFD8


Data Sizes:
    Strings     123
    Constant    144
    Data        4
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     77      95
    BANK0           128     98     116
    BANK1           256     79      90
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_17(CODE[5]), STR_16(CODE[5]), STR_15(CODE[5]), 
		 -> STR_14(CODE[6]), STR_13(CODE[4]), STR_12(CODE[6]), STR_11(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> voltage(BANK1[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_20(CODE[7]), STR_19(CODE[6]), STR_18(CODE[7]), STR_10(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[11]), STR_3(CODE[6]), STR_2(CODE[11]), 
		 -> STR_1(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> main@Buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    main$1129	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_17(CODE[5]), STR_16(CODE[5]), 

    main$1128	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_17(CODE[5]), STR_16(CODE[5]), STR_15(CODE[5]), 

    main$1127	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_17(CODE[5]), STR_16(CODE[5]), STR_15(CODE[5]), STR_14(CODE[6]), 

    main$1126	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_17(CODE[5]), STR_16(CODE[5]), STR_15(CODE[5]), STR_14(CODE[6]), 
		 -> STR_13(CODE[4]), 

    main$1125	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_17(CODE[5]), STR_16(CODE[5]), STR_15(CODE[5]), STR_14(CODE[6]), 
		 -> STR_13(CODE[4]), STR_12(CODE[6]), 

    main$1124	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_17(CODE[5]), STR_16(CODE[5]), STR_15(CODE[5]), STR_14(CODE[6]), 
		 -> STR_13(CODE[4]), STR_12(CODE[6]), STR_11(CODE[4]), 

    main$1109	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_9(CODE[4]), STR_8(CODE[4]), 

    main$1103	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_4(CODE[4]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 32
		 -> main@Buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _highIsr in COMRAM

    _highIsr->_Timer3_int
    _update_cooking_time->i2___lwdiv
    i2___lwdiv->i2___wmul
    _Timer3_int->i2_set_pwm1_percent
    i2_set_pwm1_percent->i2___fldiv
    i2___fltol->i2___fladd
    i2___fldiv->i2___flmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___flge
    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    ___flsub->___fladd
    _read_adc_voltage->___fldiv
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles
    _incrementTime->___awdiv
    _decrementTime->___awdiv
    ___lwdiv->___wmul
    ___awdiv->___awmod
    _buzzerA->_delay_ms
    _Auto_Heat->_set_pwm1_percent
    _set_pwm1_percent->___fltol
    ___fltol->___fladd
    ___flmul->___awdiv
    ___fldiv->___flmul
    ___fladd->_fround
    ___xxtofl->___wmul
    ___flge->___fladd

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   87405
                                             31 BANK1     48    48      0
                          _Auto_Heat
                            ___fldiv
                            ___flmul
                            _buzzerA
                      _decrementTime
                           _delay_ms
                      _incrementTime
                               _init
                    _init_adc_no_lib
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
                   _read_adc_voltage
                            _sprintf
                  _update_hysteresis
 ---------------------------------------------------------------------------------
 (1) _update_hysteresis                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    36     10   36736
                                             84 BANK0     14     4     10
                                              0 BANK1     31    31      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               13     9      4    7492
                                             39 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              17    13      4    7294
                                             39 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     431
                                              0 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     431
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     671
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     546
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3037
                                             72 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _read_adc_voltage                                    11     7      4    4131
                                             64 BANK0     11     7      4
                            ___fldiv
                             ___wmul
                           ___xxtofl
                _read_adc_raw_no_lib
 ---------------------------------------------------------------------------------
 (2) _read_adc_raw_no_lib                                  7     5      2      45
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    5780
                                             14 BANK0      2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    5159
                                             13 BANK0      1     1      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    2353
                                             10 BANK0      3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    2944
                                             10 BANK0      1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1642
                                              8 BANK0      2     1      1
                       _delay_cycles
                           _delay_ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      2     2      0      68
                                              6 BANK0      2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (5) _delay_cycles                                         6     6      0      46
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                       _reloadTimer0
 ---------------------------------------------------------------------------------
 (2) _reloadTimer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _incrementTime                                        2     2      0    4227
                                             14 BANK0      2     2      0
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _decrementTime                                        2     2      0    4227
                                             14 BANK0      2     2      0
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1821
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     494
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1912
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _buzzerA                                              0     0      0    1120
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             4     2      2    1120
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Auto_Heat                                            0     0      0   13758
                            ___fladd
                             ___flge
                            ___flneg
                            ___fltol
                           ___xxtofl
                   _set_pwm1_percent
 ---------------------------------------------------------------------------------
 (2) _set_pwm1_percent                                    10     6      4    8836
                                             82 BANK0     10     6      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl (ARG)
                       _set_pwm1_raw
 ---------------------------------------------------------------------------------
 (3) _set_pwm1_raw                                         4     2      2     108
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     549
                                             72 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3643
                                             14 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1581
                                             39 BANK0     25    17      8
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2762
                                             52 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              6 BANK0     14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     173
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     822
                                             72 BANK0     12     4      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _highIsr                                             14    14      0    6619
                                             63 COMRAM    14    14      0
                         _Timer3_int
                       _modeschange1
                _update_cooking_time
                         i2_delay_ms
 ---------------------------------------------------------------------------------
 (8) _update_cooking_time                                  2     2      0     983
                                             13 COMRAM     2     2      0
                          i2___awdiv
                          i2___lwdiv
                           i2___wmul
                     i2_reloadTimer0
 ---------------------------------------------------------------------------------
 (9) i2_reloadTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     417
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___lwdiv                                            7     3      4     214
                                              6 COMRAM     7     3      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___awdiv                                            8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _modeschange1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer3_int                                           3     3      0    5512
                                             60 COMRAM     3     3      0
                       _reloadTimer3
                         i2___xxtofl
                         i2_delay_ms
                 i2_set_pwm1_percent
 ---------------------------------------------------------------------------------
 (9) i2_set_pwm1_percent                                  10     6      4    5040
                                             50 COMRAM    10     6      4
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___fltol
                         i2___xxtofl (ARG)
                     i2_set_pwm1_raw
 ---------------------------------------------------------------------------------
 (10) i2_set_pwm1_raw                                      4     2      2      70
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) i2___fltol                                          10     6      4     255
                                             20 COMRAM    10     6      4
                          i2___fladd (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___flmul                                          25    17      8    1491
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (10) i2___fldiv                                          25    17      8    1107
                                             25 COMRAM    25    17      8
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___fladd                                          20    12      8    2000
                                              0 COMRAM    20    12      8
 ---------------------------------------------------------------------------------
 (8) i2_delay_ms                                           4     2      2     124
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) i2___xxtofl                                          14    10      4     348
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (9) _reloadTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Auto_Heat
     ___fladd
       ___flneg (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___flge
       ___fladd (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flneg
     ___fltol
       ___fladd (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___flneg (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___xxtofl
       ___wmul (ARG)
     _set_pwm1_percent
       ___fladd
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___fltol
         ___fladd (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _set_pwm1_raw (ARG)
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
   _buzzerA
     _delay_ms
   _decrementTime
     ___awdiv
       ___awmod (ARG)
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _delay_ms
   _incrementTime
     ___awdiv
       ___awmod (ARG)
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _init
     _reloadTimer0
   _init_adc_no_lib
   _lcd_gotoxy
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _lcd_putc
     _delay_ms
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_puts
     _lcd_putc
       _delay_ms
       _lcd_gotoxy
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
   _read_adc_voltage
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     _read_adc_raw_no_lib
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___flneg (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___flge
       ___fladd (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___fltol
       ___fladd (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___flneg (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _update_hysteresis

 _highIsr (ROOT)
   _Timer3_int
     _reloadTimer3
     i2___xxtofl
     i2_delay_ms
     i2_set_pwm1_percent
       i2___fladd
       i2___fldiv
         i2___flmul (ARG)
       i2___flmul
       i2___fltol
         i2___fladd (ARG)
       i2___xxtofl (ARG)
       i2_set_pwm1_raw (ARG)
   _modeschange1
   _update_cooking_time
     i2___awdiv
     i2___lwdiv
       i2___wmul (ARG)
     i2___wmul
     i2_reloadTimer0
   i2_delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     4F      5A       7       35.2%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     62      74       5       90.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4D      5F       1       75.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12D      34        0.0%
DATA                 0      0     12D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun May 21 11:45:49 2023

           ?_read_adc_voltage 00C0                i2_reloadTimer0 4E7C                  ___fldiv@aexp 00BF  
                ___fldiv@bexp 00BE                             _t 00E6                             _v 005C  
                ___fldiv@sign 00B3            ??_read_adc_voltage 00C4                            l95 4D60  
              ?_lcd_send_byte 0088                            _p1 014F                  ___awdiv@sign 008B  
                          _sp 00E2           ___wmul@multiplicand 0082            i2___lwdiv@dividend 0007  
                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                   __CFG_OSC$XT 000000  
                 __CFG_LVP$ON 000000                   __CFG_WDT$ON 000000                           l102 4C6A  
                         l113 4BE2                           l305 13A6                           l330 16CA  
                         l306 144A                           l308 1454                           l326 16E0  
                         l334 16B4                           l338 169E                           l259 3CB6  
                         l349 17B2                           l716 3852                           l820 353A  
                         l813 3476                           l469 0950                           l726 368C  
                         l814 34BA                           l905 4632                           l948 48D6  
                         l990 1A70                           l991 1A3C                           l895 438A  
                         l989 1A7C                  __CFG_CPB$OFF 000000                           _PR2 000FCB  
                __CFG_CPD$OFF 000000                           _TON 004E                   i2___fladd@a 0005  
                 i2___fladd@b 0001                           _lcd 000F83                   i2___fldiv@a 001E  
                 i2___fldiv@b 001A                           _hys 00EC                           _tog 0155  
                ___awmod@sign 0085                    i2___xxtofl 39BC                           prod 000FF3  
   read_adc_voltage@raw_value 00C8                           wreg 000FE8                   i2___flmul@a 0005  
                 i2___flmul@b 0001                  ___flmul@aexp 009F                  ___flmul@bexp 00A0  
                  i2_delay_ms 4E42                  ___flmul@sign 009A                  ___flmul@temp 00A5  
                ___flmul@prod 00A1                   lcd_gotoxy@x 008B                   lcd_gotoxy@y 008A  
                ___fltol@exp1 00D1                          l1006 1BF0                          l1111 3332  
                        l1015 1C84                          l1112 334A                          l1104 32D6  
                        l1045 2418                          l1054 2450                          l1056 24BE  
                        l1048 23C0                          l1082 2094                          l1075 1DF8  
                        l1092 21A6                          l1084 2102                          l1097 322A  
                        l4111 1D8C                          l4103 1D62                          l4041 2414  
                        l4017 2316                          l4009 22E8                          l4121 1DBC  
                        l4113 1D9E                          l4035 23CC                          l4027 2394  
                        l4211 218C                          l4053 2464                          l4221 21D0  
                        l4205 2152                          l4133 1E0C                          l4109 1D86  
                        l4063 24B8                          l4047 243A                          l4127 1DE0  
                        l5015 34F0                          l4303 45A0                          l5113 363A  
                        l5105 359A                          l4081 2572                          l4073 250E  
                        l4209 2178                          l4137 1E20                          l4129 1DE6  
                        l4313 3EDA                          l4241 4254                          l5041 3728  
                        l5025 3520                          l6001 0D3C                          l5203 3262  
                        l4219 21C6                          l4251 4284                          l4235 423E  
                        l5035 3702                          l5027 3530                          l5019 3504  
                        l6003 0D48                          l5109 35E8                          l5205 326A  
                        l4077 253C                          l4341 3F88                          l4333 3F5C  
                        l5141 4324                          l6021 0E36                          l5119 36D8  
                        l5127 4CFE                          l5215 3314                          l5207 327A  
                        l4087 2582                          l4079 2550                          l4343 3F92  
                        l4247 4272                          l4263 42C2                          l3703 4C72  
                        l5063 37D0                          l5055 377C                          l6015 0D9C  
                        l6023 0E4C                          l5217 3324                          l5209 32B8  
                        l4089 2586                          l4185 20A8                          l4329 3F48  
                        l4249 427E                          l5401 4932                          l5137 430E  
                        l5161 45DC                          l6009 0D6E                          l6025 0E6C  
                        l6113 15D6                          l4195 20FC                          l4179 207E  
                        l4347 3FAE                          l4339 3F78                          l3707 4D52  
                        l4267 42D6                          l4259 42B4                          l5139 431E  
                        l5075 3808                          l4291 455A                          l4283 4534  
                        l6019 0E30                          l5229 339C                          l3901 1C22  
                        l3741 4B2E                          l5413 4E0C                          l5149 4378  
                        l5165 4620                          l5157 45C6                          l5085 3838  
                        l6141 16BE                          l3911 1C44                          l3807 1980  
                        l5175 4886                          l3743 4B32                          l3751 4B42  
                        l5159 45D6                          l5087 3848                          l5079 381C  
                        l4295 457E                          l4287 4548                          l4279 4524  
                        l6207 188C                          l6135 167C                          l6143 16D4  
                        l5177 4892                          l5601 3CA0                          l3737 4AC6  
                        l3745 4B36                          l3753 4B5E                          l5409 4DF8  
                        l4289 4554                          l6161 174C                          l6137 1692  
                        l6145 16EA                          l3907 1C38                          l3851 1A56  
                        l3771 18DE                          l5187 48C8                          l5179 4898  
                        l3747 4B3A                          l4299 458C                          l6171 1778  
                        l6163 175A                          l6147 16F6                          l6139 16A8  
                        l5197 323A                          l3941 1CEC                          l3917 1C58  
                        l3837 19BC                          l3765 18BA                          l5701 01B2  
                        l5517 4980                          l6077 147E                          l3951 1D1E  
                        l3927 1C7E                          l3919 1C5E                          l3855 1A60  
                        l3783 1914                          l3775 18E8                          l5607 3CC2  
                        l5383 48F8                          l4911 2DDC                          l5711 01EA  
                        l5703 01B8                          l5527 49B0                          l5519 4986  
                        l6175 178A                          l6159 174A                          l6095 1534  
                        l3945 1D0E                          l3937 1CDA                          l3873 1ADE  
                        l3865 1AA0                          l3849 1A50                          l5561 3B2E  
                        l5393 491C                          l5713 01F6                          l6193 1826  
                        l3875 1AE4                          l3883 1B00                          l3795 194C  
                        l5651 3986                          l5387 4902                          l5803 05B0  
                        l5723 0264                          l5715 01FC                          l6187 17F6  
                        l3957 1D32                          l3949 1D1A                          l3893 1BD0  
                        l3789 1928                          l3973 222C                          l5653 3990  
                        l5645 393A                          l5565 3B44                          l5557 3B1E  
                        l5397 4928                          l4933 100A                          l5821 06C4  
                        l5741 02F8                          l5733 02A8                          l3879 1AEE  
                        l3799 1956                          l3967 2208                          l5647 3950  
                        l5639 38D0                          l5575 3B70                          l4919 2ED4  
                        l4951 1290                          l4943 110E                          l5903 0984  
                        l5823 06CA                          l5807 05E2                          l5735 02C0  
                        l5727 028A                          l5671 006A                          l3993 228A  
                        l3977 2236                          l5649 395A                          l5593 3C74  
                        l5569 3B5A                          l4881 4A40                          l5817 064C  
                        l5753 036A                          l5729 0296                          l5745 0312  
                        l5665 004A                          l3987 2266                          l5579 3B84  
                        l4883 4A4E                          l4939 10DC                          l5907 09E6  
                        l5851 07C8                          l5843 078E                          l5835 0716  
                        l5763 03BC                          l5747 0350                          l5691 0142  
                        l5667 0060                          l5659 002A                          l3997 2294  
                        l5597 3C8A                          l5589 3C64                          l4885 4A5C  
                        l4957 1362                          l5925 0B02                          l5917 0ADA  
                        l5677 009E                          l5685 0118                          l4879 4A24  
                        l5943 0B7A                          l5919 0AE8                          l5871 0852  
                        l5839 0766                          l5791 04F6                          l5927 0B10  
                        l5695 018A                          l4889 4A68                          l4985 3422  
                        l4969 4DC4                          l5961 0BF4                          l5945 0B80  
                        l5937 0B54                          l5873 085A                          l5881 08F6  
                        l5857 07E2                          l5865 0812                          l5793 050C  
                        l5697 01A2                          l4899 4152                          l4979 33E8  
                        l5971 0C58                          l5891 0932                          l5883 0904  
                        l5867 0826                          l5859 07F8                          l5795 0548  
                        l5787 04C4                          l5779 0440                          l5965 0C24  
                        l5957 0BCC                          l5797 055E                          l5983 0CD2  
                        l5895 0954                          l5993 0D14                          l5985 0CDC  
                        l5977 0C90                          l5889 091E                          l5979 0C9A  
                        STR_1 FF83                          STR_2 FFA3                          STR_3 FFDB  
                        STR_4 FFFA                          STR_5 FFF6                          STR_6 FF98  
                        STR_7 FFE1                          STR_8 FFFA                          STR_9 FFF6  
                        u4015 4A8E                          u4120 1A06                          u4016 4A90  
                        u4130 1A1E                          u4140 1A20                          _PIE1 000F9D  
                        u6021 33C4                          u6041 33FE                          u4620 2522  
                        u7100 0236                          u4810 2166                          u4730 2020  
                        u7107 022C                          u4735 2014                          u7160 02EA  
                        u7430 0948                          u7167 02E0                          u4970 3EFA  
                        u6900 3B7C                          i2l95 4E58                          u4975 3EEE  
                        u7930 17AC                          u7940 17AE                          u7977 4ABE  
                        u7987 4D54                          _TMR3 000FB2              ?_lcd_send_nibble 0001  
                        _main 1394                          _init 49BA                          fsr0h 000FEA  
                        fsr1h 000FE2            i2___lwdiv@quotient 000B                          fsr0l 000FE9  
                        fsr2h 000FDA                          indf1 000FE7                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          btemp 0060  
                        pclat 000FFA                          prodh 000FF4                          prodl 000FF3  
                        start 0016                 __CFG_IESO$OFF 000000                  i2___fltol@f1 0015  
             ___fldiv@new_exp 00B8        __end_ofi2_reloadTimer0 4E86                  _sprintf$1800 0100  
               __CFG_MCLRE$ON 000000                  ___param_bank 000010              _set_pwm1_percent 409C  
        __end_of_delay_cycles 4C9E                 ___fltol@sign1 00D0               __end_of___fladd 1D44  
                       ?_main 0001                         ?_init 0001               __end_of___fldiv 25AA  
             __end_of___awdiv 42E0               __end_of___flneg 4D10                         STR_10 FFD5  
                       STR_11 FFD1                         STR_12 FFCF                         STR_20 FFB5  
                       STR_13 FFCB                         STR_21 FFAE                         STR_14 FFC9  
                       STR_15 FFE7                         STR_16 FFEC                         STR_17 FFF1  
                       STR_18 FFBC                         STR_19 FFC3               __end_of___awmod 45AA  
             __end_of___flmul 21EA               __end_of___flsub 4C5A               __end_of___fltol 3FC0  
             __end_of___lldiv 439C                         _T0CON 000FD5               ___awdiv@divisor 0088  
             __end_of___llmod 4644                         _T2CON 000FCA                i2_set_pwm1_raw 4D76  
                       _T3CON 000FB1               __end_of___lwdiv 48E0                         i2l300 41E6  
                       i2l273 4724                         i2l290 419C                         i2l292 41B2  
                       i2l294 41CA                         i2l297 41DC                         i2l948 4B1E  
             ___awdiv@counter 008A                         i2l990 2A4A                         i2l991 2A28  
                       i2l989 2A52                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TMR3H 000FB3                         _TMR3L 000FB2                         _PORTD 000F83  
     read_adc_voltage@channel 00CA                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TRISE 000F96  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                 i2___fladd@grs 0014  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000               __end_of_highIsr 4222  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000         __end_of_decrementTime 3D8E               __end_of_dpowers FF83  
                       _error 00EA                         _scale 0E7A               __end_of_isdigit 4DCE  
                       _modes 005F                         _hours 0054               _init_adc_no_lib 4E66  
             __end_of_buzzerA 4868                 i2___fldiv@grs 002D                 i2___fldiv@rem 0027  
                       _timer 005A                         tablat 000FF5              __end_ofi2___wmul 4E42  
      __size_of_incrementTime 0144                         status 000FD8       read_adc_voltage@voltage 00C4  
             __end_of_sprintf 0E7A                 i2___flmul@grs 000E                   i2delay_ms@i 0003  
                 i2delay_ms@n 0001            __size_ofi2___fladd 033C            __size_ofi2___fldiv 02B4  
          __size_ofi2___awdiv 0084            __size_ofi2___flmul 0350                __CFG_PBADEN$ON 000000  
          __size_ofi2___fltol 00DC            __size_ofi2___lwdiv 0052               ?i2_reloadTimer0 0001  
  __end_ofi2_set_pwm1_percent 4454               __initialization 4B78                  __end_of_main 189C  
             ??_lcd_send_byte 0089                  __end_of_init 4A1E        __end_ofi2_set_pwm1_raw 4DA4  
                      ??_main 00E2                        ??_init 0080       i2set_pwm1_percent@value 0033  
               __activetblptr 000003          __size_of__tdiv_to_l_ 019E                   ?i2___xxtofl 0001  
                 ?i2_delay_ms 0001                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0              ___llmod@dividend 008D                        ?_scale 00A7  
                      _ADRESH 000FC4                        _ADRESL 000FC3                        _CCPR1L 000FBE  
            ___awdiv@dividend 0086            __size_of_Auto_Heat 0158                        i2l1006 2B40  
                      i2l1111 3AB4                        i2l1015 2BA4                        i2l1112 3AC8  
                      i2l1104 3A78                        i2l1045 30B8                        i2l1056 3124  
                      i2l1075 262A                        i2l1092 28C6                        i2l1084 2840  
                      i2l1097 39FA                        i2l4413 292A                        i2l4511 2A92  
                      i2l4503 2A6E                        i2l5311 4AF8                        i2l4513 2A96  
                      i2l4521 2AA8                        i2l4433 296E                        i2l4409 2926  
                      i2l5235 4E4C                        i2l4531 2B30                        i2l4611 2F58  
                      i2l5307 4AEC                        i2l5341 3A60                        i2l4445 2992  
                      i2l4437 2972                        i2l4701 3120                        i2l5309 4AF4  
                      i2l5335 3A28                        i2l4711 3168                        i2l4631 2F98  
                      i2l4615 2F5C                        i2l4375 403A                        i2l4359 3FDE  
                      i2l5271 4786                        i2l5319 4B14                        i2l5361 3AFA  
                      i2l5337 3A2E                        i2l5329 3A0A                        i2l4393 408A  
                      i2l4385 4062                        i2l5249 4446                        i2l5281 47A8  
                      i2l5265 4776                        i2l5347 3A9E                        i2l5339 3A3A  
                      i2l4539 2B64                        i2l4555 2B84                        i2l4475 29CE  
                      i2l4715 318C                        i2l4635 2F9C                        i2l4387 406E  
                      i2l4379 404A                        i2l5349 3AAA                        i2l4565 2BA0  
                      i2l4549 2B7A                        i2l4557 2B88                        i2l4725 31C2  
                      i2l4717 319A                        i2l4389 4074                        i2l5277 479C  
                      i2l5293 47CE                        i2l4583 2C10                        i2l4575 2BEA  
                      i2l4487 2A36                        i2l4727 31C4                        i2l4719 31B6  
                      i2l4655 300A                        i2l4647 2FE2                        i2l4823 2808  
                      i2l4751 25EA                        i2l5631 4738                        i2l5471 4486  
                      i2l5279 47A4                        i2l4489 2A3A                        i2l4673 3090  
                      i2l4665 3068                        i2l4833 283C                        i2l4817 27EA  
                      i2l5617 46EE                        i2l5297 47DC                        i2l5289 47C4  
                      i2l5545 3E0A                        i2l4587 2C18                        i2l4579 2BF6  
                      i2l4691 30EC                        i2l4843 2884                        i2l4771 2636  
                      i2l4747 25D6                        i2l5483 44D4                        i2l5475 44A0  
                      i2l5467 446E                        i2l4589 2C1A                        i2l4685 30CE  
                      i2l4765 2616                        i2l4749 25DA                        i2l4679 30B6  
                      i2l4847 28A2                        i2l4775 2648                        i2l4767 261A  
                      i2l5487 44EE                        i2l5479 44BA                        i2l4849 28B0  
                      i2l4859 28E4                        _TMR3IE 007D01                        _TMR3IF 007D09  
            __end_of___xxtofl 33AE              __end_of_delay_ms 4D76                i2___fladd@aexp 0012  
              i2___fladd@bexp 0013                __CFG_XINST$OFF 000000              __end_of__powers_ FF5B  
                  _Timer3_int 46D4              __end_of_lcd_init 4956                        ___flge 354C  
            __end_of_lcd_putc 4A80              __end_of_lcd_puts 4E1C                     ??___fladd 00BC  
                      ___wmul 4D10                     ??___fldiv 00AF                     ??___awdiv 008A  
                   ??___flneg 0084                __CFG_STVREN$ON 000000                     ??___awmod 0084  
                   ??___flmul 0096                     ??___flsub 00D0                     ??___fltol 00CC  
                   ??___lldiv 0088                     ??___llmod 0095                     ??___lwdiv 008A  
                      _cooker 0050     i2set_pwm1_percent@raw_val 003B                        _fround 2C36  
                      _buzzer 0153                        clear_0 4B7E                        clear_1 4B8A  
                      clear_2 4B96               ?i2_set_pwm1_raw 0001              ___awdiv@quotient 008C  
              i2___fldiv@aexp 0032                i2___fldiv@bexp 0031               ___awmod@divisor 0082  
              i2___fldiv@sign 0026               ___awmod@counter 0084                 _incrementTime 3B0C  
                   ??_highIsr 0040                i2___awdiv@sign 0006       __end_of_init_adc_no_lib 4E72  
           __end_ofi2___fladd 2C36                     ??_isdigit 0080             __end_ofi2___fldiv 31E0  
           __end_ofi2___awdiv 47E6                     ??_buzzerA 0084             __end_ofi2___flmul 28FA  
           __end_ofi2___fltol 409C             __end_ofi2___lwdiv 4B28                  __mediumconst FEF2  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
           _update_hysteresis 4956                     ??_sprintf 00DE            ?_update_hysteresis 0001  
              i2___flmul@aexp 0012                i2___flmul@bexp 0013                i2___flmul@sign 000D  
              i2___flmul@temp 0018                i2___flmul@prod 0014                    ___flge@ff1 00C8  
                  ___flge@ff2 00CC                  ___xxtofl@arg 0090                  ___xxtofl@exp 008F  
                ___xxtofl@val 0086                    __accesstop 0080       __end_of__initialization 4BBC  
              i2___fltol@exp1 001E                    ___flneg@f1 0080           ??_update_hysteresis 0080  
               ___rparam_used 000001                    ___fltol@f1 00C8                 ?_modeschange1 0001  
         __size_ofi2___xxtofl 0150                __pcstackCOMRAM 0001           __size_ofi2_delay_ms 0024  
       __size_of_delay_cycles 0044                  __pidataBANK0 4E90             __end_of_Auto_Heat 39BC  
               __end_of_scale 1394                ?_incrementTime 0001         i2set_pwm1_percent@tmp 0037  
                   ?i2___wmul 0001  __size_of_update_cooking_time 0126                    __div_to_l_ 36DC  
   __end_of_update_hysteresis 49BA     __size_of_read_adc_voltage 0090             lcd_gotoxy@address 008C  
             __div_to_l_@exp1 008D               __div_to_l_@cntr 008C                       ??_scale 00AB  
             __div_to_l_@quot 0088                  sprintf@width 011A      __end_of_set_pwm1_percent 4160  
                  __pbssBANK0 00E2                    __pbssBANK1 014F   __end_of_read_adc_raw_no_lib 4C12  
                _delay_cycles 4C5A                 __div_to_l_@f1 0080                 __div_to_l_@f2 0084  
              ??_modeschange1 0001                 ?_reloadTimer0 0001                 ?_reloadTimer3 0001  
                 ?_Timer3_int 0001                lcd_send_byte@n 0088                       ?___flge 00C8  
                     ?___wmul 0080              lcd_send_nibble@n 0087                       _CCP1CON 000FBD  
                     ?_fround 00A7                    ??i2___wmul 0005              ?_init_adc_no_lib 0001  
                     _INTCON2 000FF1                       _INTCON3 000FF0                     ?___xxtofl 0086  
                   ?_delay_ms 0080                    _lcd_gotoxy 4B28                     ?_lcd_init 0001  
                   ?_lcd_putc 0001                     ?_lcd_puts 008E              ??i2_reloadTimer0 0001  
              ??_reloadTimer0 0080                ??_reloadTimer3 0001               i2___fladd@signs 0011  
           __end_of__npowers_ FF27                       __Hparam 0000                    _scale$1799 00AB  
                     __Lparam 0000      __size_of_lcd_send_nibble 0028               __size_of___flge 0190  
                     ___fladd 189C                       ___fldiv 21EA                       ___awdiv 4222  
                     ___flneg 4CD8               ??_incrementTime 008E                       ___awmod 4508  
                     ___flmul 1D44                       ___flsub 4C12                       ___fltol 3EB4  
                     ___lldiv 42E0               __size_of___wmul 0036                       ___llmod 45AA  
                     ___lwdiv 4868                 ?_set_pwm1_raw 0080                       __pcinit 4B78  
             __size_of_fround 02F6                       __ramtop 1000                       __ptext0 1394  
                     __ptext1 4956                       __ptext2 001A                       __ptext3 0E7A  
                     __ptext4 4DA4                       __ptext5 2C36                       __ptext6 4508  
                     __ptext7 33AE                       __ptext8 36DC                       __ptext9 45AA  
                     _highIsr 0008                     _T0CONbits 000FD5                   ?__div_to_l_ 0080  
  __size_of_update_hysteresis 0064                       _dpowers FF5B            i2_set_pwm1_percent 439C  
                   _T2CONbits 000FCA                       _isdigit 4DA4                  ??i2___xxtofl 0005  
                  ??___xxtofl 008A                     _T3CONbits 000FB1                       _buzzerA 47E6  
            ___awmod@dividend 0080                       _minutes 0056                       _seconds 0058  
                ??i2_delay_ms 0003                    ??_delay_ms 0082           __size_of_Timer3_int 008E  
                     _sprintf 001A                    ??_lcd_init 008A           ?i2_set_pwm1_percent 0033  
                     _voltage 0156                __pintcode_body 4160                    ??_lcd_putc 008D  
                  ??_lcd_puts 0090          end_of_initialization 4BBC                       int_func 4160  
         i2___wmul@multiplier 0001          lcd_send_byte@cm_data 0089                i2___xxtofl@arg 000B  
              i2___xxtofl@exp 000A                i2___xxtofl@val 0001               ___lldiv@divisor 0084  
             ___lldiv@counter 008C              ??i2_set_pwm1_raw 0003            __end_ofi2___xxtofl 3B0C  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE          ??i2_set_pwm1_percent 0037                ??_set_pwm1_raw 0082  
          __end_ofi2_delay_ms 4E66        __size_of_decrementTime 013E                __tdiv_to_l_@f1 0080  
              __tdiv_to_l_@f2 0084         __end_of_lcd_send_byte 4AD6                 ??__tdiv_to_l_ 0088  
                   _PORTAbits 000F80                     _PORTBbits 000F81                     _PORTCbits 000F82  
                   _PORTEbits 000F84           set_pwm1_percent@tmp 00D6                   ___fladd@grs 00C7  
        __end_of_modeschange1 4508                 ___xxtofl@sign 008E              _read_adc_voltage 4644  
                   _TRISCbits 000F94                   ?_lcd_gotoxy 008A          _Percent_Heat_Counter 005E  
                 ___fldiv@grs 00BA                    main@Buffer 011F                   ___fldiv@rem 00B4  
             i2___fltol@sign1 001D                     i2___fladd 28FA                     i2___fldiv 2F2C  
                   i2___awdiv 4762               _LCD_INIT_STRING 00F0                     i2___flmul 25AA  
                   i2___fltol 3FC0             i2___lwdiv@divisor 0009                     i2___lwdiv 4AD6  
           i2___lwdiv@counter 000D                   ___flmul@grs 009B                   _CCP1CONbits 000FBD  
         _update_cooking_time 3D8E            i2___awdiv@dividend 0001           __size_of__div_to_l_ 0188  
              __end_of___flge 36DC                __end_of___wmul 4D46                 delay_cycles@n 0083  
               delay_cycles@x 0084             ??_lcd_send_nibble 0086                __end_of_fround 2F2C  
        ?_update_cooking_time 0001                     _Auto_Heat 3864              i2___wmul@product 0005  
        __end_of_reloadTimer0 4E7C          __end_of_reloadTimer3 4E90           start_initialization 4B78  
          i2___awdiv@quotient 0007             __size_ofi2___wmul 0026           __end_of__tdiv_to_l_ 354C  
                  ?i2___fladd 0001                    ?i2___fldiv 001A                    ?i2___awdiv 0001  
                  ?i2___flmul 0001                    ?i2___fltol 0015                 _decrementTime 3C50  
                  ?i2___lwdiv 0007             ?_set_pwm1_percent 00D2            ??_set_pwm1_percent 00D6  
             ___llmod@divisor 0091               ___llmod@counter 0095                  ??_Timer3_int 003D  
                    ??___flge 00D0           __size_of_lcd_gotoxy 0050                      ??___wmul 0084  
                 __pdataBANK0 00F0  read_adc_raw_no_lib@raw_value 0084              __CFG_LPT1OSC$OFF 000000  
                    ??_fround 00AB                 sprintf@tmpval 010A         ??_update_cooking_time 000E  
                  ?_Auto_Heat 0001                     ___fladd@a 00B8                     ___fladd@b 00B4  
                  fround@prec 00B3                     ___fldiv@a 00AB                     ___fldiv@b 00A7  
                   ___flmul@a 0092                     ___flmul@b 008E                   __pbssCOMRAM 004E  
                   ___flsub@a 00CC                     ___flsub@b 00C8                 __pcstackBANK0 0080  
               __pcstackBANK1 0100             __size_of___xxtofl 01CE                ?_decrementTime 0001  
                _isdigit$1426 0081             __size_of_delay_ms 0030            __end_of_Timer3_int 4762  
        __end_of_set_pwm1_raw 4CD8             __size_of_lcd_init 0076                   sprintf@flag 0114  
           __size_of_lcd_putc 0062             __size_of_lcd_puts 0026                   sprintf@fval 0116  
                 sprintf@prec 011C                     _main$1103 013F                     _main$1124 0143  
                   _main$1125 0145                     _main$1109 0141                     _main$1126 0147  
                   _main$1127 0149                     _main$1128 014B                     _main$1129 014D  
            ___lwdiv@dividend 0086             __CFG_CCP2MX$PORTC 000000                     __pintcode 0008  
__size_of_read_adc_raw_no_lib 004C                 __pmediumconst FEF2                      ?___fladd 00B4  
                    ?___fldiv 00A7                      ?___awdiv 0086                      ?___flneg 0080  
                    ?___awmod 0080                      ?___flmul 008E                      ?___flsub 00C8  
                    ?___fltol 00C8                      ?___lldiv 0080                      ?___llmod 008D  
                   __npowers_ FEF3                      ?___lwdiv 0086         __size_of_modeschange1 00B4  
                 __tdiv_to_l_ 33AE                      ?_highIsr 0001                  ??__div_to_l_ 0088  
                    ?_isdigit 0001                      ?_buzzerA 0001              ___lwdiv@quotient 008A  
                 ??i2___fladd 0009                   ??i2___fldiv 0022                   ??i2___awdiv 0005  
                    ?_sprintf 00D4                   ??i2___flmul 0009                   ??i2___fltol 0019  
              __size_of_scale 051A                   ??i2___lwdiv 000B      __size_of_init_adc_no_lib 000C  
              ___wmul@product 0084                     delay_ms@i 0082                     delay_ms@n 0080  
                _modeschange1 4454                      i2u520_40 2A0E                      i2u504_40 3FFC  
                    i2u504_45 3FF2                      i2u521_40 2A10            __end_of__div_to_l_ 3864  
                    _PIR2bits 000FA1      __end_of_read_adc_voltage 46D4                      i2u519_40 29FE  
                    i2u580_40 27AC                      i2u580_45 27A2                      i2u569_40 3176  
                    i2u588_40 2892                      i2u697_40 46E4                      _RCONbits 000FD0  
                    i2u799_47 4E4E             i2___fldiv@new_exp 002B              __CFG_WDTPS$32768 000000  
  read_adc_raw_no_lib@channel 0086         __size_of_reloadTimer0 000A         __size_of_reloadTimer3 000A  
       __end_of_incrementTime 3C50                   _cookingTime 0052                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0080                   ??_Auto_Heat 00DC                      i2___wmul 4E1C  
                   lcd_init@i 008A                     lcd_putc@c 008D             i2___awdiv@divisor 0003  
             ??_decrementTime 008E                     lcd_puts@s 008E             i2___awdiv@counter 0005  
                ??_lcd_gotoxy 008B                   _INTCON2bits 000FF1                   _INTCON3bits 000FF0  
                   copy_data0 4BB0               _lcd_send_nibble 4DCE                  _reloadTimer0 4E72  
                _reloadTimer3 4E86                      __Hrparam 0000         set_pwm1_raw@raw_value 0080  
                    __Lrparam 0000            __CFG_BOREN$SBORDIS 000000       __size_ofi2_reloadTimer0 000A  
          __end_of_lcd_gotoxy 4B78   __size_ofi2_set_pwm1_percent 00B8              __size_of___fladd 04A8  
            __size_of___fldiv 03C0              __size_of___awdiv 00BE              __size_of___flneg 0038  
            __size_of___awmod 00A2              __size_of___flmul 04A6              __size_of___flsub 0048  
            __size_of___fltol 010C         i2___wmul@multiplicand 0003              __size_of___lldiv 00BC  
            __size_of___llmod 009A              __size_of___lwdiv 0078                   _fround$1797 00AF  
                 _fround$1798 00AB              __size_of_highIsr 421A                    sprintf@len 0108  
                  sprintf@exp 0112                    sprintf@val 010E                      ___xxtofl 31E0  
       __size_of_set_pwm1_raw 003A              __size_of_isdigit 002A                      _delay_ms 4D46  
            __size_of_buzzerA 0082               ___lwdiv@divisor 0088               ___lwdiv@counter 008C  
                    __ptext10 42E0                      __ptext11 4C12                      __ptext20 4C5A  
                    __ptext12 4644                      __ptext21 4E66                      __ptext13 4BC6  
                    __ptext30 4D46                      __ptext22 49BA                      __ptext14 4DF6  
                    __ptext31 3864                      __ptext23 4E72                      __ptext15 4A1E  
                    __ptext40 354C                      __ptext32 409C                      __ptext24 3B0C  
                    __ptext16 4B28                      __ptext33 4C9E                      __ptext25 3C50  
                    __ptext17 48E0                      __ptext50 4D76                      __ptext42 3D8E  
                    __ptext34 3EB4                      __ptext26 4D10                      __ptext18 4A80  
                    __ptext51 3FC0                      __ptext43 4E7C                      __ptext35 1D44  
                    __ptext27 4868                      __ptext19 4DCE                      __ptext52 25AA  
                    __ptext44 4E1C                      __ptext36 21EA                      __ptext28 4222  
                    __ptext53 2F2C                      __ptext45 4AD6                      __ptext37 189C  
                    __ptext29 47E6                      __ptext54 28FA                      __ptext46 4762  
                    __ptext38 31E0                      __ptext55 4E42                      __ptext47 4454  
                    __ptext39 4CD8                      __ptext56 39BC                      __ptext48 46D4  
                    __ptext57 4E86                      __ptext49 439C                      __powers_ FF27  
                    _lcd_init 48E0                      _lcd_putc 4A1E                      _lcd_puts 4DF6  
            __size_of_sprintf 0E60       set_pwm1_percent@raw_val 00DA        __size_of_lcd_send_byte 0056  
               ?_delay_cycles 0001                 __size_of_main 0508                 __size_of_init 0064  
           ??_init_adc_no_lib 0080                   _modeschange 00EE                      int$flags 0060  
   __size_of_set_pwm1_percent 00C4                  _set_pwm1_raw 4C9E       __size_ofi2_set_pwm1_raw 002E  
                  _INTCONbits 000FF2                      isdigit@c 0082           _read_adc_raw_no_lib 4BC6  
                    scale@scl 00AF                      intlevel2 0000                     sprintf@ap 0106  
                   sprintf@cp 0104       __end_of_lcd_send_nibble 4DF6              __tdiv_to_l_@exp1 0090  
                   sprintf@sp 00D4              __tdiv_to_l_@cntr 008F                ??_delay_cycles 0080  
            __tdiv_to_l_@quot 008B               i2___xxtofl@sign 0009              ___lldiv@dividend 0080  
        ?_read_adc_raw_no_lib 0080   __end_of_update_cooking_time 3EB4                 _lcd_send_byte 4A80  
                ?__tdiv_to_l_ 0080                      sprintf@c 011E                      sprintf@f 00D6  
            ___lldiv@quotient 0088         set_pwm1_percent@value 00D2                 ___fladd@signs 00C4  
                ___fladd@aexp 00C5                  ___fladd@bexp 00C6       i2set_pwm1_raw@raw_value 0001  
       ??_read_adc_raw_no_lib 0082  
